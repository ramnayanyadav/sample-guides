"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CometChatThreadReplies = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _Shared = require("../../Shared");
var _style = require("./style");
var _ = require("../..");
var CometChatThreadReplies = function CometChatThreadReplies(props) {
  var _React$useState = _react["default"].useState(false),
    _React$useState2 = (0, _slicedToArray2["default"])(_React$useState, 2),
    reply = _React$useState2[0],
    setReply = _React$useState2[1];

  // const toggleReply = () => {
  //   context.FeatureRestriction.isThreadedMessagesEnabled()
  //     .then((response) => {
  //       if (response !== reply) {
  //         setReply(response);
  //       }
  //     })
  //     .catch((error) => {
  //       if (reply !== false) {
  //         setReply(false);
  //       }
  //     });
  // };

  //React.useEffect(toggleReply);

  var viewThread = function viewThread() {
    setReply(!reply);
  };
  var replyCount = props.messageObject.replyCount;
  var replyText = replyCount === 1 ? "View ".concat(replyCount, " ").concat((0, _Shared.localize)("REPLY")) : "View ".concat(replyCount, " ").concat((0, _Shared.localize)("REPLIES"));
  var replies = /*#__PURE__*/_react["default"].createElement("span", {
    style: (0, _style.replyCountStyle)(props),
    className: "replycount",
    onClick: viewThread
  }, replyText);
  if (props.messageObject.hasOwnProperty("replyCount") === false) {
    replies = null;
  }

  //if threadedchats feature is disabled
  // if (reply === false) {
  //   replies = null;
  // }

  var listItem = function listItem() {
    var listItemStyle = {
      width: "100%",
      height: "auto",
      background: "transparent",
      iconTransform: "rotate(270deg)",
      borderRadius: "8px",
      textFont: "400 15px Inter, sans-serif",
      textColor: "rgba(20,20,20, 0.8)",
      iconTint: "rgba(20,20,20,0.46)",
      iconBackground: "rgba(20,20,20, 0.46)"
    };
    return /*#__PURE__*/_react["default"].createElement(_.CometChatListItem, {
      iconURL: props.iconURL,
      tail: props.tail,
      text: replies,
      style: listItemStyle
    });
  };
  return listItem();
};
exports.CometChatThreadReplies = CometChatThreadReplies;
CometChatThreadReplies.defaultProps = {
  messageObject: {},
  text: "",
  tail: "",
  iconURL: "",
  style: {
    width: "",
    height: "",
    border: "0 none",
    borderRadius: "8px",
    background: "transparent",
    textFont: "400 15px Inter,sans-serif",
    textColor: "rgba(20,20,20, .8)",
    iconTint: "rgba(20,20,20,0.6)",
    iconBackground: "rgb(255,255,255)",
    iconBorder: "0 none",
    iconBorderRadius: "8px"
  },
  divider: "",
  onItemClick: function onItemClick() {}
};
CometChatThreadReplies.propTypes = {
  messageObject: _propTypes["default"].object,
  text: _propTypes["default"].string,
  tail: _propTypes["default"].string,
  iconURL: _propTypes["default"].object,
  style: _propTypes["default"].object,
  divider: _propTypes["default"].string,
  onItemClick: _propTypes["default"].func
};