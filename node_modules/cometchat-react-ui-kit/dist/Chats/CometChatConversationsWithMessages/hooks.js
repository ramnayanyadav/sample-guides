"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Hooks = void 0;

var _react = require("react");

var _ = require("../../../");

var _CometChatConversationEvents = require("../CometChatConversationEvents");

var Hooks = function Hooks(onConversationClickHandler, updateMessageList, backButtonClickHandler, conversationRef, activeConversation) {
  /**ids */
  var onItemClickId = "onItemClick_" + new Date().getTime();
  var onDeleteConversationId = "onDeleteConversation_" + new Date().getTime();
  var onMessageReadId = "onMessageRead_" + new Date().getTime();
  var onMessageSentId = "onMessageSent_" + new Date().getTime();
  var onBackButtonClickId = "onBackButtonClick_" + new Date().getTime();
  (0, _react.useEffect)(function () {
    _CometChatConversationEvents.CometChatConversationEvents.addListener(_CometChatConversationEvents.CometChatConversationEvents.onItemClick, onItemClickId, onConversationClickHandler);

    _CometChatConversationEvents.CometChatConversationEvents.addListener(_CometChatConversationEvents.CometChatConversationEvents.onDeleteConversation, onDeleteConversationId, function (data) {
      return updateMessageList(data, activeConversation);
    });

    _.CometChatMessageEvents.addListener(_.CometChatMessageEvents.onMessageRead, onMessageReadId, function (data) {
      var _conversationRef$curr, _conversationRef$curr2;

      return conversationRef === null || conversationRef === void 0 ? void 0 : (_conversationRef$curr = conversationRef.current) === null || _conversationRef$curr === void 0 ? void 0 : (_conversationRef$curr2 = _conversationRef$curr.conversationListRef) === null || _conversationRef$curr2 === void 0 ? void 0 : _conversationRef$curr2.resetUnreadCount(data);
    });

    _.CometChatMessageEvents.addListener(_.CometChatMessageEvents.onMessageSent, onMessageSentId, function (data) {
      var _conversationRef$curr3, _conversationRef$curr4;

      return conversationRef === null || conversationRef === void 0 ? void 0 : (_conversationRef$curr3 = conversationRef.current) === null || _conversationRef$curr3 === void 0 ? void 0 : (_conversationRef$curr4 = _conversationRef$curr3.conversationListRef) === null || _conversationRef$curr4 === void 0 ? void 0 : _conversationRef$curr4.updateLastMessage(data === null || data === void 0 ? void 0 : data.message);
    });

    _.CometChatMessageEvents.addListener(_.CometChatMessageEvents.onBackButtonClick, onBackButtonClickId, backButtonClickHandler);

    return function () {
      _CometChatConversationEvents.CometChatConversationEvents.removeListener(_CometChatConversationEvents.CometChatConversationEvents.onItemClick, onItemClickId);

      _CometChatConversationEvents.CometChatConversationEvents.removeListener(_CometChatConversationEvents.CometChatConversationEvents.onDeleteConversation, onDeleteConversationId);

      _CometChatConversationEvents.CometChatConversationEvents.removeListener(_.CometChatMessageEvents.onMessageRead, onMessageReadId);

      _CometChatConversationEvents.CometChatConversationEvents.removeListener(_.CometChatMessageEvents.onMessageSent, onMessageSentId);

      _CometChatConversationEvents.CometChatConversationEvents.removeListener(_.CometChatMessageEvents.onBackButtonClick, onBackButtonClickId);
    };
  }, [activeConversation]);
};

exports.Hooks = Hooks;