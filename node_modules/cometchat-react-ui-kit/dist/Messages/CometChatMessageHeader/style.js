"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.menuActionStyle = exports.listStyle = exports.iconStyle = exports.dataItemStyle = exports.chatThumbnailStyle = exports.chatOptionWrapStyle = exports.chatHeaderStyle = exports.chatDetailStyle = exports.backButtonStyle = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _Shared = require("../../Shared");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var chatHeaderStyle = function chatHeaderStyle(props, theme) {
  return _objectSpread(_objectSpread({}, new _Shared.BaseStyles({
    width: "100%",
    height: "auto",
    background: props.style.background || theme.palette.background[theme.palette.mode],
    border: props.style.border || "none",
    borderRadius: "none",
    activeBackground: "none"
  })), {}, {
    padding: "16px",
    zIndex: "3",
    display: "inline-flex",
    flexDirection: "row",
    justifyContent: "space-between"
  });
};

exports.chatHeaderStyle = chatHeaderStyle;

var chatDetailStyle = function chatDetailStyle(props) {
  return {
    display: "flex",
    flexDirection: "row",
    alignItems: "center",
    width: "calc(100% - 116px)",
    height: "auto"
  };
};

exports.chatDetailStyle = chatDetailStyle;

var backButtonStyle = function backButtonStyle(props) {
  return {
    WebkitMask: "url(".concat(props.backButtonIconURL, ") no-repeat left center"),
    backgroundColor: "".concat(props.style.backButtonIconTint),
    height: "24px",
    width: "24px",
    cursor: "pointer",
    padding: "16px"
  };
};

exports.backButtonStyle = backButtonStyle;

var chatThumbnailStyle = function chatThumbnailStyle() {
  return {
    display: "inline-block",
    flexShrink: "0",
    marginRight: "16px",
    position: "relative"
  };
};

exports.chatThumbnailStyle = chatThumbnailStyle;

var chatOptionWrapStyle = function chatOptionWrapStyle() {
  return {
    display: "flex",
    flexDirection: "row",
    justifyContent: "space-between",
    alignItems: "center",
    width: "auto"
  };
};

exports.chatOptionWrapStyle = chatOptionWrapStyle;

var menuActionStyle = function menuActionStyle(infoIcon) {
  return {
    outline: "0",
    border: "0",
    height: "24px",
    width: "24px",
    padding: "18px",
    borderRadius: "4px",
    alignItems: "center",
    display: "inline",
    justifyContent: "center",
    position: "relative",
    WebkitMask: "url(".concat(infoIcon, ") center center no-repeat"),
    background: "rgb(51, 153, 255)",
    cursor: "pointer"
  };
};

exports.menuActionStyle = menuActionStyle;

var iconStyle = function iconStyle() {
  return (0, _defineProperty2.default)({
    width: "auto%",
    display: "flex",
    justifyContent: "space-between",
    alignItems: "center",
    lexDirection: "row"
  }, "display", "none");
};

exports.iconStyle = iconStyle;

var listStyle = function listStyle() {
  return {
    display: "flex"
  };
};

exports.listStyle = listStyle;

var dataItemStyle = function dataItemStyle(props, theme) {
  var _theme$palette, _theme$palette2, _theme$palette3;

  return _objectSpread(_objectSpread({}, new _Shared.BaseStyles("100%", "100%", theme.palette.background[theme.palette.mode], "none", "8px", "none")), {}, {
    titleFont: (0, _Shared.fontHelper)(theme.typography.title2),
    titleColor: theme === null || theme === void 0 ? void 0 : (_theme$palette = theme.palette) === null || _theme$palette === void 0 ? void 0 : _theme$palette.getAccent(),
    subtitleFont: (0, _Shared.fontHelper)(theme.typography.subtitle2),
    subtitleColor: theme === null || theme === void 0 ? void 0 : (_theme$palette2 = theme.palette) === null || _theme$palette2 === void 0 ? void 0 : _theme$palette2.getPrimary(),
    tailColor: theme === null || theme === void 0 ? void 0 : (_theme$palette3 = theme.palette) === null || _theme$palette3 === void 0 ? void 0 : _theme$palette3.getPrimary(),
    tailFont: "nnone"
  });
};

exports.dataItemStyle = dataItemStyle;