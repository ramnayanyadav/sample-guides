"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MessagesConfiguration = void 0;

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _heart = _interopRequireDefault(require("./resources/heart.png"));

var _MessageComposerConfiguration = require("../CometChatMessageComposer/MessageComposerConfiguration");

var _MessageHeaderconfiguration = require("../CometChatMessageHeader/MessageHeaderconfiguration");

var _LiveReactionConfiguration = require("../CometChatLiveReactions/LiveReactionConfiguration");

var _MessageListConfiguration = require("../CometChatMessageList/MessageListConfiguration");

/**
 * @class MessagesConfiguration
 * @description MessagesConfiguration class is used for defining the Messages templates.
 * @param {String} liveReactionIconURL
 * @param {boolean} customOutgoingMessageSound
 * @param {Boolean} enableSoundForMessages
 * @param {Boolean} enableSoundForCalls
 * @param {Boolean} customIncomingMessageSound
 * @param {Boolean} customOutgoingMessageSound
 * @param {Boolean} enableTypingIndicator
 * @param {Array} messageTypes
 * @param {Object} parentMessage
 */
var MessagesConfiguration = /*#__PURE__*/(0, _createClass2.default)(function MessagesConfiguration(_ref) {
  var _ref$messageTypes = _ref.messageTypes,
      messageTypes = _ref$messageTypes === void 0 ? null : _ref$messageTypes,
      _ref$parentMessage = _ref.parentMessage,
      parentMessage = _ref$parentMessage === void 0 ? null : _ref$parentMessage,
      _ref$hideMessageCompo = _ref.hideMessageComposer,
      hideMessageComposer = _ref$hideMessageCompo === void 0 ? false : _ref$hideMessageCompo,
      _ref$enableSoundForMe = _ref.enableSoundForMessages,
      enableSoundForMessages = _ref$enableSoundForMe === void 0 ? true : _ref$enableSoundForMe,
      _ref$enableSoundForCa = _ref.enableSoundForCalls,
      enableSoundForCalls = _ref$enableSoundForCa === void 0 ? true : _ref$enableSoundForCa,
      _ref$customIncomingMe = _ref.customIncomingMessageSound,
      customIncomingMessageSound = _ref$customIncomingMe === void 0 ? true : _ref$customIncomingMe,
      _ref$customOutgoingMe = _ref.customOutgoingMessageSound,
      customOutgoingMessageSound = _ref$customOutgoingMe === void 0 ? true : _ref$customOutgoingMe,
      _ref$enableTypingIndi = _ref.enableTypingIndicator,
      enableTypingIndicator = _ref$enableTypingIndi === void 0 ? true : _ref$enableTypingIndi,
      _ref$liveReactionIcon = _ref.liveReactionIconURL,
      liveReactionIconURL = _ref$liveReactionIcon === void 0 ? _heart.default : _ref$liveReactionIcon,
      _ref$messageHeaderCon = _ref.messageHeaderConfiguration,
      messageHeaderConfiguration = _ref$messageHeaderCon === void 0 ? new _MessageHeaderconfiguration.MessageHeaderConfiguration({}) : _ref$messageHeaderCon,
      _ref$messageListConfi = _ref.messageListConfiguration,
      messageListConfiguration = _ref$messageListConfi === void 0 ? new _MessageListConfiguration.MessageListConfiguration({}) : _ref$messageListConfi,
      _ref$messageComposerC = _ref.messageComposerConfiguration,
      messageComposerConfiguration = _ref$messageComposerC === void 0 ? new _MessageComposerConfiguration.MessageComposerConfiguration({}) : _ref$messageComposerC,
      _ref$liveReactionConf = _ref.liveReactionConfiguration,
      liveReactionConfiguration = _ref$liveReactionConf === void 0 ? new _LiveReactionConfiguration.LiveReactionConfiguration({}) : _ref$liveReactionConf;
  (0, _classCallCheck2.default)(this, MessagesConfiguration);
  this.messageTypes = messageTypes;
  this.parentMessage = parentMessage;
  this.hideMessageComposer = hideMessageComposer;
  this.enableTypingIndicator = enableTypingIndicator;
  this.liveReactionIconURL = liveReactionIconURL;
  this.customIncomingMessageSound = customIncomingMessageSound;
  this.customOutgoingMessageSound = customOutgoingMessageSound;
  this.enableSoundForMessages = enableSoundForMessages;
  this.enableSoundForCalls = enableSoundForCalls;
  this.enableTypingIndicator = enableTypingIndicator;
  this.messageHeaderConfiguration = messageHeaderConfiguration;
  this.messageListConfiguration = messageListConfiguration;
  this.messageComposerConfiguration = messageComposerConfiguration;
  this.liveReactionConfiguration = liveReactionConfiguration;
});
exports.MessagesConfiguration = MessagesConfiguration;