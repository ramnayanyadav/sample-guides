"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.voteCountTextStyle = exports.voteCountStyle = exports.pollQuestionStyle = exports.pollAnswerStyle = exports.messagePollBubbleBlockStyle = exports.messageKitPollBubbleBlockStyle = void 0;

var messageKitPollBubbleBlockStyle = function messageKitPollBubbleBlockStyle(props, theme) {
  return {
    padding: "4px 6px",
    alignItems: "center",
    flexDirection: "column",
    justifyContent: "center",
    boxSizing: "border-box",
    width: props.style.width,
    border: props.style.border,
    borderRadius: props.style.borderRadius,
    background: props.style.background
  };
};

exports.messageKitPollBubbleBlockStyle = messageKitPollBubbleBlockStyle;

var messagePollBubbleBlockStyle = function messagePollBubbleBlockStyle(props) {
  return {
    display: "flex",
    alignItems: "center",
    justifyContent: "flex-start",
    margin: "5px",
    width: props.style.width
  };
};

exports.messagePollBubbleBlockStyle = messagePollBubbleBlockStyle;

var pollQuestionStyle = function pollQuestionStyle(props, theme) {
  return {
    margin: "0",
    textAlign: "left",
    wordWrap: "break-word",
    whiteSpace: "pre-wrap",
    width: props.style.widht,
    font: props.style.pollQuestionTextFont,
    color: props.style.pollQuestionTextColor
  };
};

exports.pollQuestionStyle = pollQuestionStyle;

var pollAnswerStyle = function pollAnswerStyle(props) {
  return {
    padding: "0",
    margin: "0",
    listStyleType: "none",
    width: props.style.width
  };
};

exports.pollAnswerStyle = pollAnswerStyle;

var voteCountStyle = function voteCountStyle(props, theme) {
  return {
    width: props.style.width,
    margin: "5px",
    p: {
      margin: "0",
      whiteSpace: "pre-wrap",
      wordWrap: "break-word",
      textAlign: "left",
      width: props.style.width,
      font: props.style.totalVoteCountTextFont,
      color: props.style.totalVoteCountTextColor
    }
  };
};

exports.voteCountStyle = voteCountStyle;

var voteCountTextStyle = function voteCountTextStyle(props, theme) {
  return {
    margin: "0",
    whiteSpace: "pre-wrap",
    wordWrap: "break-word",
    textAlign: "left",
    width: props.style.width,
    font: props.style.totalVoteCountTextFont,
    color: props.style.totalVoteCountTextColor
  };
};

exports.voteCountTextStyle = voteCountTextStyle;