"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.seperatorStyle = exports.messageWiteboardSubtitleStyle = exports.messageWhiteBoardTitleStyle = exports.messageWhiteBoardIconStyle = exports.messageWhiteBoardBtnStyle = exports.messageWhiteBoardBtnItemStyle = exports.messageWhiteBoardBlockStyle = exports.messageSubtitleWrapperStyle = exports.messageKitWhiteBoardBlockStyle = exports.messageBtnItemTextStyle = void 0;

var _ = require("../../../");

var messageKitWhiteBoardBlockStyle = function messageKitWhiteBoardBlockStyle(props, theme) {
  return {
    padding: "16px 0",
    display: "inline-block",
    alignSelf: "flex-end",
    flexDirection: "column",
    justifyContent: "center",
    border: props.style.border,
    width: props.style.width,
    borderRadius: props.style.borderRadius,
    background: props.style.background || theme.palette.background[theme.palette.mode],
    boxSizing: "border-box"
  };
};

exports.messageKitWhiteBoardBlockStyle = messageKitWhiteBoardBlockStyle;

var messageWhiteBoardBlockStyle = function messageWhiteBoardBlockStyle(props) {
  return {
    width: props.style.width,
    display: "flex",
    alignItems: "center",
    justifyContent: "center"
  };
};

exports.messageWhiteBoardBlockStyle = messageWhiteBoardBlockStyle;

var messageWhiteBoardIconStyle = function messageWhiteBoardIconStyle(props, theme) {
  return {
    WebkitMask: "url(".concat(props.iconURL, ") no-repeat left center"),
    background: props.style.iconTint || theme.palette.accent700[theme.palette.mode],
    width: "24px",
    height: "24px",
    display: "inline-block"
  };
};

exports.messageWhiteBoardIconStyle = messageWhiteBoardIconStyle;

var messageWhiteBoardTitleStyle = function messageWhiteBoardTitleStyle(props, theme) {
  var _theme$palette;

  return {
    width: "80%",
    margin: "0",
    whiteSpace: "pre-wrap",
    wordBreak: "break-word",
    textAlign: "left",
    font: props.style.titleFont || (0, _.fontHelper)(theme.typography.title2),
    color: props.style.titleColor || (theme === null || theme === void 0 ? void 0 : (_theme$palette = theme.palette) === null || _theme$palette === void 0 ? void 0 : _theme$palette.getAccent())
  };
};

exports.messageWhiteBoardTitleStyle = messageWhiteBoardTitleStyle;

var messageSubtitleWrapperStyle = function messageSubtitleWrapperStyle(props, theme) {
  return {
    padding: "8px 16px",
    display: "inline-block",
    alignSelf: "flex-end",
    flexDirection: "column",
    justifyContent: "center",
    border: props.style.border,
    width: props.style.width,
    borderRadius: props.style.borderRadius,
    background: props.style.background || theme.palette.background[theme.palette.mode],
    boxSizing: "border-box"
  };
};

exports.messageSubtitleWrapperStyle = messageSubtitleWrapperStyle;

var messageWiteboardSubtitleStyle = function messageWiteboardSubtitleStyle(props, theme) {
  return {
    width: "80%",
    margin: "0",
    whiteSpace: "pre-wrap",
    wordBreak: "break-word",
    textAlign: "left",
    boxSizing: "border-box",
    font: props.style.subTitleFont || (0, _.fontHelper)(theme.typography.subtitle2),
    color: props.style.subTitleColor || theme.palette.accent600[theme.palette.mode]
  };
};

exports.messageWiteboardSubtitleStyle = messageWiteboardSubtitleStyle;

var seperatorStyle = function seperatorStyle(props, theme) {
  return {
    width: props.style.width,
    height: "1px",
    background: theme.palette.accent100[theme.palette.mode]
  };
};

exports.seperatorStyle = seperatorStyle;

var messageWhiteBoardBtnStyle = function messageWhiteBoardBtnStyle(props) {
  return {
    width: props.style.width,
    padding: "0",
    margin: "0",
    listStyleType: "none"
  };
};

exports.messageWhiteBoardBtnStyle = messageWhiteBoardBtnStyle;

var messageWhiteBoardBtnItemStyle = function messageWhiteBoardBtnItemStyle(props) {
  return {
    margin: "8px 0 0",
    cursor: "pointer",
    display: "flex",
    position: "relative",
    justifyContent: "center",
    alignItems: "center",
    width: props.style.width,
    backgroundColor: props.style.buttonBackground,
    borderRadius: props.style.borderRadius,
    boxSizing: "border-box"
  };
};

exports.messageWhiteBoardBtnItemStyle = messageWhiteBoardBtnItemStyle;

var messageBtnItemTextStyle = function messageBtnItemTextStyle(props, theme) {
  var _theme$palette2;

  return {
    margin: "0",
    background: "0 0",
    textAlign: "center",
    display: "inline-block",
    width: props.style.width,
    color: props.style.buttonTextColor || (theme === null || theme === void 0 ? void 0 : (_theme$palette2 = theme.palette) === null || _theme$palette2 === void 0 ? void 0 : _theme$palette2.getPrimary()),
    font: props.style.buttonTextFont || (0, _.fontHelper)(theme.typography.title2)
  };
};

exports.messageBtnItemTextStyle = messageBtnItemTextStyle;