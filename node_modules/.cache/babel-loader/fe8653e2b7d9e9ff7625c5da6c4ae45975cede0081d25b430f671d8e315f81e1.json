{"ast":null,"code":"var _jsxFileName = \"/home/admin1/dev/react/sample-react-guides/src/app/guides/CustomMessageTypes/index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { CometChatMessageList, CometChatMessages, CometChatMessageTemplate, CometChatPopover, CometChatBackdrop } from \"react-ui-kit-testing\";\nimport { CometChat } from \"react\";\nimport iconURL from \"./resources/empty.svg\";\nimport { Hook } from \"./hook\";\nimport { GifycatBoard } from \"../GifycatBoard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomMessageTypes = props => {\n  _s();\n  var _gif$gfycats, _props$messageTypes;\n  const [_user, setUser] = React.useState(null);\n  const [_group, setGroup] = React.useState(null);\n  const [gif, setGif] = React.useState(null);\n  let messageListConfig = {};\n  if (props !== null && props !== void 0 && props.messageTypes) {\n    messageListConfig = {\n      messageTypes: props === null || props === void 0 ? void 0 : props.messageTypes\n    };\n  }\n  const sendGifMessage = e => {\n    if (e) {\n      let receiverId = \"superhero2\";\n      let receiverType = \"user\";\n      const customData = {\n        src: e.target.src\n      };\n      const customType = \"gfycats\";\n      const customMessage = new CometChat.CustomMessage(receiverId, receiverType, customType, customData);\n      customMessage.setSentAt(getUnixTimestamp());\n      customMessage.setMuid(String(getUnixTimestamp()));\n      CometChatMessageEvents.emit(CometChatMessageEvents.onMessageSent, {\n        message: customMessage,\n        status: messageStatus.inprogress\n      });\n      playAudio(audio);\n      CometChat.sendCustomMessage(customMessage).then(message => {\n        const messageObject = {\n          ...message\n        };\n        CometChatMessageEvents.emit(CometChatMessageEvents.onMessageSent, {\n          message: messageObject,\n          status: messageStatus.success\n        });\n      }).catch(error => {});\n    }\n  };\n  let gifBoardList = gif === null || gif === void 0 ? void 0 : (_gif$gfycats = gif.gfycats) === null || _gif$gfycats === void 0 ? void 0 : _gif$gfycats.map(items => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gif--items\",\n      style: {\n        margin: \"10px 3px\",\n        cursor: \"pointer\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: items === null || items === void 0 ? void 0 : items.gifUrl,\n        alt: \"Girl in a jacket\",\n        width: \"70\",\n        height: \"70\",\n        onClick: sendGifMessage.bind(items)\n      }, items === null || items === void 0 ? void 0 : items.gfyId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  });\n  const closegfyBoard = value => !value;\n  Hook(setGroup, setUser, setGif);\n  return props !== null && props !== void 0 && props.messageTypes || props !== null && props !== void 0 && (_props$messageTypes = props.messageTypes) !== null && _props$messageTypes !== void 0 && _props$messageTypes.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CometChatMessages, {\n      user: _user,\n      style: {\n        width: \"700px\",\n        height: \"500px\"\n      },\n      messageTypes: props === null || props === void 0 ? void 0 : props.messageTypes,\n      messsageListConfiguration: messageListConfig\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), props !== null && props !== void 0 && props.launchGfy ? /*#__PURE__*/_jsxDEV(CometChatPopover, {\n      position: \"left\",\n      x: \"750\",\n      y: \"300\",\n      children: /*#__PURE__*/_jsxDEV(GifycatBoard, {\n        messageTypes: props === null || props === void 0 ? void 0 : props.messageTypes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this) : null, props.payment ? /*#__PURE__*/_jsxDEV(CometChatPopover, {\n      position: \"left\",\n      x: \"750\",\n      y: \"300\",\n      children: props.paymentMessageComponent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true) : null;\n};\n_s(CustomMessageTypes, \"q19iNfGlwdlW77IvaZG8unGZ9VA=\");\n_c = CustomMessageTypes;\nexport { CustomMessageTypes };\nvar _c;\n$RefreshReg$(_c, \"CustomMessageTypes\");","map":{"version":3,"names":["React","CometChatMessageList","CometChatMessages","CometChatMessageTemplate","CometChatPopover","CometChatBackdrop","CometChat","iconURL","Hook","GifycatBoard","CustomMessageTypes","props","_user","setUser","useState","_group","setGroup","gif","setGif","messageListConfig","messageTypes","sendGifMessage","e","receiverId","receiverType","customData","src","target","customType","customMessage","CustomMessage","setSentAt","getUnixTimestamp","setMuid","String","CometChatMessageEvents","emit","onMessageSent","message","status","messageStatus","inprogress","playAudio","audio","sendCustomMessage","then","messageObject","success","catch","error","gifBoardList","gfycats","map","items","margin","cursor","gifUrl","bind","gfyId","closegfyBoard","value","length","width","height","launchGfy","payment","paymentMessageComponent"],"sources":["/home/admin1/dev/react/sample-react-guides/src/app/guides/CustomMessageTypes/index.js"],"sourcesContent":["import React from \"react\";\n\nimport {\n  CometChatMessageList,\n  CometChatMessages,\n  CometChatMessageTemplate,\n  CometChatPopover,\n  CometChatBackdrop,\n} from \"react-ui-kit-testing\";\n\nimport { CometChat } from \"react\";\n\nimport iconURL from \"./resources/empty.svg\";\n\nimport { Hook } from \"./hook\";\nimport { GifycatBoard } from \"../GifycatBoard\";\n\nconst CustomMessageTypes = (props) => {\n  const [_user, setUser] = React.useState(null);\n  const [_group, setGroup] = React.useState(null);\n  const [gif, setGif] = React.useState(null);\n\n  let messageListConfig = {};\n  if (props?.messageTypes) {\n    messageListConfig = {\n      messageTypes: props?.messageTypes,\n    };\n  }\n\n  const sendGifMessage = (e) => {\n    if (e) {\n      let receiverId = \"superhero2\";\n      let receiverType = \"user\";\n      const customData = {\n        src: e.target.src,\n      };\n      const customType = \"gfycats\";\n      const customMessage = new CometChat.CustomMessage(\n        receiverId,\n        receiverType,\n        customType,\n        customData\n      );\n      customMessage.setSentAt(getUnixTimestamp());\n      customMessage.setMuid(String(getUnixTimestamp()));\n      CometChatMessageEvents.emit(CometChatMessageEvents.onMessageSent, {\n        message: customMessage,\n        status: messageStatus.inprogress,\n      });\n\n      playAudio(audio);\n      CometChat.sendCustomMessage(customMessage)\n        .then((message) => {\n          const messageObject = { ...message };\n          CometChatMessageEvents.emit(CometChatMessageEvents.onMessageSent, {\n            message: messageObject,\n            status: messageStatus.success,\n          });\n        })\n        .catch((error) => {});\n    }\n  };\n\n  let gifBoardList = gif?.gfycats?.map((items) => {\n    return (\n      <div\n        className=\"gif--items\"\n        style={{ margin: \"10px 3px\", cursor: \"pointer\" }}\n      >\n        <img\n          key={items?.gfyId}\n          src={items?.gifUrl}\n          alt=\"Girl in a jacket\"\n          width=\"70\"\n          height=\"70\"\n          onClick={sendGifMessage.bind(items)}\n        />\n      </div>\n    );\n  });\n  const closegfyBoard = (value) => !value;\n\n  Hook(setGroup, setUser, setGif);\n  return props?.messageTypes || props?.messageTypes?.length ? (\n    <>\n      <CometChatMessages\n        user={_user}\n        style={{ width: \"700px\", height: \"500px\" }}\n        messageTypes={props?.messageTypes}\n        messsageListConfiguration={messageListConfig}\n      />\n      {props?.launchGfy ? (\n        <CometChatPopover position=\"left\" x=\"750\" y=\"300\">\n          <GifycatBoard messageTypes={props?.messageTypes} />\n        </CometChatPopover>\n      ) : null}\n\n      {props.payment ? (\n        <CometChatPopover position=\"left\" x=\"750\" y=\"300\">\n          {props.paymentMessageComponent}\n        </CometChatPopover>\n      ) : null}\n    </>\n  ) : null;\n};\n\nexport { CustomMessageTypes };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}