{"ast":null,"code":"var _jsxFileName = \"/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/app/guides/ExcludeMessageOptions/index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { CometChatMessageList, MessageOptionConstants, CometChatPopover, CometChatMessageEvents, CometChatSoundManager, CometChatMessageTemplate, CometChatMessageOptions, MessageTypeConstants } from \"react-ui-kit-testing\";\nimport { dateTimeStyle, closeIconStyle, pinnedMesssageStyle, pinnedMessageTextStyle } from \"./style\";\nimport { alignmentContainerStyle, buttonContainerStyle, buttonStyle } from \"../MessageAlignment/style.js\";\nimport { Hook } from \"./hook\";\nimport { getUnixTimestamp, ID } from \"../../home/MessageConstant\";\nimport reminderIconURL from \"./resources/reminders.svg\";\nimport pinnIconURL from \"./resources/pinn-message.svg\";\nimport saveIconURL from \"./resources/save-message.svg\";\nimport reportIconUrl from \"./resources/report-message.svg\";\nimport messageInfoURL from \"./resources/message-info.svg\";\nimport customIconURL from \"./resources/customIconURl.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ExcludeMessageOptions = () => {\n  _s();\n  const [user, setUser] = React.useState(null);\n  const [group, setGroup] = React.useState(null);\n  const [launchReminder, setReminder] = React.useState(false);\n  const [messageObject, setMessageObject] = React.useState({});\n  const [pinnedMsg, setPinnedMsg] = React.useState(false);\n  const [pinnedMessageObject, setPinnedMessage] = React.useState({});\n  const [launchReport, setReport] = React.useState(false);\n  const [launchMessageInfo, setMessageInfo] = React.useState(false);\n  const inputReport = React.useRef(\"\");\n  const [bool, setBool] = React.useState(false);\n  const customHandler = () => {\n    setBool(true);\n  };\n  const defaultHandler = () => {\n    setBool(false);\n  };\n  const date = React.useRef(\"\");\n  const time = React.useRef(\"\");\n\n  /**\n   * pinned custom message option\n   */\n  const closePinnedMessage = () => {\n    CometChat.callExtension(\"pin-message\", \"DELETE\", \"v1/unpin\", {\n      msgId: pinnedMessageObject === null || pinnedMessageObject === void 0 ? void 0 : pinnedMessageObject.id,\n      receiverType: \"user\",\n      receiver: \"supergroup3\"\n    }).then(response => {\n      // { success: true }\n      setPinnedMsg(!pinnedMsg);\n    }).catch(error => {\n      // Error occurred\n    });\n  };\n  const pinnedMessageView = /*#__PURE__*/_jsxDEV(\"div\", {\n    style: pinnedMesssageStyle(),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: closeIconStyle(),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: closePinnedMessage,\n        children: \" \\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: pinnedMessageTextStyle(),\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: \"5px\"\n        },\n        children: (pinnedMessageObject === null || pinnedMessageObject === void 0 ? void 0 : pinnedMessageObject.text) || `pinned message`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n  const pinnedMessageClick = e => {\n    setPinnedMessage(e);\n    //console.log(e);\n    CometChat.callExtension(\"pin-message\", \"POST\", \"v1/pin\", {\n      msgId: e === null || e === void 0 ? void 0 : e.id // The ID of the message to be pinned. Here 280.\n    }).then(response => {\n      // { success: true }\n      //console.log(\"pinned message response\", response);\n      setPinnedMsg(true);\n    }).catch(error => {\n      // Error occurred\n      //console.log(\"pinn error\", error);\n    });\n  };\n  let pinnedOption = new CometChatMessageOptions({\n    iconURL: pinnIconURL,\n    id: \"pinned-message\",\n    onClick: pinnedMessageClick,\n    optionFor: null,\n    title: \"pinned\"\n  });\n\n  /**\n   * save custom message option\n   */\n  const saveMessageClick = e => {\n    CometChat.callExtension(\"save-message\", \"POST\", \"v1/save\", {\n      msgId: e === null || e === void 0 ? void 0 : e.id\n    }).then(response => {\n      // { success: true }\n      alert(\"message saved\");\n    }).catch(error => {\n      // Error occured\n      console.error(\"save message error\", error);\n    });\n  };\n  let saveOption = new CometChatMessageOptions({\n    iconURL: saveIconURL,\n    id: \"save-message\",\n    onClick: saveMessageClick,\n    optionFor: null,\n    title: \"save\"\n  });\n\n  /**\n   * reminder message\n   */\n  const FetchApi = e => {\n    setMessageObject(e);\n    setReminder(!launchReminder);\n  };\n  let reminderMessage = new CometChatMessageOptions({\n    iconURL: reminderIconURL,\n    id: \"extension_reminders\",\n    onClick: FetchApi,\n    optionFor: null,\n    title: \"reminder\"\n  });\n  const sentReminder = () => {\n    var _date$current, _time$current;\n    if (date !== null && date !== void 0 && (_date$current = date.current) !== null && _date$current !== void 0 && _date$current.length && time !== null && time !== void 0 && (_time$current = time.current) !== null && _time$current !== void 0 && _time$current.length) {\n      let reminderDate = (date === null || date === void 0 ? void 0 : date.current) + \" \" + (time === null || time === void 0 ? void 0 : time.current);\n      let ms = Math.floor(new Date(`${reminderDate}`).getTime());\n      CometChat.callExtension(\"reminders\", \"POST\", \"v1/reminder\", {\n        about: parseInt(messageObject.id),\n        isCustom: false,\n        timeInMS: ms\n      }).then(response => {\n        // Reminder created successfully\n        // Reminder details with reminderId.\n        //console.log(\"reminder resp\", response);\n        alert(\"reminder sent successfuly\");\n        setReminder(!launchReminder);\n      }).catch(error => {\n        // Some error occured\n        console.log(\"reminder error\", error);\n      });\n    }\n  };\n  let reminderView = () => {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        background: \"red\",\n        width: \"250px\",\n        height: \"200px\",\n        padding: \"10px\",\n        borderRadius: \"5px\",\n        textAlign: \"center\",\n        zIndex: 999,\n        color: \"white\"\n      },\n      children: \"Reminder messsage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this);\n  };\n  let messageBubbleConfig = {\n    customView: reminderView\n  };\n  let customViewSetDate = /*#__PURE__*/_jsxDEV(\"div\", {\n    style: dateTimeStyle(),\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        margin: \"0\"\n      },\n      children: \"Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      onChange: e => date.current = e.target.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        margin: \"0\"\n      },\n      children: \"Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"time\",\n      onChange: e => time.current = e.target.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sentReminder,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n  /**\n   * report message\n   */\n  const sentReport = () => {\n    var _inputReport$current;\n    setReport(!launchReport);\n    if (inputReport !== null && inputReport !== void 0 && (_inputReport$current = inputReport.current) !== null && _inputReport$current !== void 0 && _inputReport$current.length && messageObject) {\n      CometChat.callExtension(\"report-message\", \"POST\", \"v1/report\", {\n        msgId: messageObject.id,\n        reason: inputReport === null || inputReport === void 0 ? void 0 : inputReport.current\n      }).then(response => {\n        // { success: true }\n        //console.log(\"report responce\", response);\n      }).catch(error => {\n        // Error occurred\n        //console.log(\"report error\", error);\n      });\n    }\n  };\n  const reportMessageUserInput = e => {\n    inputReport.current = e.target.value;\n  };\n  const reportMessageView = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bitly--input\",\n      style: {\n        position: \"relative\",\n        minWidth: \"250px\",\n        height: \"auto\",\n        border: \"1px solid black\",\n        padding: \"40px\",\n        borderRadius: \"5px\",\n        background: \"#606c38\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          position: \"absolute\",\n          top: \"0px\",\n          right: \"10px\",\n          fontSize: \"30px\",\n          cursor: \"pointer\"\n        },\n        onClick: () => setReport(!launchReport),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          position: \"relative\",\n          display: \"block\",\n          margin: \"0 auto\",\n          width: \"100%\",\n          boxSizing: \"border-box\",\n          textAlign: \"center\",\n          padding: \"10px 0\",\n          borderRadius: \"5px\",\n          outline: \"none\"\n        },\n        type: \"text\",\n        placeholder: \"Enter url text\",\n        onChange: reportMessageUserInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          padding: \"5px 10px\",\n          margin: \"5px auto\",\n          position: \"absolute\",\n          left: \"40%\",\n          background: \"rgb(51,153,255)\",\n          borderRadius: \"5px\"\n        },\n        onClick: sentReport,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n  const reportMessageClicked = e => {\n    setReport(!launchReport);\n    setMessageObject(e);\n  };\n  let reportMessage = new CometChatMessageOptions({\n    iconURL: reportIconUrl,\n    id: \"report-message\",\n    onClick: reportMessageClicked,\n    optionFor: null,\n    title: \"Report\"\n  });\n\n  /**\n   * message information option\n   */\n  const messageInfoClicked = e => {\n    // console.log(\"message info\", e);\n    setMessageInfo(!launchMessageInfo);\n    setMessageObject(e);\n  };\n  const messageInfoView = messageObject => {\n    if (messageObject && messageObject !== null && messageObject !== void 0 && messageObject.text) {\n      var _messageObject$sender, _messageObject$sender2, _messageObject$receiv, _messageObject$receiv2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message--info\",\n        style: {\n          background: \"rgb(20,20,20)\",\n          padding: \"10px\",\n          borderRadius: \"10px\",\n          minWidth: \"400px\",\n          color: \"white\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: messageInfoClicked,\n          style: {\n            fontSize: \"25px\",\n            marginBottom: \"10px\",\n            cursor: \"pointer\",\n            float: \"right\",\n            margin: \"0\",\n            padding: \"0\"\n          },\n          className: \"closeIcon\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user--info\",\n          style: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            flexDirection: \"row\",\n            padding: \"5px\",\n            borderBottom: \"1px solid\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sender--info\",\n            style: {\n              padding: \"5px\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              borderRight: \"1px solid\",\n              boxSizing: \"border-box\",\n              textAlign: \"center\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: (messageObject === null || messageObject === void 0 ? void 0 : (_messageObject$sender = messageObject.sender) === null || _messageObject$sender === void 0 ? void 0 : _messageObject$sender.name) || `Sender name`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                font: \"400 13px Inter\",\n                margin: \"0\",\n                padding: \"0\"\n              },\n              children: (messageObject === null || messageObject === void 0 ? void 0 : (_messageObject$sender2 = messageObject.sender) === null || _messageObject$sender2 === void 0 ? void 0 : _messageObject$sender2.uid) || `Sender Id`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"receiver--info\",\n            style: {\n              padding: \"5px\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              boxSizing: \"border-box\",\n              textAlign: \"center\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: (messageObject === null || messageObject === void 0 ? void 0 : (_messageObject$receiv = messageObject.receiver) === null || _messageObject$receiv === void 0 ? void 0 : _messageObject$receiv.name) || `Receiver name`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                font: \"400 13px Inter\",\n                margin: \"0\",\n                padding: \"0\"\n              },\n              children: (messageObject === null || messageObject === void 0 ? void 0 : (_messageObject$receiv2 = messageObject.receiver) === null || _messageObject$receiv2 === void 0 ? void 0 : _messageObject$receiv2.uid) || `Receiver Id`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: \"5px\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            textAlign: \"center\",\n            font: \"400 12px Inter\",\n            borderRadius: \"5px\",\n            padding: \"5px 0\"\n          },\n          children: `${new Date(messageObject === null || messageObject === void 0 ? void 0 : messageObject.sentAt)}` || `time`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages\",\n          style: {\n            margin: \"5px\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            textAlign: \"center\",\n            font: \"400 16px Inter\",\n            border: \"1px solid black\",\n            borderRadius: \"5px\",\n            padding: \"10px 0\"\n          },\n          children: messageObject === null || messageObject === void 0 ? void 0 : messageObject.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  let messageInformation = new CometChatMessageOptions({\n    iconURL: messageInfoURL,\n    id: \"messsage-information\",\n    onClick: messageInfoClicked,\n    optionFor: null,\n    title: \"message info\"\n  });\n\n  /**\n   * Custom implementation of pre-defined message option\n   */\n  const customOption = () => {\n    alert(\"custom pre-defined message option!\");\n  };\n  let customMessageOption = new CometChatMessageOptions({\n    iconURL: customIconURL,\n    id: \"delete\",\n    onClick: customOption,\n    optionFor: null,\n    title: \"delete message\"\n  });\n\n  /**\n   * message options list\n   */\n\n  const excludeMessageOptions = [\n  // MessageOptionConstants.reactToMessage,\n  MessageOptionConstants.editMessage, MessageOptionConstants.deleteMessage, MessageOptionConstants.copyMessage, MessageOptionConstants.translateMessage];\n  const customMessageOptions = [\n  // MessageOptionConstants.reactToMessage,\n  // MessageOptionConstants.editMessage,\n  // MessageOptionConstants.deleteMessage,\n  // MessageOptionConstants.copyMessage,\n  // MessageOptionConstants.translateMessage,\n  reminderMessage,\n  //saveOption,\n  //pinnedOption,\n  // reportMessage,\n  // messageInformation,\n  customMessageOption];\n\n  //let messageTypes = [];\n  let messageTypes = CometChatMessageTemplate.getDefaultTypes();\n  let reminderCustomMessageTemplate = new CometChatMessageTemplate({\n    type: \"extension_reminders\",\n    icon: null,\n    name: \"reminder\",\n    category: \"custom\",\n    customView: reminderView,\n    onActionClick: null\n  });\n  const excludeMessageTypes = [\n  // MessageTypeConstants.file,\n  // MessageTypeConstants.whiteboard,\n  // MessageTypeConstants.document,\n  MessageTypeConstants.poll\n  // MessageTypeConstants.image,\n  // MessageTypeConstants.text,\n  ];\n\n  messageTypes.push(reminderCustomMessageTemplate);\n  Hook(setGroup, setUser);\n  return user ? /*#__PURE__*/_jsxDEV(\"div\", {\n    style: alignmentContainerStyle(),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [pinnedMsg ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: pinnedMessageView\n      }, void 0, false) : null, /*#__PURE__*/_jsxDEV(CometChatMessageList, {\n        user: user,\n        style: {\n          width: \"650px\",\n          height: \"450px\"\n        },\n        alignment: \"standard\" //['standard','leftAligned']\n        ,\n        excludeMessageOptions: excludeMessageOptions,\n        customMessageOptions: customMessageOptions,\n        excludeMessageTypes: excludeMessageTypes,\n        sentMessageInputData: {\n          thumbnail: false,\n          title: false,\n          time: true,\n          readReceipt: true\n        },\n        messageTypes: messageTypes,\n        messageBubbleConfiguration: messageBubbleConfig\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 9\n      }, this), launchReminder ? /*#__PURE__*/_jsxDEV(CometChatPopover, {\n        position: \"left\",\n        x: \"750\",\n        y: \"350\",\n        children: customViewSetDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 11\n      }, this) : null, launchReport ? /*#__PURE__*/_jsxDEV(CometChatPopover, {\n        position: \"left\",\n        x: \"650\",\n        y: \"350\",\n        children: reportMessageView\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 11\n      }, this) : null, launchMessageInfo ? /*#__PURE__*/_jsxDEV(CometChatPopover, {\n        position: \"left\",\n        x: \"600\",\n        y: \"230\",\n        children: messageInfoView(messageObject)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: buttonContainerStyle(),\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: defaultHandler,\n        style: buttonStyle(),\n        children: \"default\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: customHandler,\n        style: buttonStyle(),\n        children: \"custom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 500,\n    columnNumber: 5\n  }, this) : null;\n};\n_s(ExcludeMessageOptions, \"AG5/bR/pNpAf3JJocBCdqHNXkCE=\");\n_c = ExcludeMessageOptions;\nexport { ExcludeMessageOptions };\nvar _c;\n$RefreshReg$(_c, \"ExcludeMessageOptions\");","map":{"version":3,"names":["React","CometChat","CometChatMessageList","MessageOptionConstants","CometChatPopover","CometChatMessageEvents","CometChatSoundManager","CometChatMessageTemplate","CometChatMessageOptions","MessageTypeConstants","dateTimeStyle","closeIconStyle","pinnedMesssageStyle","pinnedMessageTextStyle","alignmentContainerStyle","buttonContainerStyle","buttonStyle","Hook","getUnixTimestamp","ID","reminderIconURL","pinnIconURL","saveIconURL","reportIconUrl","messageInfoURL","customIconURL","ExcludeMessageOptions","user","setUser","useState","group","setGroup","launchReminder","setReminder","messageObject","setMessageObject","pinnedMsg","setPinnedMsg","pinnedMessageObject","setPinnedMessage","launchReport","setReport","launchMessageInfo","setMessageInfo","inputReport","useRef","bool","setBool","customHandler","defaultHandler","date","time","closePinnedMessage","callExtension","msgId","id","receiverType","receiver","then","response","catch","error","pinnedMessageView","margin","text","pinnedMessageClick","e","pinnedOption","iconURL","onClick","optionFor","title","saveMessageClick","alert","console","saveOption","FetchApi","reminderMessage","sentReminder","current","length","reminderDate","ms","Math","floor","Date","getTime","about","parseInt","isCustom","timeInMS","log","reminderView","background","width","height","padding","borderRadius","textAlign","zIndex","color","messageBubbleConfig","customView","customViewSetDate","target","value","sentReport","reason","reportMessageUserInput","reportMessageView","position","minWidth","border","top","right","fontSize","cursor","display","boxSizing","outline","left","reportMessageClicked","reportMessage","messageInfoClicked","messageInfoView","marginBottom","float","justifyContent","alignItems","flexDirection","borderBottom","borderRight","sender","name","font","uid","sentAt","messageInformation","customOption","customMessageOption","excludeMessageOptions","editMessage","deleteMessage","copyMessage","translateMessage","customMessageOptions","messageTypes","getDefaultTypes","reminderCustomMessageTemplate","type","icon","category","onActionClick","excludeMessageTypes","poll","push","thumbnail","readReceipt"],"sources":["/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/app/guides/ExcludeMessageOptions/index.js"],"sourcesContent":["import React from \"react\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport {\n  CometChatMessageList,\n  MessageOptionConstants,\n  CometChatPopover,\n  CometChatMessageEvents,\n  CometChatSoundManager,\n  CometChatMessageTemplate,\n  CometChatMessageOptions,\n  MessageTypeConstants,\n} from \"react-ui-kit-testing\";\n\nimport {\n  dateTimeStyle,\n  closeIconStyle,\n  pinnedMesssageStyle,\n  pinnedMessageTextStyle,\n} from \"./style\";\n\nimport {\n  alignmentContainerStyle,\n  buttonContainerStyle,\n  buttonStyle,\n} from \"../MessageAlignment/style.js\";\n\nimport { Hook } from \"./hook\";\n\nimport { getUnixTimestamp, ID } from \"../../home/MessageConstant\";\n\nimport reminderIconURL from \"./resources/reminders.svg\";\nimport pinnIconURL from \"./resources/pinn-message.svg\";\nimport saveIconURL from \"./resources/save-message.svg\";\nimport reportIconUrl from \"./resources/report-message.svg\";\nimport messageInfoURL from \"./resources/message-info.svg\";\nimport customIconURL from \"./resources/customIconURl.svg\";\n\nconst ExcludeMessageOptions = () => {\n  const [user, setUser] = React.useState(null);\n  const [group, setGroup] = React.useState(null);\n  const [launchReminder, setReminder] = React.useState(false);\n  const [messageObject, setMessageObject] = React.useState({});\n  const [pinnedMsg, setPinnedMsg] = React.useState(false);\n  const [pinnedMessageObject, setPinnedMessage] = React.useState({});\n  const [launchReport, setReport] = React.useState(false);\n  const [launchMessageInfo, setMessageInfo] = React.useState(false);\n  const inputReport = React.useRef(\"\");\n\n  const [bool, setBool] = React.useState(false);\n\n  const customHandler = () => {\n    setBool(true);\n  };\n\n  const defaultHandler = () => {\n    setBool(false);\n  };\n\n  const date = React.useRef(\"\");\n  const time = React.useRef(\"\");\n\n  /**\n   * pinned custom message option\n   */\n  const closePinnedMessage = () => {\n    CometChat.callExtension(\"pin-message\", \"DELETE\", \"v1/unpin\", {\n      msgId: pinnedMessageObject?.id,\n      receiverType: \"user\",\n      receiver: \"supergroup3\",\n    })\n      .then((response) => {\n        // { success: true }\n        setPinnedMsg(!pinnedMsg);\n      })\n      .catch((error) => {\n        // Error occurred\n      });\n  };\n\n  const pinnedMessageView = (\n    <div style={pinnedMesssageStyle()}>\n      <div style={closeIconStyle()}>\n        <span onClick={closePinnedMessage}> &times;</span>\n      </div>\n      <div style={pinnedMessageTextStyle()}>\n        <p style={{ margin: \"5px\" }}>\n          {pinnedMessageObject?.text || `pinned message`}\n        </p>\n      </div>\n    </div>\n  );\n\n  const pinnedMessageClick = (e) => {\n    setPinnedMessage(e);\n    //console.log(e);\n    CometChat.callExtension(\"pin-message\", \"POST\", \"v1/pin\", {\n      msgId: e?.id, // The ID of the message to be pinned. Here 280.\n    })\n      .then((response) => {\n        // { success: true }\n        //console.log(\"pinned message response\", response);\n        setPinnedMsg(true);\n      })\n      .catch((error) => {\n        // Error occurred\n        //console.log(\"pinn error\", error);\n      });\n  };\n\n  let pinnedOption = new CometChatMessageOptions({\n    iconURL: pinnIconURL,\n    id: \"pinned-message\",\n    onClick: pinnedMessageClick,\n    optionFor: null,\n    title: \"pinned\",\n  });\n\n  /**\n   * save custom message option\n   */\n  const saveMessageClick = (e) => {\n    CometChat.callExtension(\"save-message\", \"POST\", \"v1/save\", {\n      msgId: e?.id,\n    })\n      .then((response) => {\n        // { success: true }\n        alert(\"message saved\");\n      })\n      .catch((error) => {\n        // Error occured\n        console.error(\"save message error\", error);\n      });\n  };\n\n  let saveOption = new CometChatMessageOptions({\n    iconURL: saveIconURL,\n    id: \"save-message\",\n    onClick: saveMessageClick,\n    optionFor: null,\n    title: \"save\",\n  });\n\n  /**\n   * reminder message\n   */\n  const FetchApi = (e) => {\n    setMessageObject(e);\n    setReminder(!launchReminder);\n  };\n\n  let reminderMessage = new CometChatMessageOptions({\n    iconURL: reminderIconURL,\n    id: \"extension_reminders\",\n    onClick: FetchApi,\n    optionFor: null,\n    title: \"reminder\",\n  });\n\n  const sentReminder = () => {\n    if (date?.current?.length && time?.current?.length) {\n      let reminderDate = date?.current + \" \" + time?.current;\n\n      let ms = Math.floor(new Date(`${reminderDate}`).getTime());\n\n      CometChat.callExtension(\"reminders\", \"POST\", \"v1/reminder\", {\n        about: parseInt(messageObject.id),\n        isCustom: false,\n        timeInMS: ms,\n      })\n        .then((response) => {\n          // Reminder created successfully\n          // Reminder details with reminderId.\n          //console.log(\"reminder resp\", response);\n          alert(\"reminder sent successfuly\");\n          setReminder(!launchReminder);\n        })\n        .catch((error) => {\n          // Some error occured\n          console.log(\"reminder error\", error);\n        });\n    }\n  };\n\n  let reminderView = () => {\n    return (\n      <h3\n        style={{\n          background: \"red\",\n          width: \"250px\",\n          height: \"200px\",\n          padding: \"10px\",\n          borderRadius: \"5px\",\n          textAlign: \"center\",\n          zIndex: 999,\n          color: \"white\",\n        }}\n      >\n        Reminder messsage\n      </h3>\n    );\n  };\n\n  let messageBubbleConfig = {\n    customView: reminderView,\n  };\n\n  let customViewSetDate = (\n    <div style={dateTimeStyle()}>\n      <p style={{ margin: \"0\" }}>Date</p>\n      <input type=\"date\" onChange={(e) => (date.current = e.target.value)} />\n      <p style={{ margin: \"0\" }}>Time</p>\n      <input type=\"time\" onChange={(e) => (time.current = e.target.value)} />\n      <button onClick={sentReminder}>Submit</button>\n    </div>\n  );\n  /**\n   * report message\n   */\n  const sentReport = () => {\n    setReport(!launchReport);\n    if (inputReport?.current?.length && messageObject) {\n      CometChat.callExtension(\"report-message\", \"POST\", \"v1/report\", {\n        msgId: messageObject.id,\n        reason: inputReport?.current,\n      })\n        .then((response) => {\n          // { success: true }\n          //console.log(\"report responce\", response);\n        })\n        .catch((error) => {\n          // Error occurred\n          //console.log(\"report error\", error);\n        });\n    }\n  };\n\n  const reportMessageUserInput = (e) => {\n    inputReport.current = e.target.value;\n  };\n\n  const reportMessageView = (\n    <>\n      <div\n        className=\"bitly--input\"\n        style={{\n          position: \"relative\",\n          minWidth: \"250px\",\n          height: \"auto\",\n          border: \"1px solid black\",\n          padding: \"40px\",\n          borderRadius: \"5px\",\n          background: \"#606c38\",\n        }}\n      >\n        <span\n          style={{\n            position: \"absolute\",\n            top: \"0px\",\n            right: \"10px\",\n            fontSize: \"30px\",\n            cursor: \"pointer\",\n          }}\n          onClick={() => setReport(!launchReport)}\n        >\n          &times;\n        </span>\n        <input\n          style={{\n            position: \"relative\",\n            display: \"block\",\n            margin: \"0 auto\",\n            width: \"100%\",\n            boxSizing: \"border-box\",\n            textAlign: \"center\",\n            padding: \"10px 0\",\n            borderRadius: \"5px\",\n            outline: \"none\",\n          }}\n          type=\"text\"\n          placeholder=\"Enter url text\"\n          onChange={reportMessageUserInput}\n        />\n        <button\n          style={{\n            padding: \"5px 10px\",\n            margin: \"5px auto\",\n            position: \"absolute\",\n            left: \"40%\",\n            background: \"rgb(51,153,255)\",\n            borderRadius: \"5px\",\n          }}\n          onClick={sentReport}\n        >\n          Send\n        </button>\n      </div>\n    </>\n  );\n\n  const reportMessageClicked = (e) => {\n    setReport(!launchReport);\n    setMessageObject(e);\n  };\n\n  let reportMessage = new CometChatMessageOptions({\n    iconURL: reportIconUrl,\n    id: \"report-message\",\n    onClick: reportMessageClicked,\n    optionFor: null,\n    title: \"Report\",\n  });\n\n  /**\n   * message information option\n   */\n  const messageInfoClicked = (e) => {\n    // console.log(\"message info\", e);\n    setMessageInfo(!launchMessageInfo);\n    setMessageObject(e);\n  };\n\n  const messageInfoView = (messageObject) => {\n    if (messageObject && messageObject?.text) {\n      return (\n        <div\n          className=\"message--info\"\n          style={{\n            background: \"rgb(20,20,20)\",\n            padding: \"10px\",\n            borderRadius: \"10px\",\n            minWidth: \"400px\",\n            color: \"white\",\n          }}\n        >\n          <div\n            onClick={messageInfoClicked}\n            style={{\n              fontSize: \"25px\",\n              marginBottom: \"10px\",\n              cursor: \"pointer\",\n              float: \"right\",\n              margin: \"0\",\n              padding: \"0\",\n            }}\n            className=\"closeIcon\"\n          >\n            &times;\n          </div>\n          <div\n            className=\"user--info\"\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              flexDirection: \"row\",\n              padding: \"5px\",\n              borderBottom: \"1px solid\",\n            }}\n          >\n            <div\n              className=\"sender--info\"\n              style={{\n                padding: \"5px\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                borderRight: \"1px solid\",\n                boxSizing: \"border-box\",\n                textAlign: \"center\",\n              }}\n            >\n              <p>{messageObject?.sender?.name || `Sender name`}</p>\n              <p style={{ font: \"400 13px Inter\", margin: \"0\", padding: \"0\" }}>\n                {messageObject?.sender?.uid || `Sender Id`}\n              </p>\n            </div>\n            <div\n              className=\"receiver--info\"\n              style={{\n                padding: \"5px\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                boxSizing: \"border-box\",\n                textAlign: \"center\",\n              }}\n            >\n              <p>{messageObject?.receiver?.name || `Receiver name`}</p>\n              <p style={{ font: \"400 13px Inter\", margin: \"0\", padding: \"0\" }}>\n                {messageObject?.receiver?.uid || `Receiver Id`}\n              </p>\n            </div>\n          </div>\n          <div\n            style={{\n              margin: \"5px\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              textAlign: \"center\",\n              font: \"400 12px Inter\",\n              borderRadius: \"5px\",\n              padding: \"5px 0\",\n            }}\n          >\n            {`${new Date(messageObject?.sentAt)}` || `time`}\n          </div>\n          <div\n            className=\"messages\"\n            style={{\n              margin: \"5px\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              textAlign: \"center\",\n              font: \"400 16px Inter\",\n              border: \"1px solid black\",\n              borderRadius: \"5px\",\n              padding: \"10px 0\",\n            }}\n          >\n            {messageObject?.text}\n          </div>\n        </div>\n      );\n    }\n  };\n\n  let messageInformation = new CometChatMessageOptions({\n    iconURL: messageInfoURL,\n    id: \"messsage-information\",\n    onClick: messageInfoClicked,\n    optionFor: null,\n    title: \"message info\",\n  });\n\n  /**\n   * Custom implementation of pre-defined message option\n   */\n  const customOption = () => {\n    alert(\"custom pre-defined message option!\");\n  };\n\n  let customMessageOption = new CometChatMessageOptions({\n    iconURL: customIconURL,\n    id: \"delete\",\n    onClick: customOption,\n    optionFor: null,\n    title: \"delete message\",\n  });\n\n  /**\n   * message options list\n   */\n\n  const excludeMessageOptions = [\n    // MessageOptionConstants.reactToMessage,\n    MessageOptionConstants.editMessage,\n    MessageOptionConstants.deleteMessage,\n    MessageOptionConstants.copyMessage,\n    MessageOptionConstants.translateMessage,\n  ];\n\n  const customMessageOptions = [\n    // MessageOptionConstants.reactToMessage,\n    // MessageOptionConstants.editMessage,\n    // MessageOptionConstants.deleteMessage,\n    // MessageOptionConstants.copyMessage,\n    // MessageOptionConstants.translateMessage,\n    reminderMessage,\n    //saveOption,\n    //pinnedOption,\n    // reportMessage,\n    // messageInformation,\n    customMessageOption,\n  ];\n\n  //let messageTypes = [];\n  let messageTypes = CometChatMessageTemplate.getDefaultTypes();\n  let reminderCustomMessageTemplate = new CometChatMessageTemplate({\n    type: \"extension_reminders\",\n    icon: null,\n    name: \"reminder\",\n    category: \"custom\",\n    customView: reminderView,\n    onActionClick: null,\n  });\n\n  const excludeMessageTypes = [\n    // MessageTypeConstants.file,\n    // MessageTypeConstants.whiteboard,\n    // MessageTypeConstants.document,\n    MessageTypeConstants.poll,\n    // MessageTypeConstants.image,\n    // MessageTypeConstants.text,\n  ];\n\n  messageTypes.push(reminderCustomMessageTemplate);\n\n  Hook(setGroup, setUser);\n\n  return user ? (\n    <div style={alignmentContainerStyle()}>\n      <div>\n        {pinnedMsg ? <>{pinnedMessageView}</> : null}\n        <CometChatMessageList\n          user={user}\n          style={{ width: \"650px\", height: \"450px\" }}\n          alignment={\"standard\"} //['standard','leftAligned']\n          excludeMessageOptions={excludeMessageOptions}\n          customMessageOptions={customMessageOptions}\n          excludeMessageTypes={excludeMessageTypes}\n          sentMessageInputData={{\n            thumbnail: false,\n            title: false,\n            time: true,\n            readReceipt: true,\n          }}\n          messageTypes={messageTypes}\n          messageBubbleConfiguration={messageBubbleConfig}\n        />\n\n        {launchReminder ? (\n          <CometChatPopover position=\"left\" x=\"750\" y=\"350\">\n            {customViewSetDate}\n          </CometChatPopover>\n        ) : null}\n\n        {launchReport ? (\n          <CometChatPopover position=\"left\" x=\"650\" y=\"350\">\n            {reportMessageView}\n          </CometChatPopover>\n        ) : null}\n\n        {launchMessageInfo ? (\n          <CometChatPopover position=\"left\" x=\"600\" y=\"230\">\n            {messageInfoView(messageObject)}\n          </CometChatPopover>\n        ) : null}\n      </div>\n      <div style={buttonContainerStyle()}>\n        <button onClick={defaultHandler} style={buttonStyle()}>\n          default\n        </button>\n        <button onClick={customHandler} style={buttonStyle()}>\n          custom\n        </button>\n      </div>\n    </div>\n  ) : null;\n};\n\nexport { ExcludeMessageOptions };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}