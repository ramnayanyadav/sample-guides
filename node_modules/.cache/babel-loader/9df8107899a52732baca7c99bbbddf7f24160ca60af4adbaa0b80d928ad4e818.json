{"ast":null,"code":"var _jsxFileName = \"/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/cometchat-pro-react-ui-kit/src/components/Messages/CometChatMessageHeader/index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { MessageHeaderManager } from \"./controller\";\nimport { Hooks } from \"./hooks\";\nimport { CometChatMessageReceiverType, CometChatMessageEvents } from \"..\";\nimport { CometChatDataItem, CometChatTheme, DataItemConfiguration } from \"../../Shared\";\nimport { localize, UserStatusConstants } from \"../..\";\nimport { iconStyle, menuActionStyle, chatHeaderStyle, chatDetailStyle, chatThumbnailStyle, backButtonStyle, listStyle, dataItemStyle } from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CometChatMessageHeader = props => {\n  _s();\n  /**\n   * Destructuring prop\n   */\n  const {\n    theme,\n    user,\n    group,\n    showBackButton\n  } = props;\n  const loggedInUser = React.useRef(null);\n  const messageHeaderManager = React.useRef(new MessageHeaderManager());\n  //const callbackData = React.useRef(null);\n  const callbackDataRef = React.useRef(null);\n  const chatWithRef = React.useRef(null);\n  const chatWithTypeRef = React.useRef(null);\n  const [messageHeaderStatus, setMessageHeaderStatus] = React.useState(\"\");\n  const [userPresence, setUserPresence] = React.useState(false);\n  const _theme = new CometChatTheme(theme !== null && theme !== void 0 ? theme : {});\n  const messageHeaderCallback = function (listenerName) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    callbackDataRef.current = {\n      name: listenerName,\n      args: [...args]\n    };\n    try {\n      var _callbackDataRef$curr, _callbackDataRef$curr2;\n      const handler = handlers[(_callbackDataRef$curr = callbackDataRef.current) === null || _callbackDataRef$curr === void 0 ? void 0 : _callbackDataRef$curr.name];\n      if (handler) return handler(...((_callbackDataRef$curr2 = callbackDataRef.current) === null || _callbackDataRef$curr2 === void 0 ? void 0 : _callbackDataRef$curr2.args));\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  /**\n   *\n   * When a user goes online/ offline\n   */\n  const handleUsers = user => {\n    var _chatWithRef$current;\n    if ((chatWithTypeRef === null || chatWithTypeRef === void 0 ? void 0 : chatWithTypeRef.current) === CometChatMessageReceiverType.user && (chatWithRef === null || chatWithRef === void 0 ? void 0 : (_chatWithRef$current = chatWithRef.current) === null || _chatWithRef$current === void 0 ? void 0 : _chatWithRef$current.uid) === user.uid) {\n      if (user.status === UserStatusConstants.offline) {\n        setMessageHeaderStatus(localize(\"OFFLINE\"));\n        setUserPresence(false);\n      } else if (user.status === UserStatusConstants.online) {\n        setMessageHeaderStatus(localize(\"ONLINE\"));\n        setUserPresence(true);\n      }\n    }\n  };\n  const handleGroups = group => {\n    var _chatWithRef$current2;\n    if ((chatWithTypeRef === null || chatWithTypeRef === void 0 ? void 0 : chatWithTypeRef.current) === CometChatMessageReceiverType.group && (chatWithRef === null || chatWithRef === void 0 ? void 0 : (_chatWithRef$current2 = chatWithRef.current) === null || _chatWithRef$current2 === void 0 ? void 0 : _chatWithRef$current2.guid) === group.guid) {\n      const membersCount = parseInt(group.membersCount);\n      const status = `${membersCount} ${localize(\"MEMBERS\")}`;\n      setMessageHeaderStatus(status);\n    }\n  };\n  const getBackButtonElem = () => {\n    if (showBackButton) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__backbutton\",\n        style: backButtonStyle(props)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  const handleStartTyping = typingIndicator => {\n    var _chatWithRef$current3, _chatWithRef$current4;\n    if ((chatWithTypeRef === null || chatWithTypeRef === void 0 ? void 0 : chatWithTypeRef.current) === CometChatMessageReceiverType.group && (chatWithTypeRef === null || chatWithTypeRef === void 0 ? void 0 : chatWithTypeRef.current) === typingIndicator.receiverType && (chatWithRef === null || chatWithRef === void 0 ? void 0 : (_chatWithRef$current3 = chatWithRef.current) === null || _chatWithRef$current3 === void 0 ? void 0 : _chatWithRef$current3.guid) === typingIndicator.receiverId) {\n      const typingText = `${typingIndicator.sender.name} ${localize(\"IS_TYPING\")}`;\n      setMessageHeaderStatus(typingText);\n    } else if ((chatWithTypeRef === null || chatWithTypeRef === void 0 ? void 0 : chatWithTypeRef.current) === CometChatMessageReceiverType.user && (chatWithTypeRef === null || chatWithTypeRef === void 0 ? void 0 : chatWithTypeRef.current) === typingIndicator.receiverType && (chatWithRef === null || chatWithRef === void 0 ? void 0 : (_chatWithRef$current4 = chatWithRef.current) === null || _chatWithRef$current4 === void 0 ? void 0 : _chatWithRef$current4.uid) === typingIndicator.sender.uid) {\n      const typingText = localize(\"TYPING\");\n      setMessageHeaderStatus(typingText);\n    }\n  };\n  const handleEndTyping = typingIndicator => {\n    var _chatWithRef$current5, _chatWithRef$current7;\n    if ((chatWithTypeRef === null || chatWithTypeRef === void 0 ? void 0 : chatWithTypeRef.current) === CometChatMessageReceiverType.group && (chatWithTypeRef === null || chatWithTypeRef === void 0 ? void 0 : chatWithTypeRef.current) === typingIndicator.receiverType && (chatWithRef === null || chatWithRef === void 0 ? void 0 : (_chatWithRef$current5 = chatWithRef.current) === null || _chatWithRef$current5 === void 0 ? void 0 : _chatWithRef$current5.guid) === typingIndicator.receiverId) {\n      var _chatWithRef$current6;\n      const status = `${chatWithRef === null || chatWithRef === void 0 ? void 0 : (_chatWithRef$current6 = chatWithRef.current) === null || _chatWithRef$current6 === void 0 ? void 0 : _chatWithRef$current6.membersCount} ${localize(\"MEMBERS\")}`;\n      setMessageHeaderStatus(status);\n    } else if ((chatWithTypeRef === null || chatWithTypeRef === void 0 ? void 0 : chatWithTypeRef.current) === CometChatMessageReceiverType.user && (chatWithTypeRef === null || chatWithTypeRef === void 0 ? void 0 : chatWithTypeRef.current) === typingIndicator.receiverType && (chatWithRef === null || chatWithRef === void 0 ? void 0 : (_chatWithRef$current7 = chatWithRef.current) === null || _chatWithRef$current7 === void 0 ? void 0 : _chatWithRef$current7.uid) === typingIndicator.sender.uid) {\n      if (userPresence) {\n        setMessageHeaderStatus(localize(\"ONLINE\"));\n        setUserPresence(true);\n      } else {\n        setMessageHeaderStatus(localize(\"OFFLINE\"));\n        setUserPresence(false);\n      }\n    }\n  };\n  const handlers = {\n    onUserOnline: handleUsers,\n    onUserOffline: handleUsers,\n    onMemberAddedToGroup: handleGroups,\n    onGroupMemberJoined: handleGroups,\n    onGroupMemberKicked: handleGroups,\n    onGroupMemberLeft: handleGroups,\n    onGroupMemberBanned: handleGroups,\n    onTypingStarted: handleStartTyping,\n    onTypingEnded: handleEndTyping\n  };\n  const errorHandler = errorCode => {\n    CometChatMessageEvents.emit(CometChatMessageEvents.onMessageError, errorCode);\n  };\n\n  /** data item configuration */\n  const dataItemConfig = new DataItemConfiguration({});\n  const _inputData = dataItemConfig.inputData;\n  const _isActive = false;\n  //const _options = dataItemConfig.options;\n  //const _tail = dataItemConfig.tail;\n\n  Hooks(props, loggedInUser, chatWithRef, chatWithTypeRef, setMessageHeaderStatus, setUserPresence, messageHeaderManager, messageHeaderCallback, errorHandler);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: chatHeaderStyle(props, _theme),\n    className: \"chat__header\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: chatDetailStyle(props),\n      className: \"chat__details\",\n      children: [getBackButtonElem(), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: chatThumbnailStyle(props),\n        children: /*#__PURE__*/_jsxDEV(CometChatDataItem, {\n          inputData: {\n            id: \"\",\n            thumbnail: true,\n            status: userPresence,\n            title: true,\n            subtitle: () => messageHeaderStatus\n          } || _inputData,\n          style: dataItemStyle(props, _theme),\n          user: user,\n          group: group,\n          theme: _theme\n          // options={props.options || _options}\n          // isActive={_isActive}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n};\n_s(CometChatMessageHeader, \"mbJDb2sPzwRocFm62rnsGwWg3ME=\");\n_c = CometChatMessageHeader;\nCometChatMessageHeader.defaultProps = {\n  user: null,\n  group: null,\n  style: {\n    width: \"\",\n    height: \"\",\n    border: \"\",\n    borderRadius: \"\",\n    background: \"\",\n    backButtonIconTint: \"\"\n  },\n  showBackButton: false,\n  backButtonIconURL: \"\",\n  //options: [],\n  enableTypingIndicator: false,\n  dataItemConfiguration: null\n};\nCometChatMessageHeader.propTypes = {\n  user: PropTypes.object,\n  group: PropTypes.object,\n  showBackButton: PropTypes.bool,\n  style: PropTypes.object,\n  //options: PropTypes.array,\n  enableTypingIndicator: PropTypes.bool,\n  dataItemConfiguration: PropTypes.object\n};\nexport { CometChatMessageHeader };\nvar _c;\n$RefreshReg$(_c, \"CometChatMessageHeader\");","map":{"version":3,"names":["React","PropTypes","CometChat","MessageHeaderManager","Hooks","CometChatMessageReceiverType","CometChatMessageEvents","CometChatDataItem","CometChatTheme","DataItemConfiguration","localize","UserStatusConstants","iconStyle","menuActionStyle","chatHeaderStyle","chatDetailStyle","chatThumbnailStyle","backButtonStyle","listStyle","dataItemStyle","CometChatMessageHeader","props","theme","user","group","showBackButton","loggedInUser","useRef","messageHeaderManager","callbackDataRef","chatWithRef","chatWithTypeRef","messageHeaderStatus","setMessageHeaderStatus","useState","userPresence","setUserPresence","_theme","messageHeaderCallback","listenerName","args","current","name","handler","handlers","e","handleUsers","uid","status","offline","online","handleGroups","guid","membersCount","parseInt","getBackButtonElem","handleStartTyping","typingIndicator","receiverType","receiverId","typingText","sender","handleEndTyping","onUserOnline","onUserOffline","onMemberAddedToGroup","onGroupMemberJoined","onGroupMemberKicked","onGroupMemberLeft","onGroupMemberBanned","onTypingStarted","onTypingEnded","errorHandler","errorCode","emit","onMessageError","dataItemConfig","_inputData","inputData","_isActive","id","thumbnail","title","subtitle","defaultProps","style","width","height","border","borderRadius","background","backButtonIconTint","backButtonIconURL","enableTypingIndicator","dataItemConfiguration","propTypes","object","bool"],"sources":["/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/cometchat-pro-react-ui-kit/src/components/Messages/CometChatMessageHeader/index.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport { MessageHeaderManager } from \"./controller\";\nimport { Hooks } from \"./hooks\";\n\nimport { CometChatMessageReceiverType, CometChatMessageEvents } from \"..\";\n\nimport {\n  CometChatDataItem,\n  CometChatTheme,\n  DataItemConfiguration,\n} from \"../../Shared\";\n\nimport { localize, UserStatusConstants } from \"../..\";\n\nimport {\n  iconStyle,\n  menuActionStyle,\n  chatHeaderStyle,\n  chatDetailStyle,\n  chatThumbnailStyle,\n  backButtonStyle,\n  listStyle,\n  dataItemStyle,\n} from \"./style\";\n\nconst CometChatMessageHeader = (props) => {\n  /**\n   * Destructuring prop\n   */\n  const { theme, user, group, showBackButton } = props;\n\n  const loggedInUser = React.useRef(null);\n  const messageHeaderManager = React.useRef(new MessageHeaderManager());\n  //const callbackData = React.useRef(null);\n  const callbackDataRef = React.useRef(null);\n  const chatWithRef = React.useRef(null);\n  const chatWithTypeRef = React.useRef(null);\n  const [messageHeaderStatus, setMessageHeaderStatus] = React.useState(\"\");\n  const [userPresence, setUserPresence] = React.useState(false);\n \n  const _theme = new CometChatTheme(theme ?? {});\n\n  const messageHeaderCallback = (listenerName, ...args) => {\n    callbackDataRef.current = { name: listenerName, args: [...args] };\n   try {\n    const handler = handlers[callbackDataRef.current?.name];\n\n    if (handler) return handler(...callbackDataRef.current?.args);\n  } catch (e) {\n    throw e;\n  }\n  };\n\n  /**\n   *\n   * When a user goes online/ offline\n   */\n  const handleUsers = (user) => {\n    if (\n      chatWithTypeRef?.current === CometChatMessageReceiverType.user &&\n      chatWithRef?.current?.uid === user.uid\n    ) {\n      if (user.status === UserStatusConstants.offline) {\n        setMessageHeaderStatus(localize(\"OFFLINE\"));\n        setUserPresence(false);\n      } else if (user.status === UserStatusConstants.online) {\n        setMessageHeaderStatus(localize(\"ONLINE\"));\n        setUserPresence(true);\n      }\n    }\n  };\n\n  const handleGroups = (group) => {\n    if (\n      chatWithTypeRef?.current === CometChatMessageReceiverType.group &&\n      chatWithRef?.current?.guid === group.guid\n    ) {\n      const membersCount = parseInt(group.membersCount);\n      const status = `${membersCount} ${localize(\"MEMBERS\")}`;\n      setMessageHeaderStatus(status);\n    }\n  };\n\n  const getBackButtonElem = () => {\n    if (showBackButton) {\n      return (\n        <div className=\"chat__backbutton\" style={backButtonStyle(props)}></div>\n      );\n    }\n    return null;\n  };\n\n  const handleStartTyping = (typingIndicator) => {\n    if (\n      chatWithTypeRef?.current === CometChatMessageReceiverType.group &&\n      chatWithTypeRef?.current === typingIndicator.receiverType &&\n      chatWithRef?.current?.guid === typingIndicator.receiverId\n    ) {\n      const typingText = `${typingIndicator.sender.name} ${localize(\n        \"IS_TYPING\"\n      )}`;\n      setMessageHeaderStatus(typingText);\n    } else if (\n      chatWithTypeRef?.current === CometChatMessageReceiverType.user &&\n      chatWithTypeRef?.current === typingIndicator.receiverType &&\n      chatWithRef?.current?.uid === typingIndicator.sender.uid\n    ) {\n      const typingText = localize(\"TYPING\");\n      setMessageHeaderStatus(typingText);\n    }\n  };\n\n  const handleEndTyping = (typingIndicator) => {\n    if (\n      chatWithTypeRef?.current === CometChatMessageReceiverType.group &&\n      chatWithTypeRef?.current === typingIndicator.receiverType &&\n      chatWithRef?.current?.guid === typingIndicator.receiverId\n    ) {\n      const status = `${chatWithRef?.current?.membersCount} ${localize(\"MEMBERS\")}`;\n      setMessageHeaderStatus(status);\n    } else if (\n      chatWithTypeRef?.current === CometChatMessageReceiverType.user &&\n      chatWithTypeRef?.current === typingIndicator.receiverType &&\n      chatWithRef?.current?.uid === typingIndicator.sender.uid\n    ) {\n      if (userPresence) {\n        setMessageHeaderStatus(localize(\"ONLINE\"));\n        setUserPresence(true);\n      } else {\n        setMessageHeaderStatus(localize(\"OFFLINE\"));\n        setUserPresence(false);\n      }\n    }\n  };\n\n  const handlers = {\n    onUserOnline: handleUsers,\n    onUserOffline: handleUsers,\n    onMemberAddedToGroup: handleGroups,\n    onGroupMemberJoined: handleGroups,\n    onGroupMemberKicked: handleGroups,\n    onGroupMemberLeft: handleGroups,\n    onGroupMemberBanned: handleGroups,\n    onTypingStarted: handleStartTyping,\n    onTypingEnded: handleEndTyping,\n  };\n\n  const errorHandler = (errorCode) => {\n    CometChatMessageEvents.emit(\n      CometChatMessageEvents.onMessageError,\n      errorCode\n    );\n  };\n\n  /** data item configuration */\n  const dataItemConfig = new DataItemConfiguration({});\n  const _inputData = dataItemConfig.inputData;\n  const _isActive = false;\n  //const _options = dataItemConfig.options;\n  //const _tail = dataItemConfig.tail;\n\n  Hooks(\n  props,\n  loggedInUser,\n  chatWithRef,\n  chatWithTypeRef,\n  setMessageHeaderStatus,\n  setUserPresence,\n  messageHeaderManager,\n  messageHeaderCallback,\n  errorHandler\n  );\n\n  return (\n    <div style={chatHeaderStyle(props, _theme)} className=\"chat__header\">\n      <div style={chatDetailStyle(props)} className=\"chat__details\">\n        {getBackButtonElem()}\n        <div style={chatThumbnailStyle(props)}>\n          <CometChatDataItem\n            inputData={\n              {\n                id: \"\",\n                thumbnail: true,\n                status: userPresence,\n                title: true,\n                subtitle: () => messageHeaderStatus,\n              } || _inputData\n            }\n            style={dataItemStyle(props, _theme)}\n            user={user}\n            group={group}\n            theme={_theme}\n            // options={props.options || _options}\n            // isActive={_isActive}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nCometChatMessageHeader.defaultProps = {\n  user: null,\n  group: null,\n  style: {\n    width: \"\",\n    height: \"\",\n    border: \"\",\n    borderRadius: \"\",\n    background: \"\",\n    backButtonIconTint: \"\",\n  },\n  showBackButton: false,\n  backButtonIconURL: \"\",\n  //options: [],\n  enableTypingIndicator: false,\n  dataItemConfiguration: null,\n};\n\nCometChatMessageHeader.propTypes = {\n  user: PropTypes.object,\n  group: PropTypes.object,\n  showBackButton: PropTypes.bool,\n  style: PropTypes.object,\n  //options: PropTypes.array,\n  enableTypingIndicator: PropTypes.bool,\n  dataItemConfiguration: PropTypes.object,\n};\n\nexport { CometChatMessageHeader };\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,SAAS,QAAQ,qBAAqB;AAE/C,SAASC,oBAAoB,QAAQ,cAAc;AACnD,SAASC,KAAK,QAAQ,SAAS;AAE/B,SAASC,4BAA4B,EAAEC,sBAAsB,QAAQ,IAAI;AAEzE,SACEC,iBAAiB,EACjBC,cAAc,EACdC,qBAAqB,QAChB,cAAc;AAErB,SAASC,QAAQ,EAAEC,mBAAmB,QAAQ,OAAO;AAErD,SACEC,SAAS,EACTC,eAAe,EACfC,eAAe,EACfC,eAAe,EACfC,kBAAkB,EAClBC,eAAe,EACfC,SAAS,EACTC,aAAa,QACR,SAAS;AAAC;AAEjB,MAAMC,sBAAsB,GAAIC,KAAK,IAAK;EAAA;EACxC;AACF;AACA;EACE,MAAM;IAAEC,KAAK;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAe,CAAC,GAAGJ,KAAK;EAEpD,MAAMK,YAAY,GAAG1B,KAAK,CAAC2B,MAAM,CAAC,IAAI,CAAC;EACvC,MAAMC,oBAAoB,GAAG5B,KAAK,CAAC2B,MAAM,CAAC,IAAIxB,oBAAoB,EAAE,CAAC;EACrE;EACA,MAAM0B,eAAe,GAAG7B,KAAK,CAAC2B,MAAM,CAAC,IAAI,CAAC;EAC1C,MAAMG,WAAW,GAAG9B,KAAK,CAAC2B,MAAM,CAAC,IAAI,CAAC;EACtC,MAAMI,eAAe,GAAG/B,KAAK,CAAC2B,MAAM,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACK,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGjC,KAAK,CAACkC,QAAQ,CAAC,EAAE,CAAC;EACxE,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGpC,KAAK,CAACkC,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMG,MAAM,GAAG,IAAI7B,cAAc,CAACc,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI,CAAC,CAAC,CAAC;EAE9C,MAAMgB,qBAAqB,GAAG,UAACC,YAAY,EAAc;IAAA,kCAATC,IAAI;MAAJA,IAAI;IAAA;IAClDX,eAAe,CAACY,OAAO,GAAG;MAAEC,IAAI,EAAEH,YAAY;MAAEC,IAAI,EAAE,CAAC,GAAGA,IAAI;IAAE,CAAC;IAClE,IAAI;MAAA;MACH,MAAMG,OAAO,GAAGC,QAAQ,0BAACf,eAAe,CAACY,OAAO,0DAAvB,sBAAyBC,IAAI,CAAC;MAEvD,IAAIC,OAAO,EAAE,OAAOA,OAAO,CAAC,8BAAGd,eAAe,CAACY,OAAO,2DAAvB,uBAAyBD,IAAI,EAAC;IAC/D,CAAC,CAAC,OAAOK,CAAC,EAAE;MACV,MAAMA,CAAC;IACT;EACA,CAAC;;EAED;AACF;AACA;AACA;EACE,MAAMC,WAAW,GAAIvB,IAAI,IAAK;IAAA;IAC5B,IACE,CAAAQ,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEU,OAAO,MAAKpC,4BAA4B,CAACkB,IAAI,IAC9D,CAAAO,WAAW,aAAXA,WAAW,+CAAXA,WAAW,CAAEW,OAAO,yDAApB,qBAAsBM,GAAG,MAAKxB,IAAI,CAACwB,GAAG,EACtC;MACA,IAAIxB,IAAI,CAACyB,MAAM,KAAKrC,mBAAmB,CAACsC,OAAO,EAAE;QAC/ChB,sBAAsB,CAACvB,QAAQ,CAAC,SAAS,CAAC,CAAC;QAC3C0B,eAAe,CAAC,KAAK,CAAC;MACxB,CAAC,MAAM,IAAIb,IAAI,CAACyB,MAAM,KAAKrC,mBAAmB,CAACuC,MAAM,EAAE;QACrDjB,sBAAsB,CAACvB,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC1C0B,eAAe,CAAC,IAAI,CAAC;MACvB;IACF;EACF,CAAC;EAED,MAAMe,YAAY,GAAI3B,KAAK,IAAK;IAAA;IAC9B,IACE,CAAAO,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEU,OAAO,MAAKpC,4BAA4B,CAACmB,KAAK,IAC/D,CAAAM,WAAW,aAAXA,WAAW,gDAAXA,WAAW,CAAEW,OAAO,0DAApB,sBAAsBW,IAAI,MAAK5B,KAAK,CAAC4B,IAAI,EACzC;MACA,MAAMC,YAAY,GAAGC,QAAQ,CAAC9B,KAAK,CAAC6B,YAAY,CAAC;MACjD,MAAML,MAAM,GAAI,GAAEK,YAAa,IAAG3C,QAAQ,CAAC,SAAS,CAAE,EAAC;MACvDuB,sBAAsB,CAACe,MAAM,CAAC;IAChC;EACF,CAAC;EAED,MAAMO,iBAAiB,GAAG,MAAM;IAC9B,IAAI9B,cAAc,EAAE;MAClB,oBACE;QAAK,SAAS,EAAC,kBAAkB;QAAC,KAAK,EAAER,eAAe,CAACI,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAO;IAE3E;IACA,OAAO,IAAI;EACb,CAAC;EAED,MAAMmC,iBAAiB,GAAIC,eAAe,IAAK;IAAA;IAC7C,IACE,CAAA1B,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEU,OAAO,MAAKpC,4BAA4B,CAACmB,KAAK,IAC/D,CAAAO,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEU,OAAO,MAAKgB,eAAe,CAACC,YAAY,IACzD,CAAA5B,WAAW,aAAXA,WAAW,gDAAXA,WAAW,CAAEW,OAAO,0DAApB,sBAAsBW,IAAI,MAAKK,eAAe,CAACE,UAAU,EACzD;MACA,MAAMC,UAAU,GAAI,GAAEH,eAAe,CAACI,MAAM,CAACnB,IAAK,IAAGhC,QAAQ,CAC3D,WAAW,CACX,EAAC;MACHuB,sBAAsB,CAAC2B,UAAU,CAAC;IACpC,CAAC,MAAM,IACL,CAAA7B,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEU,OAAO,MAAKpC,4BAA4B,CAACkB,IAAI,IAC9D,CAAAQ,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEU,OAAO,MAAKgB,eAAe,CAACC,YAAY,IACzD,CAAA5B,WAAW,aAAXA,WAAW,gDAAXA,WAAW,CAAEW,OAAO,0DAApB,sBAAsBM,GAAG,MAAKU,eAAe,CAACI,MAAM,CAACd,GAAG,EACxD;MACA,MAAMa,UAAU,GAAGlD,QAAQ,CAAC,QAAQ,CAAC;MACrCuB,sBAAsB,CAAC2B,UAAU,CAAC;IACpC;EACF,CAAC;EAED,MAAME,eAAe,GAAIL,eAAe,IAAK;IAAA;IAC3C,IACE,CAAA1B,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEU,OAAO,MAAKpC,4BAA4B,CAACmB,KAAK,IAC/D,CAAAO,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEU,OAAO,MAAKgB,eAAe,CAACC,YAAY,IACzD,CAAA5B,WAAW,aAAXA,WAAW,gDAAXA,WAAW,CAAEW,OAAO,0DAApB,sBAAsBW,IAAI,MAAKK,eAAe,CAACE,UAAU,EACzD;MAAA;MACA,MAAMX,MAAM,GAAI,GAAElB,WAAW,aAAXA,WAAW,gDAAXA,WAAW,CAAEW,OAAO,0DAApB,sBAAsBY,YAAa,IAAG3C,QAAQ,CAAC,SAAS,CAAE,EAAC;MAC7EuB,sBAAsB,CAACe,MAAM,CAAC;IAChC,CAAC,MAAM,IACL,CAAAjB,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEU,OAAO,MAAKpC,4BAA4B,CAACkB,IAAI,IAC9D,CAAAQ,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEU,OAAO,MAAKgB,eAAe,CAACC,YAAY,IACzD,CAAA5B,WAAW,aAAXA,WAAW,gDAAXA,WAAW,CAAEW,OAAO,0DAApB,sBAAsBM,GAAG,MAAKU,eAAe,CAACI,MAAM,CAACd,GAAG,EACxD;MACA,IAAIZ,YAAY,EAAE;QAChBF,sBAAsB,CAACvB,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC1C0B,eAAe,CAAC,IAAI,CAAC;MACvB,CAAC,MAAM;QACLH,sBAAsB,CAACvB,QAAQ,CAAC,SAAS,CAAC,CAAC;QAC3C0B,eAAe,CAAC,KAAK,CAAC;MACxB;IACF;EACF,CAAC;EAED,MAAMQ,QAAQ,GAAG;IACfmB,YAAY,EAAEjB,WAAW;IACzBkB,aAAa,EAAElB,WAAW;IAC1BmB,oBAAoB,EAAEd,YAAY;IAClCe,mBAAmB,EAAEf,YAAY;IACjCgB,mBAAmB,EAAEhB,YAAY;IACjCiB,iBAAiB,EAAEjB,YAAY;IAC/BkB,mBAAmB,EAAElB,YAAY;IACjCmB,eAAe,EAAEd,iBAAiB;IAClCe,aAAa,EAAET;EACjB,CAAC;EAED,MAAMU,YAAY,GAAIC,SAAS,IAAK;IAClCnE,sBAAsB,CAACoE,IAAI,CACzBpE,sBAAsB,CAACqE,cAAc,EACrCF,SAAS,CACV;EACH,CAAC;;EAED;EACA,MAAMG,cAAc,GAAG,IAAInE,qBAAqB,CAAC,CAAC,CAAC,CAAC;EACpD,MAAMoE,UAAU,GAAGD,cAAc,CAACE,SAAS;EAC3C,MAAMC,SAAS,GAAG,KAAK;EACvB;EACA;;EAEA3E,KAAK,CACLiB,KAAK,EACLK,YAAY,EACZI,WAAW,EACXC,eAAe,EACfE,sBAAsB,EACtBG,eAAe,EACfR,oBAAoB,EACpBU,qBAAqB,EACrBkC,YAAY,CACX;EAED,oBACE;IAAK,KAAK,EAAE1D,eAAe,CAACO,KAAK,EAAEgB,MAAM,CAAE;IAAC,SAAS,EAAC,cAAc;IAAA,uBAClE;MAAK,KAAK,EAAEtB,eAAe,CAACM,KAAK,CAAE;MAAC,SAAS,EAAC,eAAe;MAAA,WAC1DkC,iBAAiB,EAAE,eACpB;QAAK,KAAK,EAAEvC,kBAAkB,CAACK,KAAK,CAAE;QAAA,uBACpC,QAAC,iBAAiB;UAChB,SAAS,EACP;YACE2D,EAAE,EAAE,EAAE;YACNC,SAAS,EAAE,IAAI;YACfjC,MAAM,EAAEb,YAAY;YACpB+C,KAAK,EAAE,IAAI;YACXC,QAAQ,EAAE,MAAMnD;UAClB,CAAC,IAAI6C,UACN;UACD,KAAK,EAAE1D,aAAa,CAACE,KAAK,EAAEgB,MAAM,CAAE;UACpC,IAAI,EAAEd,IAAK;UACX,KAAK,EAAEC,KAAM;UACb,KAAK,EAAEa;UACP;UACA;QAAA;UAAA;UAAA;UAAA;QAAA;MACA;QAAA;QAAA;QAAA;MAAA,QACE;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GA9KIjB,sBAAsB;AAAA,KAAtBA,sBAAsB;AAgL5BA,sBAAsB,CAACgE,YAAY,GAAG;EACpC7D,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE,IAAI;EACX6D,KAAK,EAAE;IACLC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,EAAE;IAChBC,UAAU,EAAE,EAAE;IACdC,kBAAkB,EAAE;EACtB,CAAC;EACDlE,cAAc,EAAE,KAAK;EACrBmE,iBAAiB,EAAE,EAAE;EACrB;EACAC,qBAAqB,EAAE,KAAK;EAC5BC,qBAAqB,EAAE;AACzB,CAAC;AAED1E,sBAAsB,CAAC2E,SAAS,GAAG;EACjCxE,IAAI,EAAEtB,SAAS,CAAC+F,MAAM;EACtBxE,KAAK,EAAEvB,SAAS,CAAC+F,MAAM;EACvBvE,cAAc,EAAExB,SAAS,CAACgG,IAAI;EAC9BZ,KAAK,EAAEpF,SAAS,CAAC+F,MAAM;EACvB;EACAH,qBAAqB,EAAE5F,SAAS,CAACgG,IAAI;EACrCH,qBAAqB,EAAE7F,SAAS,CAAC+F;AACnC,CAAC;AAED,SAAS5E,sBAAsB;AAAG;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}