{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from \"react\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { CometChatMessageReceiverType } from \"..\";\nimport { CometChatDate, localize, UserStatusConstants } from \"../..\";\nconst getUser = uid => {\n  return new Promise((resolve, reject) => {\n    CometChat.getUser(uid).then(user => resolve(user)).catch(error => reject(error));\n  });\n};\nconst getGroup = guid => {\n  return new Promise((resolve, reject) => {\n    CometChat.getGroup(guid).then(group => resolve(group)).catch(error => reject(error));\n  });\n};\nexport const Hooks = (props, loggedInUser, chatWithRef, chatWithTypeRef, setMessageHeaderStatus, setUserPresence, messageHeaderManager, messageHeaderCallback, errorHandler) => {\n  _s();\n  //fetch logged in user\n  React.useEffect(() => {\n    CometChat.getLoggedinUser().then(user => {\n      var _messageHeaderManager;\n      loggedInUser.current = user;\n      (_messageHeaderManager = messageHeaderManager.current) === null || _messageHeaderManager === void 0 ? void 0 : _messageHeaderManager.attachListeners(messageHeaderCallback);\n    }).catch(error => errorHandler(error));\n  }, []);\n  const updateMessageHeaderStatusForUser = React.useCallback(user => {\n    if (user.status === UserStatusConstants.offline) {\n      setMessageHeaderStatus(localize(\"OFFLINE\"));\n      setUserPresence(false);\n    } else if (user.status === UserStatusConstants.online) {\n      setMessageHeaderStatus(localize(\"ONLINE\"));\n      setUserPresence(true);\n    }\n  }, [setMessageHeaderStatus, setUserPresence]);\n  const updateMessageHeaderStatusForGroup = React.useCallback(group => {\n    const status = `${group.membersCount} ${localize(\"MEMBERS\")}`;\n    setMessageHeaderStatus(status);\n    //setUserPresence(CometChat.USER_STATUS.OFFLINE);\n  }, [setMessageHeaderStatus]);\n\n  //update receiver user\n  React.useEffect(() => {\n    if (props.user && props.user.uid) {\n      if (props.user.name) {\n        chatWithTypeRef.current = CometChatMessageReceiverType.group;\n        chatWithRef.current = props.group;\n        updateMessageHeaderStatusForUser(props.user);\n      } else {\n        getUser(props.user.uid).then(user => {\n          chatWithTypeRef.current = CometChatMessageReceiverType.group;\n          chatWithRef.current = user;\n          updateMessageHeaderStatusForUser(user);\n        }).catch(error => errorHandler(error));\n      }\n    } else if (props.group && props.group.guid) {\n      if (props.group.name) {\n        chatWithTypeRef.current = CometChatMessageReceiverType.group;\n        chatWithRef.current = props.group;\n        updateMessageHeaderStatusForGroup(props.group);\n      } else {\n        getGroup(props.group.guid).then(group => {\n          chatWithTypeRef.current = CometChatMessageReceiverType.group;\n          chatWithRef.current = group;\n          updateMessageHeaderStatusForGroup(group);\n        }).catch(error => errorHandler(error));\n      }\n    }\n  }, [props, props.user, props.group, chatWithRef, chatWithTypeRef, updateMessageHeaderStatusForUser, updateMessageHeaderStatusForGroup]);\n};\n_s(Hooks, \"6SAuYwqZZ/rfpYf8vHLBzlImCr8=\");\n_c = Hooks;\nvar _c;\n$RefreshReg$(_c, \"Hooks\");","map":{"version":3,"names":["React","CometChat","CometChatMessageReceiverType","CometChatDate","localize","UserStatusConstants","getUser","uid","Promise","resolve","reject","then","user","catch","error","getGroup","guid","group","Hooks","props","loggedInUser","chatWithRef","chatWithTypeRef","setMessageHeaderStatus","setUserPresence","messageHeaderManager","messageHeaderCallback","errorHandler","useEffect","getLoggedinUser","current","attachListeners","updateMessageHeaderStatusForUser","useCallback","status","offline","online","updateMessageHeaderStatusForGroup","membersCount","name"],"sources":["/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/cometchat-pro-react-ui-kit/src/components/Messages/CometChatMessageHeader/hooks.js"],"sourcesContent":["import React from \"react\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport { CometChatMessageReceiverType } from \"..\";\nimport { CometChatDate, localize, UserStatusConstants } from \"../..\";\n\nconst getUser = (uid) => {\n  return new Promise((resolve, reject) => {\n    CometChat.getUser(uid)\n      .then((user) => resolve(user))\n      .catch((error) => reject(error));\n  });\n};\n\nconst getGroup = (guid) => {\n  return new Promise((resolve, reject) => {\n    CometChat.getGroup(guid)\n      .then((group) => resolve(group))\n      .catch((error) => reject(error));\n  });\n};\n\nexport const Hooks = (\n  props,\n  loggedInUser,\n  chatWithRef,\n  chatWithTypeRef,\n  setMessageHeaderStatus,\n  setUserPresence,\n  messageHeaderManager,\n  messageHeaderCallback,\n  errorHandler\n) => {\n  //fetch logged in user\n  React.useEffect(() => {\n    CometChat.getLoggedinUser()\n      .then((user) => {\n        loggedInUser.current = user;\n        messageHeaderManager.current?.attachListeners(messageHeaderCallback);\n      })\n      .catch((error) => errorHandler(error));\n  }, []);\n\n  const updateMessageHeaderStatusForUser = React.useCallback(\n    (user) => {\n      if (user.status === UserStatusConstants.offline) {\n        setMessageHeaderStatus(localize(\"OFFLINE\"));\n        setUserPresence(false);\n      } else if (user.status === UserStatusConstants.online) {\n        setMessageHeaderStatus(localize(\"ONLINE\"));\n        setUserPresence(true);\n      }\n    },\n    [setMessageHeaderStatus, setUserPresence]\n  );\n\n  const updateMessageHeaderStatusForGroup = React.useCallback(\n    (group) => {\n      const status = `${group.membersCount} ${localize(\"MEMBERS\")}`;\n      setMessageHeaderStatus(status);\n      //setUserPresence(CometChat.USER_STATUS.OFFLINE);\n    },\n    [setMessageHeaderStatus]\n  );\n\n  //update receiver user\n  React.useEffect(() => {\n    if (props.user && props.user.uid) {\n      if (props.user.name) {\n        chatWithTypeRef.current = CometChatMessageReceiverType.group;\n        chatWithRef.current=props.group;\n        updateMessageHeaderStatusForUser(props.user);\n      } else {\n        getUser(props.user.uid)\n          .then((user) => {\n            chatWithTypeRef.current = CometChatMessageReceiverType.group;\n            chatWithRef.current = user;\n            updateMessageHeaderStatusForUser(user);\n          })\n          .catch((error) => errorHandler(error));\n      }\n    } else if (props.group && props.group.guid) {\n      if (props.group.name) {\n        chatWithTypeRef.current = CometChatMessageReceiverType.group;\n        chatWithRef.current=props.group;\n        updateMessageHeaderStatusForGroup(props.group);\n      } else {\n        getGroup(props.group.guid)\n          .then((group) => {\n            chatWithTypeRef.current = CometChatMessageReceiverType.group;\n            chatWithRef.current=group;\n            updateMessageHeaderStatusForGroup(group);\n          })\n          .catch((error) => errorHandler(error));\n      }\n    }\n  }, [\n    props,\n    props.user,\n    props.group,\n    chatWithRef,\n    chatWithTypeRef,\n    updateMessageHeaderStatusForUser,\n    updateMessageHeaderStatusForGroup,\n  ]);\n\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}