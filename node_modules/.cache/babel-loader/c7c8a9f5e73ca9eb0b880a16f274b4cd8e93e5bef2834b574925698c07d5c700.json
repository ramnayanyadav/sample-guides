{"ast":null,"code":"export const ID = () => {\n  // Math.random should be unique because of its seeding algorithm.\n  // Convert it to base 36 (numbers + letters), and grab the first 9 characters\n  // after the decimal.\n  return \"_\" + Math.random().toString(36).substr(2, 9);\n};\n_c = ID;\nexport const getUnixTimestamp = () => {\n  return Math.round(+new Date() / 1000);\n};\nexport const getExtensionsData = (message, extensionKey) => {\n  if (message !== null && message !== void 0 && message.hasOwnProperty(\"metadata\")) {\n    const metadata = message.metadata;\n    const injectedObject = metadata[\"@injected\"];\n    if (injectedObject && injectedObject.hasOwnProperty(\"extensions\")) {\n      const extensionsObject = injectedObject[\"extensions\"];\n      if (extensionsObject && extensionsObject.hasOwnProperty(extensionKey)) {\n        return extensionsObject[extensionKey];\n      }\n    }\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"ID\");","map":{"version":3,"names":["ID","Math","random","toString","substr","getUnixTimestamp","round","Date","getExtensionsData","message","extensionKey","hasOwnProperty","metadata","injectedObject","extensionsObject"],"sources":["/home/admin1/dev/react/sample-react-guides/src/app/home/MessageConstant.js"],"sourcesContent":["export const ID = () => {\n  // Math.random should be unique because of its seeding algorithm.\n  // Convert it to base 36 (numbers + letters), and grab the first 9 characters\n  // after the decimal.\n  return \"_\" + Math.random().toString(36).substr(2, 9);\n};\n\nexport const getUnixTimestamp = () => {\n  return Math.round(+new Date() / 1000);\n};\n\nexport const getExtensionsData = (message, extensionKey) => {\n  if (message?.hasOwnProperty(\"metadata\")) {\n    const metadata = message.metadata;\n    const injectedObject = metadata[\"@injected\"];\n    if (injectedObject && injectedObject.hasOwnProperty(\"extensions\")) {\n      const extensionsObject = injectedObject[\"extensions\"];\n      if (extensionsObject && extensionsObject.hasOwnProperty(extensionKey)) {\n        return extensionsObject[extensionKey];\n      }\n    }\n  }\n};\n"],"mappings":"AAAA,OAAO,MAAMA,EAAE,GAAG,MAAM;EACtB;EACA;EACA;EACA,OAAO,GAAG,GAAGC,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;AACtD,CAAC;AAAC,KALWJ,EAAE;AAOf,OAAO,MAAMK,gBAAgB,GAAG,MAAM;EACpC,OAAOJ,IAAI,CAACK,KAAK,CAAC,CAAC,IAAIC,IAAI,EAAE,GAAG,IAAI,CAAC;AACvC,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAG,CAACC,OAAO,EAAEC,YAAY,KAAK;EAC1D,IAAID,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEE,cAAc,CAAC,UAAU,CAAC,EAAE;IACvC,MAAMC,QAAQ,GAAGH,OAAO,CAACG,QAAQ;IACjC,MAAMC,cAAc,GAAGD,QAAQ,CAAC,WAAW,CAAC;IAC5C,IAAIC,cAAc,IAAIA,cAAc,CAACF,cAAc,CAAC,YAAY,CAAC,EAAE;MACjE,MAAMG,gBAAgB,GAAGD,cAAc,CAAC,YAAY,CAAC;MACrD,IAAIC,gBAAgB,IAAIA,gBAAgB,CAACH,cAAc,CAACD,YAAY,CAAC,EAAE;QACrE,OAAOI,gBAAgB,CAACJ,YAAY,CAAC;MACvC;IACF;EACF;AACF,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}