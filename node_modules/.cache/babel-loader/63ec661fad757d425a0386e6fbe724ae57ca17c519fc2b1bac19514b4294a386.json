{"ast":null,"code":"var _jsxFileName = \"/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/cometchat-pro-react-ui-kit/src/components/Messages/CometChatMessages/index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { CometChatMessageEvents, CometChatMessageHeader, CometChatMessageList, CometChatMessageComposer, CometChatLiveReactions, messageConstants, CometChatMessageTemplate, LiveReactionStyles } from \"..\";\nimport { MessagesManager } from \"./controller\";\nimport { MessageHeaderConfiguration, CometChatTheme, MetadataConstants, localize } from \"../..\";\nimport { MessageComposerConfiguration } from \"../CometChatMessageComposer/MessageComposerConfiguration\";\nimport { MessageListConfiguration } from \"../CometChatMessageList/MessageListConfiguration\";\nimport { messageStatus } from \"../CometChatMessageConstants\";\nimport { chatWrapperStyle, liveReactionWrapperStyle, messageComposerStyle, messageHeaderStyle, liveReactionStyle, messageListStyle } from \"./style\";\nimport { MessageInputData } from \"../..\";\nimport heart from \"./resources/heart.png\";\nimport { Hooks } from \"./hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CometChatMessages = props => {\n  _s();\n  let messageListRef = React.useRef(null);\n  let messageComposerRef = React.useRef(null);\n  const messagesManager = React.useRef(new MessagesManager());\n  const [viewLiveReaction, setViewLiveReaction] = React.useState(false);\n  const [liveReactionTemplate, setLiveReactionTemplate] = React.useState(null);\n  const loggedInUser = React.useRef(null);\n  const {\n    user,\n    group,\n    liveReactionIconURL,\n    messageTypes,\n    hideMessageComposer,\n    enableSoundForMessages,\n    enableSoundForCalls,\n    customIncomingMessageSound,\n    customOutgoingMessageSound,\n    enableTypingIndicator,\n    style,\n    theme,\n    messageHeaderConfiguration,\n    messageListConfiguration,\n    messageComposerConfiguration,\n    detailsConfiguration\n  } = props;\n  console.log(\"changes\", messageComposerConfiguration);\n  const _messageListConfiguration = messageListConfiguration || new MessageListConfiguration({});\n  const _theme = new CometChatTheme(theme !== null && theme !== void 0 ? theme : {});\n  let liveReactionTimeout = 0;\n  const getSentMessageInputData = () => {\n    if (user) {\n      var _messageListConfigura, _messageListConfigura2, _messageListConfigura3, _messageListConfigura4;\n      let timestamp = (_messageListConfiguration === null || _messageListConfiguration === void 0 ? void 0 : (_messageListConfigura = _messageListConfiguration.sentMessageInputData) === null || _messageListConfigura === void 0 ? void 0 : _messageListConfigura.timestamp) || true,\n        readReceipt = (_messageListConfiguration === null || _messageListConfiguration === void 0 ? void 0 : (_messageListConfigura2 = _messageListConfiguration.sentMessageInputData) === null || _messageListConfigura2 === void 0 ? void 0 : _messageListConfigura2.readReceipt) || true,\n        thumbnail = (_messageListConfiguration === null || _messageListConfiguration === void 0 ? void 0 : (_messageListConfigura3 = _messageListConfiguration.sentMessageInputData) === null || _messageListConfigura3 === void 0 ? void 0 : _messageListConfigura3.thumbnail) || false,\n        title = (_messageListConfiguration === null || _messageListConfiguration === void 0 ? void 0 : (_messageListConfigura4 = _messageListConfiguration.sentMessageInputData) === null || _messageListConfigura4 === void 0 ? void 0 : _messageListConfigura4.title) || false;\n      return new MessageInputData({\n        timestamp: timestamp,\n        readReceipt: readReceipt,\n        thumbnail: thumbnail,\n        title: title\n      });\n    } else if (group) {\n      var _messageListConfigura5, _messageListConfigura6, _messageListConfigura7, _messageListConfigura8;\n      let timestamp = (_messageListConfiguration === null || _messageListConfiguration === void 0 ? void 0 : (_messageListConfigura5 = _messageListConfiguration.sentMessageInputData) === null || _messageListConfigura5 === void 0 ? void 0 : _messageListConfigura5.timestamp) || true,\n        readReceipt = (_messageListConfiguration === null || _messageListConfiguration === void 0 ? void 0 : (_messageListConfigura6 = _messageListConfiguration.sentMessageInputData) === null || _messageListConfigura6 === void 0 ? void 0 : _messageListConfigura6.readReceipt) || true,\n        thumbnail = (_messageListConfiguration === null || _messageListConfiguration === void 0 ? void 0 : (_messageListConfigura7 = _messageListConfiguration.sentMessageInputData) === null || _messageListConfigura7 === void 0 ? void 0 : _messageListConfigura7.thumbnail) || true,\n        title = (_messageListConfiguration === null || _messageListConfiguration === void 0 ? void 0 : (_messageListConfigura8 = _messageListConfiguration.sentMessageInputData) === null || _messageListConfigura8 === void 0 ? void 0 : _messageListConfigura8.title) || true;\n      return new MessageInputData({\n        timestamp: timestamp,\n        readReceipt: readReceipt,\n        thumbnail: thumbnail,\n        title: title\n      });\n    }\n  };\n  const getReceivedMessageInputData = () => {\n    if (user) {\n      var _messageListConfigura9, _messageListConfigura10, _messageListConfigura11, _messageListConfigura12;\n      let timestamp = (_messageListConfiguration === null || _messageListConfiguration === void 0 ? void 0 : (_messageListConfigura9 = _messageListConfiguration.receivedMessageInputData) === null || _messageListConfigura9 === void 0 ? void 0 : _messageListConfigura9.timestamp) || true,\n        readReceipt = (_messageListConfiguration === null || _messageListConfiguration === void 0 ? void 0 : (_messageListConfigura10 = _messageListConfiguration.receivedMessageInputData) === null || _messageListConfigura10 === void 0 ? void 0 : _messageListConfigura10.readReceipt) || true,\n        thumbnail = (_messageListConfiguration === null || _messageListConfiguration === void 0 ? void 0 : (_messageListConfigura11 = _messageListConfiguration.receivedMessageInputData) === null || _messageListConfigura11 === void 0 ? void 0 : _messageListConfigura11.thumbnail) || false,\n        title = (_messageListConfiguration === null || _messageListConfiguration === void 0 ? void 0 : (_messageListConfigura12 = _messageListConfiguration.receivedMessageInputData) === null || _messageListConfigura12 === void 0 ? void 0 : _messageListConfigura12.title) || false;\n      return new MessageInputData({\n        timestamp: timestamp,\n        readReceipt: readReceipt,\n        thumbnail: thumbnail,\n        title: title\n      });\n    } else if (group) {\n      var _messageListConfigura13, _messageListConfigura14, _messageListConfigura15, _messageListConfigura16;\n      let timestamp = (_messageListConfiguration === null || _messageListConfiguration === void 0 ? void 0 : (_messageListConfigura13 = _messageListConfiguration.receivedMessageInputData) === null || _messageListConfigura13 === void 0 ? void 0 : _messageListConfigura13.timestamp) || true,\n        readReceipt = (_messageListConfiguration === null || _messageListConfiguration === void 0 ? void 0 : (_messageListConfigura14 = _messageListConfiguration.receivedMessageInputData) === null || _messageListConfigura14 === void 0 ? void 0 : _messageListConfigura14.readReceipt) || false,\n        thumbnail = (_messageListConfiguration === null || _messageListConfiguration === void 0 ? void 0 : (_messageListConfigura15 = _messageListConfiguration.receivedMessageInputData) === null || _messageListConfigura15 === void 0 ? void 0 : _messageListConfigura15.thumbnail) || true,\n        title = (_messageListConfiguration === null || _messageListConfiguration === void 0 ? void 0 : (_messageListConfigura16 = _messageListConfiguration.receivedMessageInputData) === null || _messageListConfigura16 === void 0 ? void 0 : _messageListConfigura16.title) || true;\n      return new MessageInputData({\n        timestamp: timestamp,\n        readReceipt: readReceipt,\n        thumbnail: thumbnail,\n        title: title\n      });\n    }\n  };\n\n  /**\n   * Preview message before edit\n   */\n  const previewMessageForEdit = payload => {\n    if (payload.status === messageStatus.inprogress) {\n      if (messageComposerRef && messageComposerRef.current) {\n        messageComposerRef.current.previewMessageForEdit(payload.message);\n      }\n    } else if (messageListRef && messageListRef.current) {\n      if (payload.status === messageStatus.success) {\n        messageListRef.current.updateMessage(payload.message, true);\n      }\n    }\n  };\n\n  /***\n   * error handler\n   */\n  const errorHandler = errorCode => {\n    CometChatMessageEvents.emit(CometChatMessageEvents.onMessageError, errorCode);\n  };\n\n  /**\n   * Draft a message before sending\n   */\n  const draftMessage = message => {\n    if (messageComposerRef && messageComposerRef.current) {\n      messageComposerRef.current.draftMessage(message);\n    }\n  };\n  const addNewMessage = payload => {\n    if (messageListRef && messageListRef.current) {\n      if (payload.status === messageStatus.inprogress) {\n        messageListRef.current.addMessage(payload.message);\n        messageListRef.current.scrollToBottom();\n      } else if (payload.status === messageStatus.success) {\n        messageListRef.current.updateMessage(payload.message, true);\n      }\n    }\n  };\n  const messagesCallback = (listener, message) => {\n    switch (listener) {\n      case \"onTransientMessageReceived\":\n        onTransientMessageReceived(message);\n        break;\n      default:\n        break;\n    }\n  };\n  const onTransientMessageReceived = message => {\n    if (message.data.type === MetadataConstants.liveReaction) {\n      var _message$data;\n      const payload = {\n        reaction: message === null || message === void 0 ? void 0 : (_message$data = message.data) === null || _message$data === void 0 ? void 0 : _message$data.reaction,\n        style: new LiveReactionStyles(liveReactionStyle() || {})\n      };\n      shareLiveReaction(payload);\n    }\n  };\n  const clearLiveReaction = () => {\n    clearTimeout(liveReactionTimeout);\n    setViewLiveReaction(false);\n  };\n  const infoHandle = () => {};\n  const voiceCallHandle = () => {};\n  const videoCallHandle = () => {};\n  const shareLiveReaction = payload => {\n    //if already live reaction in progress\n    if (liveReactionTimeout) {\n      return false;\n    }\n    setViewLiveReaction(true);\n    setLiveReactionTemplate(payload);\n\n    //set timeout till the next share\n    liveReactionTimeout = setTimeout(clearLiveReaction, messageConstants.liveReactionTimeout);\n  };\n  CometChatMessageEvents.addListener(CometChatMessageEvents.onMessageEdit, \"onMessageEdit\", previewMessageForEdit);\n  CometChatMessageEvents.addListener(CometChatMessageEvents.onMessageSent, \"messageSent\", addNewMessage);\n  CometChatMessageEvents.addListener(CometChatMessageEvents.onLiveReaction, \"liveReactionId\", shareLiveReaction);\n\n  /** message composer configurations */\n  const messageComposerConfig = messageComposerConfiguration || new MessageComposerConfiguration({});\n  const _placeholderText = localize(\"ENTER_YOUR_MESSAGE_HERE\");\n  const _sendButtonIconURL = messageComposerConfig.sendButtonIconURL;\n  const _attachmentIconURL = messageComposerConfig.attachmentIconURL;\n  const _stickerCloseIconURL = messageComposerConfig.stickerCloseIconURL;\n  const _hideAttachment = messageComposerConfig.hideAttachment;\n  const _hideLiveReaction = messageComposerConfig.hideLiveReaction;\n  const _hideEmoji = messageComposerConfig.hideEmoji;\n  const _emojiIconURL = messageComposerConfig.emojiIconURL;\n  const _showSendButton = messageComposerConfig.showSendButton;\n  const _onSendButtonClick = messageComposerConfig.onSendButtonClick;\n  const _messageTypes = messageTypes || messageComposerConfig.messageTypes;\n  const _customOutgoingMessageSound = customOutgoingMessageSound || messageComposerConfig.customOutgoingMessageSound;\n  const _enableSoundForMessages = enableSoundForMessages || messageComposerConfig.enableSoundForMessages;\n  const _excludeMessageTypes = messageComposerConfig.excludeMessageTypes;\n  const _enableTypingIndicator = enableTypingIndicator || messageComposerConfig.enableTypingIndicator;\n  /**configurations of composer child components */\n  const _messagePreviewConfiguration = messageComposerConfig.messagePreviewConfiguration;\n  const _emojiKeyboardConfiguration = messageComposerConfig.emojiKeyboardConfiguration;\n  const _stickerKeyboardConfiguration = messageComposerConfig.stickerKeyboardConfiguration;\n  const _createPollConfiguration = messageComposerConfig.createPollConfiguration;\n  const _actionSheetConfiguration = messageComposerConfig.actionSheetConfiguration;\n\n  /**message header configuration */\n  const messageHeaderConfig = messageHeaderConfiguration || new MessageHeaderConfiguration({});\n  const _showBackButton = messageHeaderConfig.showBackButton;\n  const _backButtonIconURL = messageHeaderConfig.backButtonIconURL;\n  const _enableIndicator = enableTypingIndicator || messageHeaderConfig.enableTypingIndicator;\n  const _isMobileView = messageHeaderConfig.isMobile;\n  const _dataItemConfiguration = messageHeaderConfig.dataItemConfiguration;\n  let liveReactionView = viewLiveReaction ? /*#__PURE__*/_jsxDEV(\"div\", {\n    style: liveReactionWrapperStyle(),\n    children: /*#__PURE__*/_jsxDEV(CometChatLiveReactions, {\n      reaction: liveReactionTemplate === null || liveReactionTemplate === void 0 ? void 0 : liveReactionTemplate.reaction,\n      style: liveReactionStyle()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 311,\n    columnNumber: 5\n  }, this) : null;\n  Hooks(props, loggedInUser, errorHandler, messagesCallback, messagesManager);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main__chat\",\n    style: chatWrapperStyle(style),\n    children: [/*#__PURE__*/_jsxDEV(CometChatMessageHeader, {\n      user: user,\n      group: group,\n      theme: _theme,\n      style: messageHeaderStyle(_theme, messageHeaderConfig),\n      backButtonIconURL: _backButtonIconURL,\n      showBackButton: _isMobileView && _showBackButton ? true : false,\n      enableTypingIndicator: _enableIndicator,\n      dataItemConfiguration: _dataItemConfiguration\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CometChatMessageList, {\n      ref: messageListRef,\n      limit: _messageListConfiguration.limit,\n      user: user,\n      group: group,\n      alignment: _messageListConfiguration.alignment,\n      messageTypes: messageTypes || _messageListConfiguration.messageTypes,\n      excludeMessageTypes: _messageListConfiguration.excludeMessageTypes,\n      excludeMessageOptions: _messageListConfiguration.excludeMessageOptions,\n      customMessageOptions: _messageListConfiguration.customMessageOptions,\n      onlyUnread: _messageListConfiguration.onlyUnread,\n      hideMessagesFromBlockedUsers: _messageListConfiguration.hideMessagesFromBlockedUsers,\n      hideDeletedMessages: _messageListConfiguration.hideDeletedMessages,\n      tags: _messageListConfiguration.tags,\n      loadingIconURL: _messageListConfiguration.loadingIconURL,\n      customView: _messageListConfiguration.customView,\n      emptyText: localize(\"NO_MESSAGES_FOUND\"),\n      errorText: localize(\"SOMETHING_WRONG\"),\n      hideError: _messageListConfiguration.hideError,\n      customIncomingMessageSound: customIncomingMessageSound || _messageListConfiguration.customIncomingMessageSound,\n      enableSoundForMessages: enableSoundForMessages || _messageListConfiguration.enableSoundForMessages,\n      sentMessageInputData: getSentMessageInputData(),\n      receivedMessageInputData: getReceivedMessageInputData(),\n      style: messageListStyle(_theme, _messageListConfiguration),\n      messageBubbleConfiguration: _messageListConfiguration.messageBubbleConfiguration,\n      emojiKeyboardConfiguration: _messageListConfiguration.emojiKeyboardConfiguration,\n      smartRepliesConfiguration: _messageListConfiguration.smartRepliesConfiguration,\n      newMessageIndicatorConfiguration: _messageListConfiguration.newMessageIndicatorConfiguration,\n      dateConfiguration: _messageListConfiguration.dateConfiguration,\n      theme: _theme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this), liveReactionView, !hideMessageComposer ? /*#__PURE__*/_jsxDEV(CometChatMessageComposer, {\n      ref: messageComposerRef,\n      group: group,\n      user: user,\n      hideAttachment: _hideAttachment,\n      attachmentIconURL: _attachmentIconURL,\n      stickerCloseIconURL: _stickerCloseIconURL,\n      hideLiveReaction: _hideLiveReaction,\n      hideEmoji: _hideEmoji,\n      liveReactionIconURL: liveReactionIconURL,\n      sendButtonIconURL: _sendButtonIconURL,\n      onSendButtonClick: _onSendButtonClick,\n      messageTypes: _messageTypes,\n      excludeMessageTypes: _excludeMessageTypes,\n      enableTypingIndicator: _enableTypingIndicator,\n      enableSoundForMessages: _enableSoundForMessages,\n      customOutgoingMessageSound: _customOutgoingMessageSound,\n      showSendButton: _showSendButton,\n      placeholderText: _placeholderText,\n      emojiIconURL: _emojiIconURL,\n      messagePreviewConfiguration: _messagePreviewConfiguration,\n      emojiKeyboardConfiguration: _emojiKeyboardConfiguration,\n      stickerKeyboardConfiguration: _stickerKeyboardConfiguration,\n      createPollConfiguration: _createPollConfiguration,\n      actionSheetConfiguration: _actionSheetConfiguration,\n      theme: _theme,\n      style: messageComposerStyle(_theme, messageComposerConfig)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 322,\n    columnNumber: 5\n  }, this);\n};\n_s(CometChatMessages, \"dL9Vp26Aq8vOhR5UUE5z1BpmINg=\");\n_c = CometChatMessages;\nCometChatMessages.propTypes = {\n  user: PropTypes.object,\n  group: PropTypes.object,\n  messageTypes: PropTypes.array,\n  hideMessageComposer: PropTypes.bool,\n  liveReactionIconURL: PropTypes.string,\n  enableSoundForMessages: PropTypes.bool,\n  enableSoundForCalls: PropTypes.bool,\n  customIncomingMessageSound: PropTypes.string,\n  customOutgoingMessageSound: PropTypes.string,\n  enableTypingIndicator: PropTypes.bool,\n  style: PropTypes.object,\n  messageHeaderConfiguration: PropTypes.object,\n  messageListConfiguration: PropTypes.object,\n  messageComposerConfiguration: PropTypes.object,\n  detailsConfiguration: PropTypes.object\n};\nCometChatMessages.defaultProps = {\n  user: null,\n  group: null,\n  liveReactionIconURL: heart,\n  messageTypes: null,\n  hideMessageComposer: null,\n  enableSoundForMessages: true,\n  enableSoundForCalls: null,\n  customIncomingMessageSound: null,\n  customOutgoingMessageSound: null,\n  enableTypingIndicator: null,\n  style: {\n    width: \"100%\",\n    height: \"100%\",\n    border: \"none\",\n    borderRadius: \"none\",\n    background: \"rgb(255,255,255)\"\n  },\n  messageHeaderConfiguration: null,\n  messageListConfiguration: null,\n  messageComposerConfiguration: null,\n  detailsConfiguration: null\n};\nexport { CometChatMessages };\nvar _c;\n$RefreshReg$(_c, \"CometChatMessages\");","map":{"version":3,"names":["React","PropTypes","CometChat","CometChatMessageEvents","CometChatMessageHeader","CometChatMessageList","CometChatMessageComposer","CometChatLiveReactions","messageConstants","CometChatMessageTemplate","LiveReactionStyles","MessagesManager","MessageHeaderConfiguration","CometChatTheme","MetadataConstants","localize","MessageComposerConfiguration","MessageListConfiguration","messageStatus","chatWrapperStyle","liveReactionWrapperStyle","messageComposerStyle","messageHeaderStyle","liveReactionStyle","messageListStyle","MessageInputData","heart","Hooks","CometChatMessages","props","messageListRef","useRef","messageComposerRef","messagesManager","viewLiveReaction","setViewLiveReaction","useState","liveReactionTemplate","setLiveReactionTemplate","loggedInUser","user","group","liveReactionIconURL","messageTypes","hideMessageComposer","enableSoundForMessages","enableSoundForCalls","customIncomingMessageSound","customOutgoingMessageSound","enableTypingIndicator","style","theme","messageHeaderConfiguration","messageListConfiguration","messageComposerConfiguration","detailsConfiguration","console","log","_messageListConfiguration","_theme","liveReactionTimeout","getSentMessageInputData","timestamp","sentMessageInputData","readReceipt","thumbnail","title","getReceivedMessageInputData","receivedMessageInputData","previewMessageForEdit","payload","status","inprogress","current","message","success","updateMessage","errorHandler","errorCode","emit","onMessageError","draftMessage","addNewMessage","addMessage","scrollToBottom","messagesCallback","listener","onTransientMessageReceived","data","type","liveReaction","reaction","shareLiveReaction","clearLiveReaction","clearTimeout","infoHandle","voiceCallHandle","videoCallHandle","setTimeout","addListener","onMessageEdit","onMessageSent","onLiveReaction","messageComposerConfig","_placeholderText","_sendButtonIconURL","sendButtonIconURL","_attachmentIconURL","attachmentIconURL","_stickerCloseIconURL","stickerCloseIconURL","_hideAttachment","hideAttachment","_hideLiveReaction","hideLiveReaction","_hideEmoji","hideEmoji","_emojiIconURL","emojiIconURL","_showSendButton","showSendButton","_onSendButtonClick","onSendButtonClick","_messageTypes","_customOutgoingMessageSound","_enableSoundForMessages","_excludeMessageTypes","excludeMessageTypes","_enableTypingIndicator","_messagePreviewConfiguration","messagePreviewConfiguration","_emojiKeyboardConfiguration","emojiKeyboardConfiguration","_stickerKeyboardConfiguration","stickerKeyboardConfiguration","_createPollConfiguration","createPollConfiguration","_actionSheetConfiguration","actionSheetConfiguration","messageHeaderConfig","_showBackButton","showBackButton","_backButtonIconURL","backButtonIconURL","_enableIndicator","_isMobileView","isMobile","_dataItemConfiguration","dataItemConfiguration","liveReactionView","limit","alignment","excludeMessageOptions","customMessageOptions","onlyUnread","hideMessagesFromBlockedUsers","hideDeletedMessages","tags","loadingIconURL","customView","hideError","messageBubbleConfiguration","smartRepliesConfiguration","newMessageIndicatorConfiguration","dateConfiguration","propTypes","object","array","bool","string","defaultProps","width","height","border","borderRadius","background"],"sources":["/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/cometchat-pro-react-ui-kit/src/components/Messages/CometChatMessages/index.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport {\n  CometChatMessageEvents,\n  CometChatMessageHeader,\n  CometChatMessageList,\n  CometChatMessageComposer,\n  CometChatLiveReactions,\n  messageConstants,\n  CometChatMessageTemplate,\n  LiveReactionStyles,\n} from \"..\";\n\nimport { MessagesManager } from \"./controller\";\n\nimport {\n  MessageHeaderConfiguration,\n  CometChatTheme,\n  MetadataConstants,\n  localize,\n} from \"../..\";\n\nimport { MessageComposerConfiguration } from \"../CometChatMessageComposer/MessageComposerConfiguration\";\n\nimport { MessageListConfiguration } from \"../CometChatMessageList/MessageListConfiguration\";\n\nimport { messageStatus } from \"../CometChatMessageConstants\";\n\nimport {\n  chatWrapperStyle,\n  liveReactionWrapperStyle,\n  messageComposerStyle,\n  messageHeaderStyle,\n  liveReactionStyle,\n  messageListStyle,\n} from \"./style\";\n\nimport { MessageInputData } from \"../..\";\n\nimport heart from \"./resources/heart.png\";\nimport { Hooks } from \"./hooks\";\n\nconst CometChatMessages = (props) => {\n  let messageListRef = React.useRef(null);\n  let messageComposerRef = React.useRef(null);\n  const messagesManager = React.useRef(new MessagesManager());\n  const [viewLiveReaction, setViewLiveReaction] = React.useState(false);\n  const [liveReactionTemplate, setLiveReactionTemplate] = React.useState(null);\n  const loggedInUser = React.useRef(null);\n\n  const {\n    user,\n    group,\n    liveReactionIconURL,\n    messageTypes,\n    hideMessageComposer,\n    enableSoundForMessages,\n    enableSoundForCalls,\n    customIncomingMessageSound,\n    customOutgoingMessageSound,\n    enableTypingIndicator,\n    style,\n    theme,\n    messageHeaderConfiguration,\n    messageListConfiguration,\n    messageComposerConfiguration,\n    detailsConfiguration,\n  } = props;\n  console.log(\"changes\", messageComposerConfiguration);\n  const _messageListConfiguration =\n    messageListConfiguration || new MessageListConfiguration({});\n\n  const _theme = new CometChatTheme(theme ?? {});\n\n  let liveReactionTimeout = 0;\n\n  const getSentMessageInputData = () => {\n    if (user) {\n      let timestamp =\n          _messageListConfiguration?.sentMessageInputData?.timestamp || true,\n        readReceipt =\n          _messageListConfiguration?.sentMessageInputData?.readReceipt || true,\n        thumbnail =\n          _messageListConfiguration?.sentMessageInputData?.thumbnail || false,\n        title = _messageListConfiguration?.sentMessageInputData?.title || false;\n\n      return new MessageInputData({\n        timestamp: timestamp,\n        readReceipt: readReceipt,\n        thumbnail: thumbnail,\n        title: title,\n      });\n    } else if (group) {\n      let timestamp =\n          _messageListConfiguration?.sentMessageInputData?.timestamp || true,\n        readReceipt =\n          _messageListConfiguration?.sentMessageInputData?.readReceipt || true,\n        thumbnail =\n          _messageListConfiguration?.sentMessageInputData?.thumbnail || true,\n        title = _messageListConfiguration?.sentMessageInputData?.title || true;\n\n      return new MessageInputData({\n        timestamp: timestamp,\n        readReceipt: readReceipt,\n        thumbnail: thumbnail,\n        title: title,\n      });\n    }\n  };\n\n  const getReceivedMessageInputData = () => {\n    if (user) {\n      let timestamp =\n          _messageListConfiguration?.receivedMessageInputData?.timestamp ||\n          true,\n        readReceipt =\n          _messageListConfiguration?.receivedMessageInputData?.readReceipt ||\n          true,\n        thumbnail =\n          _messageListConfiguration?.receivedMessageInputData?.thumbnail ||\n          false,\n        title =\n          _messageListConfiguration?.receivedMessageInputData?.title || false;\n\n      return new MessageInputData({\n        timestamp: timestamp,\n        readReceipt: readReceipt,\n        thumbnail: thumbnail,\n        title: title,\n      });\n    } else if (group) {\n      let timestamp =\n          _messageListConfiguration?.receivedMessageInputData?.timestamp ||\n          true,\n        readReceipt =\n          _messageListConfiguration?.receivedMessageInputData?.readReceipt ||\n          false,\n        thumbnail =\n          _messageListConfiguration?.receivedMessageInputData?.thumbnail ||\n          true,\n        title =\n          _messageListConfiguration?.receivedMessageInputData?.title || true;\n\n      return new MessageInputData({\n        timestamp: timestamp,\n        readReceipt: readReceipt,\n        thumbnail: thumbnail,\n        title: title,\n      });\n    }\n  };\n\n  /**\n   * Preview message before edit\n   */\n  const previewMessageForEdit = (payload) => {\n    if (payload.status === messageStatus.inprogress) {\n      if (messageComposerRef && messageComposerRef.current) {\n        messageComposerRef.current.previewMessageForEdit(payload.message);\n      }\n    } else if (messageListRef && messageListRef.current) {\n      if (payload.status === messageStatus.success) {\n        messageListRef.current.updateMessage(payload.message, true);\n      }\n    }\n  };\n\n  /***\n   * error handler\n   */\n  const errorHandler = (errorCode) => {\n    CometChatMessageEvents.emit(\n      CometChatMessageEvents.onMessageError,\n      errorCode\n    );\n  };\n\n  /**\n   * Draft a message before sending\n   */\n  const draftMessage = (message) => {\n    if (messageComposerRef && messageComposerRef.current) {\n      messageComposerRef.current.draftMessage(message);\n    }\n  };\n\n  const addNewMessage = (payload) => {\n    if (messageListRef && messageListRef.current) {\n      if (payload.status === messageStatus.inprogress) {\n        messageListRef.current.addMessage(payload.message);\n        messageListRef.current.scrollToBottom();\n      } else if (payload.status === messageStatus.success) {\n        messageListRef.current.updateMessage(payload.message, true);\n      }\n    }\n  };\n\n  const messagesCallback = (listener, message) => {\n    switch (listener) {\n      case \"onTransientMessageReceived\":\n        onTransientMessageReceived(message);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const onTransientMessageReceived = (message) => {\n    if (message.data.type === MetadataConstants.liveReaction) {\n      const payload = {\n        reaction: message?.data?.reaction,\n        style: new LiveReactionStyles(liveReactionStyle() || {}),\n      };\n      shareLiveReaction(payload);\n    }\n  };\n\n  const clearLiveReaction = () => {\n    clearTimeout(liveReactionTimeout);\n    setViewLiveReaction(false);\n  };\n\n  const infoHandle = () => {};\n  const voiceCallHandle = () => {};\n  const videoCallHandle = () => {};\n\n  const shareLiveReaction = (payload) => {\n    //if already live reaction in progress\n    if (liveReactionTimeout) {\n      return false;\n    }\n\n    setViewLiveReaction(true);\n    setLiveReactionTemplate(payload);\n\n    //set timeout till the next share\n    liveReactionTimeout = setTimeout(\n      clearLiveReaction,\n      messageConstants.liveReactionTimeout\n    );\n  };\n\n  CometChatMessageEvents.addListener(\n    CometChatMessageEvents.onMessageEdit,\n    \"onMessageEdit\",\n    previewMessageForEdit\n  );\n\n  CometChatMessageEvents.addListener(\n    CometChatMessageEvents.onMessageSent,\n    \"messageSent\",\n    addNewMessage\n  );\n\n  CometChatMessageEvents.addListener(\n    CometChatMessageEvents.onLiveReaction,\n    \"liveReactionId\",\n    shareLiveReaction\n  );\n\n  /** message composer configurations */\n  const messageComposerConfig =\n    messageComposerConfiguration || new MessageComposerConfiguration({});\n\n  const _placeholderText = localize(\"ENTER_YOUR_MESSAGE_HERE\");\n  const _sendButtonIconURL = messageComposerConfig.sendButtonIconURL;\n  const _attachmentIconURL = messageComposerConfig.attachmentIconURL;\n  const _stickerCloseIconURL = messageComposerConfig.stickerCloseIconURL;\n  const _hideAttachment = messageComposerConfig.hideAttachment;\n  const _hideLiveReaction = messageComposerConfig.hideLiveReaction;\n  const _hideEmoji = messageComposerConfig.hideEmoji;\n  const _emojiIconURL = messageComposerConfig.emojiIconURL;\n  const _showSendButton = messageComposerConfig.showSendButton;\n  const _onSendButtonClick = messageComposerConfig.onSendButtonClick;\n  const _messageTypes = messageTypes || messageComposerConfig.messageTypes;\n  const _customOutgoingMessageSound =\n    customOutgoingMessageSound ||\n    messageComposerConfig.customOutgoingMessageSound;\n  const _enableSoundForMessages =\n    enableSoundForMessages || messageComposerConfig.enableSoundForMessages;\n  const _excludeMessageTypes = messageComposerConfig.excludeMessageTypes;\n  const _enableTypingIndicator =\n    enableTypingIndicator || messageComposerConfig.enableTypingIndicator;\n  /**configurations of composer child components */\n  const _messagePreviewConfiguration =\n    messageComposerConfig.messagePreviewConfiguration;\n  const _emojiKeyboardConfiguration =\n    messageComposerConfig.emojiKeyboardConfiguration;\n  const _stickerKeyboardConfiguration =\n    messageComposerConfig.stickerKeyboardConfiguration;\n  const _createPollConfiguration =\n    messageComposerConfig.createPollConfiguration;\n  const _actionSheetConfiguration =\n    messageComposerConfig.actionSheetConfiguration;\n\n  /**message header configuration */\n  const messageHeaderConfig =\n    messageHeaderConfiguration || new MessageHeaderConfiguration({});\n\n  const _showBackButton = messageHeaderConfig.showBackButton;\n  const _backButtonIconURL = messageHeaderConfig.backButtonIconURL;\n\n  const _enableIndicator =\n    enableTypingIndicator || messageHeaderConfig.enableTypingIndicator;\n  const _isMobileView = messageHeaderConfig.isMobile;\n  const _dataItemConfiguration = messageHeaderConfig.dataItemConfiguration;\n\n  let liveReactionView = viewLiveReaction ? (\n    <div style={liveReactionWrapperStyle()}>\n      <CometChatLiveReactions\n        reaction={liveReactionTemplate?.reaction}\n        style={liveReactionStyle()}\n      />\n    </div>\n  ) : null;\n\n  Hooks(props, loggedInUser, errorHandler, messagesCallback, messagesManager);\n\n  return (\n    <div className=\"main__chat\" style={chatWrapperStyle(style)}>\n      <CometChatMessageHeader\n        user={user}\n        group={group}\n        theme={_theme}\n        style={messageHeaderStyle(_theme, messageHeaderConfig)}\n        backButtonIconURL={_backButtonIconURL}\n        showBackButton={_isMobileView && _showBackButton ? true : false}\n        enableTypingIndicator={_enableIndicator}\n        dataItemConfiguration={_dataItemConfiguration}\n      />\n      <CometChatMessageList\n        ref={messageListRef}\n        limit={_messageListConfiguration.limit}\n        user={user}\n        group={group}\n        alignment={_messageListConfiguration.alignment}\n        messageTypes={messageTypes || _messageListConfiguration.messageTypes}\n        excludeMessageTypes={_messageListConfiguration.excludeMessageTypes}\n        excludeMessageOptions={_messageListConfiguration.excludeMessageOptions}\n        customMessageOptions={_messageListConfiguration.customMessageOptions}\n        onlyUnread={_messageListConfiguration.onlyUnread}\n        hideMessagesFromBlockedUsers={\n          _messageListConfiguration.hideMessagesFromBlockedUsers\n        }\n        hideDeletedMessages={_messageListConfiguration.hideDeletedMessages}\n        tags={_messageListConfiguration.tags}\n        loadingIconURL={_messageListConfiguration.loadingIconURL}\n        customView={_messageListConfiguration.customView}\n        emptyText={localize(\"NO_MESSAGES_FOUND\")}\n        errorText={localize(\"SOMETHING_WRONG\")}\n        hideError={_messageListConfiguration.hideError}\n        customIncomingMessageSound={\n          customIncomingMessageSound ||\n          _messageListConfiguration.customIncomingMessageSound\n        }\n        enableSoundForMessages={\n          enableSoundForMessages ||\n          _messageListConfiguration.enableSoundForMessages\n        }\n        sentMessageInputData={getSentMessageInputData()}\n        receivedMessageInputData={getReceivedMessageInputData()}\n        style={messageListStyle(_theme, _messageListConfiguration)}\n        messageBubbleConfiguration={\n          _messageListConfiguration.messageBubbleConfiguration\n        }\n        emojiKeyboardConfiguration={\n          _messageListConfiguration.emojiKeyboardConfiguration\n        }\n        smartRepliesConfiguration={\n          _messageListConfiguration.smartRepliesConfiguration\n        }\n        newMessageIndicatorConfiguration={\n          _messageListConfiguration.newMessageIndicatorConfiguration\n        }\n        dateConfiguration={_messageListConfiguration.dateConfiguration}\n        theme={_theme}\n      />\n      {liveReactionView}\n      {!hideMessageComposer ? (\n        <CometChatMessageComposer\n          ref={messageComposerRef}\n          group={group}\n          user={user}\n          hideAttachment={_hideAttachment}\n          attachmentIconURL={_attachmentIconURL}\n          stickerCloseIconURL={_stickerCloseIconURL}\n          hideLiveReaction={_hideLiveReaction}\n          hideEmoji={_hideEmoji}\n          liveReactionIconURL={liveReactionIconURL}\n          sendButtonIconURL={_sendButtonIconURL}\n          onSendButtonClick={_onSendButtonClick}\n          messageTypes={_messageTypes}\n          excludeMessageTypes={_excludeMessageTypes}\n          enableTypingIndicator={_enableTypingIndicator}\n          enableSoundForMessages={_enableSoundForMessages}\n          customOutgoingMessageSound={_customOutgoingMessageSound}\n          showSendButton={_showSendButton}\n          placeholderText={_placeholderText}\n          emojiIconURL={_emojiIconURL}\n          messagePreviewConfiguration={_messagePreviewConfiguration}\n          emojiKeyboardConfiguration={_emojiKeyboardConfiguration}\n          stickerKeyboardConfiguration={_stickerKeyboardConfiguration}\n          createPollConfiguration={_createPollConfiguration}\n          actionSheetConfiguration={_actionSheetConfiguration}\n          theme={_theme}\n          style={messageComposerStyle(_theme, messageComposerConfig)}\n        />\n      ) : null}\n    </div>\n  );\n};\n\nCometChatMessages.propTypes = {\n  user: PropTypes.object,\n  group: PropTypes.object,\n  messageTypes: PropTypes.array,\n  hideMessageComposer: PropTypes.bool,\n  liveReactionIconURL: PropTypes.string,\n  enableSoundForMessages: PropTypes.bool,\n  enableSoundForCalls: PropTypes.bool,\n  customIncomingMessageSound: PropTypes.string,\n  customOutgoingMessageSound: PropTypes.string,\n  enableTypingIndicator: PropTypes.bool,\n  style: PropTypes.object,\n  messageHeaderConfiguration: PropTypes.object,\n  messageListConfiguration: PropTypes.object,\n  messageComposerConfiguration: PropTypes.object,\n  detailsConfiguration: PropTypes.object,\n};\n\nCometChatMessages.defaultProps = {\n  user: null,\n  group: null,\n  liveReactionIconURL: heart,\n  messageTypes: null,\n  hideMessageComposer: null,\n  enableSoundForMessages: true,\n  enableSoundForCalls: null,\n  customIncomingMessageSound: null,\n  customOutgoingMessageSound: null,\n  enableTypingIndicator: null,\n  style: {\n    width: \"100%\",\n    height: \"100%\",\n    border: \"none\",\n    borderRadius: \"none\",\n    background: \"rgb(255,255,255)\",\n  },\n  messageHeaderConfiguration: null,\n  messageListConfiguration: null,\n  messageComposerConfiguration: null,\n  detailsConfiguration: null,\n};\n\nexport { CometChatMessages };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}