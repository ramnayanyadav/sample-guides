{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Hooks = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _chat = require(\"@cometchat-pro/chat\");\nvar _ = require(\"..\");\nvar _2 = require(\"../..\");\nvar getUser = function getUser(uid) {\n  return new Promise(function (resolve, reject) {\n    _chat.CometChat.getUser(uid).then(function (user) {\n      return resolve(user);\n    }).catch(function (error) {\n      return reject(error);\n    });\n  });\n};\nvar getGroup = function getGroup(guid) {\n  return new Promise(function (resolve, reject) {\n    _chat.CometChat.getGroup(guid).then(function (group) {\n      return resolve(group);\n    }).catch(function (error) {\n      return reject(error);\n    });\n  });\n};\nvar Hooks = function Hooks(props, loggedInUser, chatWithRef, chatWithTypeRef, setMessageHeaderStatus, setUserPresence, messageHeaderManager, messageHeaderCallback, errorHandler) {\n  //fetch logged in user\n  _react.default.useEffect(function () {\n    _chat.CometChat.getLoggedinUser().then(function (user) {\n      var _messageHeaderManager;\n      loggedInUser.current = user;\n      (_messageHeaderManager = messageHeaderManager.current) === null || _messageHeaderManager === void 0 ? void 0 : _messageHeaderManager.attachListeners(messageHeaderCallback);\n    }).catch(function (error) {\n      return errorHandler(error);\n    });\n  }, []);\n  var updateMessageHeaderStatusForUser = _react.default.useCallback(function (user) {\n    if (user.status === _2.UserStatusConstants.offline) {\n      setMessageHeaderStatus((0, _2.localize)(\"OFFLINE\"));\n      setUserPresence(false);\n    } else if (user.status === _2.UserStatusConstants.online) {\n      setMessageHeaderStatus((0, _2.localize)(\"ONLINE\"));\n      setUserPresence(true);\n    }\n  }, [setMessageHeaderStatus, setUserPresence]);\n  var updateMessageHeaderStatusForGroup = _react.default.useCallback(function (group) {\n    var status = \"\".concat(group.membersCount, \" \").concat((0, _2.localize)(\"MEMBERS\"));\n    setMessageHeaderStatus(status);\n    //setUserPresence(CometChat.USER_STATUS.OFFLINE);\n  }, [setMessageHeaderStatus]);\n\n  //update receiver user\n  _react.default.useEffect(function () {\n    if (props.user && props.user.uid) {\n      if (props.user.name) {\n        chatWithTypeRef.current = _.CometChatMessageReceiverType.group;\n        chatWithRef.current = props.group;\n        updateMessageHeaderStatusForUser(props.user);\n      } else {\n        getUser(props.user.uid).then(function (user) {\n          chatWithTypeRef.current = _.CometChatMessageReceiverType.group;\n          chatWithRef.current = user;\n          updateMessageHeaderStatusForUser(user);\n        }).catch(function (error) {\n          return errorHandler(error);\n        });\n      }\n    } else if (props.group && props.group.guid) {\n      if (props.group.name) {\n        chatWithTypeRef.current = _.CometChatMessageReceiverType.group;\n        chatWithRef.current = props.group;\n        updateMessageHeaderStatusForGroup(props.group);\n      } else {\n        getGroup(props.group.guid).then(function (group) {\n          chatWithTypeRef.current = _.CometChatMessageReceiverType.group;\n          chatWithRef.current = group;\n          updateMessageHeaderStatusForGroup(group);\n        }).catch(function (error) {\n          return errorHandler(error);\n        });\n      }\n    }\n  }, [props, props.user, props.group, chatWithRef, chatWithTypeRef, updateMessageHeaderStatusForUser, updateMessageHeaderStatusForGroup]);\n};\nexports.Hooks = Hooks;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","Hooks","_react","_chat","_","_2","getUser","uid","Promise","resolve","reject","CometChat","then","user","catch","error","getGroup","guid","group","props","loggedInUser","chatWithRef","chatWithTypeRef","setMessageHeaderStatus","setUserPresence","messageHeaderManager","messageHeaderCallback","errorHandler","default","useEffect","getLoggedinUser","_messageHeaderManager","current","attachListeners","updateMessageHeaderStatusForUser","useCallback","status","UserStatusConstants","offline","localize","online","updateMessageHeaderStatusForGroup","concat","membersCount","name","CometChatMessageReceiverType"],"sources":["/home/admin1/dev/react/react-sample-guide/sample-react-guides/node_modules/react-ui-kit-testing/dist/Messages/CometChatMessageHeader/hooks.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Hooks = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _chat = require(\"@cometchat-pro/chat\");\nvar _ = require(\"..\");\nvar _2 = require(\"../..\");\nvar getUser = function getUser(uid) {\n  return new Promise(function (resolve, reject) {\n    _chat.CometChat.getUser(uid).then(function (user) {\n      return resolve(user);\n    }).catch(function (error) {\n      return reject(error);\n    });\n  });\n};\nvar getGroup = function getGroup(guid) {\n  return new Promise(function (resolve, reject) {\n    _chat.CometChat.getGroup(guid).then(function (group) {\n      return resolve(group);\n    }).catch(function (error) {\n      return reject(error);\n    });\n  });\n};\nvar Hooks = function Hooks(props, loggedInUser, chatWithRef, chatWithTypeRef, setMessageHeaderStatus, setUserPresence, messageHeaderManager, messageHeaderCallback, errorHandler) {\n  //fetch logged in user\n  _react.default.useEffect(function () {\n    _chat.CometChat.getLoggedinUser().then(function (user) {\n      var _messageHeaderManager;\n      loggedInUser.current = user;\n      (_messageHeaderManager = messageHeaderManager.current) === null || _messageHeaderManager === void 0 ? void 0 : _messageHeaderManager.attachListeners(messageHeaderCallback);\n    }).catch(function (error) {\n      return errorHandler(error);\n    });\n  }, []);\n  var updateMessageHeaderStatusForUser = _react.default.useCallback(function (user) {\n    if (user.status === _2.UserStatusConstants.offline) {\n      setMessageHeaderStatus((0, _2.localize)(\"OFFLINE\"));\n      setUserPresence(false);\n    } else if (user.status === _2.UserStatusConstants.online) {\n      setMessageHeaderStatus((0, _2.localize)(\"ONLINE\"));\n      setUserPresence(true);\n    }\n  }, [setMessageHeaderStatus, setUserPresence]);\n  var updateMessageHeaderStatusForGroup = _react.default.useCallback(function (group) {\n    var status = \"\".concat(group.membersCount, \" \").concat((0, _2.localize)(\"MEMBERS\"));\n    setMessageHeaderStatus(status);\n    //setUserPresence(CometChat.USER_STATUS.OFFLINE);\n  }, [setMessageHeaderStatus]);\n\n  //update receiver user\n  _react.default.useEffect(function () {\n    if (props.user && props.user.uid) {\n      if (props.user.name) {\n        chatWithTypeRef.current = _.CometChatMessageReceiverType.group;\n        chatWithRef.current = props.group;\n        updateMessageHeaderStatusForUser(props.user);\n      } else {\n        getUser(props.user.uid).then(function (user) {\n          chatWithTypeRef.current = _.CometChatMessageReceiverType.group;\n          chatWithRef.current = user;\n          updateMessageHeaderStatusForUser(user);\n        }).catch(function (error) {\n          return errorHandler(error);\n        });\n      }\n    } else if (props.group && props.group.guid) {\n      if (props.group.name) {\n        chatWithTypeRef.current = _.CometChatMessageReceiverType.group;\n        chatWithRef.current = props.group;\n        updateMessageHeaderStatusForGroup(props.group);\n      } else {\n        getGroup(props.group.guid).then(function (group) {\n          chatWithTypeRef.current = _.CometChatMessageReceiverType.group;\n          chatWithRef.current = group;\n          updateMessageHeaderStatusForGroup(group);\n        }).catch(function (error) {\n          return errorHandler(error);\n        });\n      }\n    }\n  }, [props, props.user, props.group, chatWithRef, chatWithTypeRef, updateMessageHeaderStatusForUser, updateMessageHeaderStatusForGroup]);\n};\nexports.Hooks = Hooks;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}