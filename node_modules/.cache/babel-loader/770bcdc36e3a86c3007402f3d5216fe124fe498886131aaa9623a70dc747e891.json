{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from \"react\";\nimport { getExtensionsData, MetadataConstants } from \"../..\";\nexport const Hooks = (messageObject, reactionRef, reactionView, setReactionList) => {\n  _s();\n  React.useEffect(() => {\n    reactionRef.current = getExtensionsData(messageObject, MetadataConstants.extensions.reactions);\n    let isEmpty = false;\n    if (reactionRef.current) {\n      const messageReactions = Object.keys(reactionRef.current).map(data => {\n        let reactionData;\n        if (Object.keys(reactionRef.current[data]).length) {\n          isEmpty = true;\n          reactionData = reactionRef.current[data];\n          return reactionView({\n            [data]: reactionData\n          }, reactionData);\n        } else {\n          isEmpty = false;\n        }\n      });\n      if (isEmpty) {\n        setReactionList(messageReactions);\n      }\n    }\n  }, [messageObject]);\n  React.useEffect(() => {}, []);\n};\n_s(Hooks, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n_c = Hooks;\nvar _c;\n$RefreshReg$(_c, \"Hooks\");","map":{"version":3,"names":["React","getExtensionsData","MetadataConstants","Hooks","messageObject","reactionRef","reactionView","setReactionList","useEffect","current","extensions","reactions","isEmpty","messageReactions","Object","keys","map","data","reactionData","length"],"sources":["/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/cometchat-pro-react-ui-kit/src/components/Messages/CometChatMessageReactions/hooks.js"],"sourcesContent":["import React from \"react\";\nimport { getExtensionsData, MetadataConstants } from \"../..\";\n\nexport const Hooks = (\n  messageObject,\n  reactionRef,\n  reactionView,\n  setReactionList\n) => {\n  React.useEffect(() => {\n    reactionRef.current = getExtensionsData(\n      messageObject,\n      MetadataConstants.extensions.reactions\n    );\n\n    let isEmpty = false;\n\n    if (reactionRef.current) {\n      const messageReactions = Object.keys(reactionRef.current).map((data) => {\n        let reactionData;\n\n        if (Object.keys(reactionRef.current[data]).length) {\n          isEmpty = true;\n          reactionData = reactionRef.current[data];\n          return reactionView({ [data]: reactionData }, reactionData);\n        } else {\n          isEmpty = false;\n        }\n      });\n      if (isEmpty) {\n        setReactionList(messageReactions);\n      }\n    }\n  }, [messageObject]);\n\n  React.useEffect(() => {}, []);\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,iBAAiB,EAAEC,iBAAiB,QAAQ,OAAO;AAE5D,OAAO,MAAMC,KAAK,GAAG,CACnBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,eAAe,KACZ;EAAA;EACHP,KAAK,CAACQ,SAAS,CAAC,MAAM;IACpBH,WAAW,CAACI,OAAO,GAAGR,iBAAiB,CACrCG,aAAa,EACbF,iBAAiB,CAACQ,UAAU,CAACC,SAAS,CACvC;IAED,IAAIC,OAAO,GAAG,KAAK;IAEnB,IAAIP,WAAW,CAACI,OAAO,EAAE;MACvB,MAAMI,gBAAgB,GAAGC,MAAM,CAACC,IAAI,CAACV,WAAW,CAACI,OAAO,CAAC,CAACO,GAAG,CAAEC,IAAI,IAAK;QACtE,IAAIC,YAAY;QAEhB,IAAIJ,MAAM,CAACC,IAAI,CAACV,WAAW,CAACI,OAAO,CAACQ,IAAI,CAAC,CAAC,CAACE,MAAM,EAAE;UACjDP,OAAO,GAAG,IAAI;UACdM,YAAY,GAAGb,WAAW,CAACI,OAAO,CAACQ,IAAI,CAAC;UACxC,OAAOX,YAAY,CAAC;YAAE,CAACW,IAAI,GAAGC;UAAa,CAAC,EAAEA,YAAY,CAAC;QAC7D,CAAC,MAAM;UACLN,OAAO,GAAG,KAAK;QACjB;MACF,CAAC,CAAC;MACF,IAAIA,OAAO,EAAE;QACXL,eAAe,CAACM,gBAAgB,CAAC;MACnC;IACF;EACF,CAAC,EAAE,CAACT,aAAa,CAAC,CAAC;EAEnBJ,KAAK,CAACQ,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC;AAC/B,CAAC;AAAC,GAjCWL,KAAK;AAAA,KAALA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}