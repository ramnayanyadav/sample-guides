{"ast":null,"code":"import { CometChat } from \"@cometchat-pro/chat\";\nexport class MessageHeaderManager {\n  constructor() {\n    this.userListenerId = \"head_user_\" + new Date().getTime();\n    this.msgListenerId = \"head_message_\" + new Date().getTime();\n    this.groupListenerId = \"head_group_\" + new Date().getTime();\n  }\n  attachListeners(callback) {\n    CometChat.addUserListener(this.userListenerId, new CometChat.UserListener({\n      onUserOnline: onlineUser => {\n        /* when someuser/friend comes online, user will be received here */\n        callback(\"onUserOnline\", onlineUser);\n      },\n      onUserOffline: offlineUser => {\n        /* when someuser/friend went offline, user will be received here */\n        callback(\"onUserOffline\", offlineUser);\n      }\n    }));\n    CometChat.addMessageListener(this.msgListenerId, new CometChat.MessageListener({\n      onTypingStarted: typingIndicator => {\n        callback(\"onTypingStarted\", typingIndicator);\n      },\n      onTypingEnded: typingIndicator => {\n        callback(\"onTypingEnded\", typingIndicator);\n      }\n    }));\n    CometChat.addGroupListener(this.groupListenerId, new CometChat.GroupListener({\n      onGroupMemberKicked: (message, kickedUser, kickedBy, kickedFrom) => {\n        callback(\"onGroupMemberKicked\", kickedFrom, kickedUser);\n      },\n      onGroupMemberBanned: (message, bannedUser, bannedBy, bannedFrom) => {\n        callback(\"onGroupMemberBanned\", bannedFrom, bannedUser);\n      },\n      onMemberAddedToGroup: (message, userAdded, userAddedBy, userAddedIn) => {\n        callback(\"onMemberAddedToGroup\", userAddedIn);\n      },\n      onGroupMemberLeft: (message, leavingUser, group) => {\n        callback(\"onGroupMemberLeft\", group, leavingUser);\n      },\n      onGroupMemberJoined: (message, joinedUser, joinedGroup) => {\n        callback(\"onGroupMemberJoined\", joinedGroup);\n      }\n    }));\n  }\n  removeListeners() {\n    CometChat.removeUserListener(this.userListenerId);\n    CometChat.removeMessageListener(this.msgListenerId);\n    CometChat.removeGroupListener(this.groupListenerId);\n  }\n}","map":{"version":3,"names":["CometChat","MessageHeaderManager","userListenerId","Date","getTime","msgListenerId","groupListenerId","attachListeners","callback","addUserListener","UserListener","onUserOnline","onlineUser","onUserOffline","offlineUser","addMessageListener","MessageListener","onTypingStarted","typingIndicator","onTypingEnded","addGroupListener","GroupListener","onGroupMemberKicked","message","kickedUser","kickedBy","kickedFrom","onGroupMemberBanned","bannedUser","bannedBy","bannedFrom","onMemberAddedToGroup","userAdded","userAddedBy","userAddedIn","onGroupMemberLeft","leavingUser","group","onGroupMemberJoined","joinedUser","joinedGroup","removeListeners","removeUserListener","removeMessageListener","removeGroupListener"],"sources":["/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/cometchat-pro-react-ui-kit/src/components/Messages/CometChatMessageHeader/controller.js"],"sourcesContent":["import { CometChat } from \"@cometchat-pro/chat\";\n\nexport class MessageHeaderManager {\n  userListenerId = \"head_user_\" + new Date().getTime();\n  msgListenerId = \"head_message_\" + new Date().getTime();\n  groupListenerId = \"head_group_\" + new Date().getTime();\n\n  attachListeners(callback) {\n    CometChat.addUserListener(\n      this.userListenerId,\n      new CometChat.UserListener({\n        onUserOnline: (onlineUser) => {\n          /* when someuser/friend comes online, user will be received here */\n          callback(\"onUserOnline\", onlineUser);\n        },\n        onUserOffline: (offlineUser) => {\n          /* when someuser/friend went offline, user will be received here */\n          callback(\"onUserOffline\", offlineUser);\n        },\n      })\n    );\n\n    CometChat.addMessageListener(\n      this.msgListenerId,\n      new CometChat.MessageListener({\n        onTypingStarted: (typingIndicator) => {\n          callback(\"onTypingStarted\", typingIndicator);\n        },\n        onTypingEnded: (typingIndicator) => {\n          callback(\"onTypingEnded\", typingIndicator);\n        },\n      })\n    );\n\n    CometChat.addGroupListener(\n      this.groupListenerId,\n      new CometChat.GroupListener({\n        onGroupMemberKicked: (message, kickedUser, kickedBy, kickedFrom) => {\n          callback(\"onGroupMemberKicked\", kickedFrom, kickedUser);\n        },\n        onGroupMemberBanned: (message, bannedUser, bannedBy, bannedFrom) => {\n          callback(\"onGroupMemberBanned\", bannedFrom, bannedUser);\n        },\n        onMemberAddedToGroup: (\n          message,\n          userAdded,\n          userAddedBy,\n          userAddedIn\n        ) => {\n          callback(\"onMemberAddedToGroup\", userAddedIn);\n        },\n        onGroupMemberLeft: (message, leavingUser, group) => {\n          callback(\"onGroupMemberLeft\", group, leavingUser);\n        },\n        onGroupMemberJoined: (message, joinedUser, joinedGroup) => {\n          callback(\"onGroupMemberJoined\", joinedGroup);\n        },\n      })\n    );\n  }\n\n  removeListeners() {\n    CometChat.removeUserListener(this.userListenerId);\n    CometChat.removeMessageListener(this.msgListenerId);\n    CometChat.removeGroupListener(this.groupListenerId);\n  }\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,qBAAqB;AAE/C,OAAO,MAAMC,oBAAoB,CAAC;EAAA;IAAA,KAChCC,cAAc,GAAG,YAAY,GAAG,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE;IAAA,KACpDC,aAAa,GAAG,eAAe,GAAG,IAAIF,IAAI,EAAE,CAACC,OAAO,EAAE;IAAA,KACtDE,eAAe,GAAG,aAAa,GAAG,IAAIH,IAAI,EAAE,CAACC,OAAO,EAAE;EAAA;EAEtDG,eAAe,CAACC,QAAQ,EAAE;IACxBR,SAAS,CAACS,eAAe,CACvB,IAAI,CAACP,cAAc,EACnB,IAAIF,SAAS,CAACU,YAAY,CAAC;MACzBC,YAAY,EAAGC,UAAU,IAAK;QAC5B;QACAJ,QAAQ,CAAC,cAAc,EAAEI,UAAU,CAAC;MACtC,CAAC;MACDC,aAAa,EAAGC,WAAW,IAAK;QAC9B;QACAN,QAAQ,CAAC,eAAe,EAAEM,WAAW,CAAC;MACxC;IACF,CAAC,CAAC,CACH;IAEDd,SAAS,CAACe,kBAAkB,CAC1B,IAAI,CAACV,aAAa,EAClB,IAAIL,SAAS,CAACgB,eAAe,CAAC;MAC5BC,eAAe,EAAGC,eAAe,IAAK;QACpCV,QAAQ,CAAC,iBAAiB,EAAEU,eAAe,CAAC;MAC9C,CAAC;MACDC,aAAa,EAAGD,eAAe,IAAK;QAClCV,QAAQ,CAAC,eAAe,EAAEU,eAAe,CAAC;MAC5C;IACF,CAAC,CAAC,CACH;IAEDlB,SAAS,CAACoB,gBAAgB,CACxB,IAAI,CAACd,eAAe,EACpB,IAAIN,SAAS,CAACqB,aAAa,CAAC;MAC1BC,mBAAmB,EAAE,CAACC,OAAO,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,UAAU,KAAK;QAClElB,QAAQ,CAAC,qBAAqB,EAAEkB,UAAU,EAAEF,UAAU,CAAC;MACzD,CAAC;MACDG,mBAAmB,EAAE,CAACJ,OAAO,EAAEK,UAAU,EAAEC,QAAQ,EAAEC,UAAU,KAAK;QAClEtB,QAAQ,CAAC,qBAAqB,EAAEsB,UAAU,EAAEF,UAAU,CAAC;MACzD,CAAC;MACDG,oBAAoB,EAAE,CACpBR,OAAO,EACPS,SAAS,EACTC,WAAW,EACXC,WAAW,KACR;QACH1B,QAAQ,CAAC,sBAAsB,EAAE0B,WAAW,CAAC;MAC/C,CAAC;MACDC,iBAAiB,EAAE,CAACZ,OAAO,EAAEa,WAAW,EAAEC,KAAK,KAAK;QAClD7B,QAAQ,CAAC,mBAAmB,EAAE6B,KAAK,EAAED,WAAW,CAAC;MACnD,CAAC;MACDE,mBAAmB,EAAE,CAACf,OAAO,EAAEgB,UAAU,EAAEC,WAAW,KAAK;QACzDhC,QAAQ,CAAC,qBAAqB,EAAEgC,WAAW,CAAC;MAC9C;IACF,CAAC,CAAC,CACH;EACH;EAEAC,eAAe,GAAG;IAChBzC,SAAS,CAAC0C,kBAAkB,CAAC,IAAI,CAACxC,cAAc,CAAC;IACjDF,SAAS,CAAC2C,qBAAqB,CAAC,IAAI,CAACtC,aAAa,CAAC;IACnDL,SAAS,CAAC4C,mBAAmB,CAAC,IAAI,CAACtC,eAAe,CAAC;EACrD;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}