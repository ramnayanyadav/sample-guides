{"ast":null,"code":"var _jsxFileName = \"/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/cometchat-pro-react-ui-kit/src/components/Chats/CometChatConversations/index.js\",\n  _s = $RefreshSig$();\nimport React, { forwardRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as styles from \"./style\";\nimport { CometChatConversationList } from \"../\";\nimport { CometChatListBase, ConversationListConfiguration, CometChatTheme, CometChatConversationEvents, CometChatMessageEvents } from \"../../../\";\nimport { ConversationsStyles, ConversationListStyles } from \"../../Chats\";\nimport { ListBaseStyles } from \"../../Shared/PrimaryComponents/CometChatListBase/ListBaseStyles\";\nimport backIcon from \"./resources/back.svg\";\nimport startConversationIcon from \"./resources/new.svg\";\nimport seachIcon from \"./resources/search.svg\";\n\n/**\n *\n * @version 1.0.0\n * @author CometChatTeam\n * @description CometChatConversations is a container component that wraps and\n * formats CometChatListBase and CometChatConversationList component, with no behavior of its own.\n *\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CometChatConversations = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n  /**\n   * Props destructuring\n   */\n  const {\n    activeConversation,\n    title,\n    searchPlaceholder,\n    backButtonIconURL,\n    startConversationIconURL,\n    searchIconURL,\n    showBackButton,\n    hideStartConversation,\n    hideSearch,\n    style,\n    conversationListConfiguration,\n    theme\n  } = props;\n  const updateLastMessage = payload => {\n    if (conversationListRef !== null && conversationListRef !== void 0 && conversationListRef.current) {\n      conversationListRef.current.updateLastMessage(payload === null || payload === void 0 ? void 0 : payload.message);\n    }\n  };\n  CometChatMessageEvents.addListener(CometChatMessageEvents.onMessageSent, \"onMessageSent\", updateLastMessage);\n  CometChatMessageEvents.addListener(CometChatMessageEvents.onMessageDelete, \"onMessageDelete\", updateLastMessage);\n  /**\n   * Component internal state\n   */\n  const conversationListRef = React.useRef(null);\n\n  /**\n   * Component private scoping\n   */\n  const _conversationListConfiguration = new ConversationListConfiguration(conversationListConfiguration !== null && conversationListConfiguration !== void 0 ? conversationListConfiguration : {});\n  const _theme = new CometChatTheme(theme !== null && theme !== void 0 ? theme : {});\n  ;\n  React.useImperativeHandle(ref, () => ({\n    conversationListRef: conversationListRef.current\n  }));\n\n  /**\n   * Component internal handlers/methods \n   */\n\n  const searchHandler = searchText => {\n    //TODO: search is not implemented\n    return false;\n  };\n\n  /**\n   * Component template scoping\n   */\n  const getStartConversationButtonElem = () => {\n    if (hideStartConversation) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.startConversationBtnStyle(style, _theme, startConversationIconURL)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 20\n      }, this);\n    }\n    return null;\n  };\n\n  /**\n   * Component template\n   */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.containerStyle(style, _theme),\n    className: \"cometchat__conversations\",\n    children: /*#__PURE__*/_jsxDEV(CometChatListBase, {\n      style: new ListBaseStyles({\n        ...styles.getListBaseStyle(style, _theme)\n      }),\n      title: title,\n      searchPlaceholder: searchPlaceholder,\n      hideSearch: hideSearch,\n      showBackButton: showBackButton,\n      backButtonIconURL: backButtonIconURL,\n      onSearch: searchHandler,\n      searchIconURL: searchIconURL,\n      searchText: \"\",\n      theme: _theme,\n      children: /*#__PURE__*/_jsxDEV(CometChatConversationList, {\n        ref: conversationListRef,\n        style: new ConversationListStyles({\n          ...styles.getConversationListStyle(style, _theme),\n          ...(_conversationListConfiguration === null || _conversationListConfiguration === void 0 ? void 0 : _conversationListConfiguration.style)\n        }),\n        limit: _conversationListConfiguration === null || _conversationListConfiguration === void 0 ? void 0 : _conversationListConfiguration.limit,\n        userAndGroupTags: _conversationListConfiguration === null || _conversationListConfiguration === void 0 ? void 0 : _conversationListConfiguration.userAndGroupTags,\n        tags: _conversationListConfiguration === null || _conversationListConfiguration === void 0 ? void 0 : _conversationListConfiguration.tags,\n        loadingIconURL: _conversationListConfiguration === null || _conversationListConfiguration === void 0 ? void 0 : _conversationListConfiguration.loadingIconURL,\n        customView: _conversationListConfiguration === null || _conversationListConfiguration === void 0 ? void 0 : _conversationListConfiguration.customView,\n        hideError: _conversationListConfiguration === null || _conversationListConfiguration === void 0 ? void 0 : _conversationListConfiguration.hideError,\n        emptyText: _conversationListConfiguration === null || _conversationListConfiguration === void 0 ? void 0 : _conversationListConfiguration.emptyText,\n        errorText: _conversationListConfiguration === null || _conversationListConfiguration === void 0 ? void 0 : _conversationListConfiguration.errorText,\n        activeConversation: activeConversation,\n        enableSoundForMessages: _conversationListConfiguration === null || _conversationListConfiguration === void 0 ? void 0 : _conversationListConfiguration.enableSoundForMessages,\n        conversationListItemConfiguration: _conversationListConfiguration === null || _conversationListConfiguration === void 0 ? void 0 : _conversationListConfiguration.conversationListItemConfiguration,\n        theme: _theme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n}, \"L6/5gOPDLluyetv0geNth87NiXM=\")), \"L6/5gOPDLluyetv0geNth87NiXM=\");\n\n/**\n * Component default props\n */\n_c2 = CometChatConversations;\nCometChatConversations.defaultProps = {\n  backButtonIconURL: backIcon,\n  //TODO: This default props will be moved to configuration class when we move configurations in component folder only. \n  startConversationIconURL: startConversationIcon,\n  searchIconURL: seachIcon\n};\n\n/**\n * Component default props types\n */\nCometChatConversations.propTypes = {\n  title: PropTypes.string,\n  searchPlaceholder: PropTypes.string,\n  style: PropTypes.object,\n  backButtonIconURL: PropTypes.string,\n  searchIconURL: PropTypes.string,\n  showBackButton: PropTypes.bool,\n  hideSearch: PropTypes.bool,\n  startConversationIconURL: PropTypes.string,\n  hideStartConversation: PropTypes.bool,\n  activeConversation: PropTypes.object,\n  //TODO: Figure out way to use PropTypes.objectOf(CometChat.Conversation)\n  conversationListConfiguration: PropTypes.object,\n  theme: PropTypes.object\n};\nexport { CometChatConversations };\nvar _c, _c2;\n$RefreshReg$(_c, \"CometChatConversations$forwardRef\");\n$RefreshReg$(_c2, \"CometChatConversations\");","map":{"version":3,"names":["React","forwardRef","PropTypes","styles","CometChatConversationList","CometChatListBase","ConversationListConfiguration","CometChatTheme","CometChatConversationEvents","CometChatMessageEvents","ConversationsStyles","ConversationListStyles","ListBaseStyles","backIcon","startConversationIcon","seachIcon","CometChatConversations","props","ref","activeConversation","title","searchPlaceholder","backButtonIconURL","startConversationIconURL","searchIconURL","showBackButton","hideStartConversation","hideSearch","style","conversationListConfiguration","theme","updateLastMessage","payload","conversationListRef","current","message","addListener","onMessageSent","onMessageDelete","useRef","_conversationListConfiguration","_theme","useImperativeHandle","searchHandler","searchText","getStartConversationButtonElem","startConversationBtnStyle","containerStyle","getListBaseStyle","getConversationListStyle","limit","userAndGroupTags","tags","loadingIconURL","customView","hideError","emptyText","errorText","enableSoundForMessages","conversationListItemConfiguration","defaultProps","propTypes","string","object","bool"],"sources":["/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/cometchat-pro-react-ui-kit/src/components/Chats/CometChatConversations/index.js"],"sourcesContent":["import React, { forwardRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as styles from \"./style\";\nimport { CometChatConversationList } from \"../\";\nimport {\n    CometChatListBase,\n    ConversationListConfiguration,\n    CometChatTheme,\n    CometChatConversationEvents,\n    CometChatMessageEvents\n} from \"../../../\";\nimport { \n    ConversationsStyles,\n    ConversationListStyles \n} from \"../../Chats\";\nimport { ListBaseStyles } from \"../../Shared/PrimaryComponents/CometChatListBase/ListBaseStyles\";\nimport backIcon from \"./resources/back.svg\";\nimport startConversationIcon from \"./resources/new.svg\";\nimport seachIcon from \"./resources/search.svg\";\n\n/**\n *\n * @version 1.0.0\n * @author CometChatTeam\n * @description CometChatConversations is a container component that wraps and\n * formats CometChatListBase and CometChatConversationList component, with no behavior of its own.\n *\n */\n\nconst CometChatConversations = forwardRef((props, ref) => {\n\n    /**\n     * Props destructuring\n     */\n    const {\n        activeConversation,\n        title,\n        searchPlaceholder,\n        \n        backButtonIconURL,\n        startConversationIconURL,\n        searchIconURL,\n        showBackButton,\n        hideStartConversation,\n        hideSearch,\n        style,\n        conversationListConfiguration,\n        theme\n    } = props;\n\n    const updateLastMessage = (payload) => {\n        if (conversationListRef?.current) {\n            conversationListRef.current.updateLastMessage(payload?.message)\n        }\n    }\n\n    CometChatMessageEvents.addListener(\n        CometChatMessageEvents.onMessageSent,\n        \"onMessageSent\",\n        updateLastMessage\n    );\n\n    CometChatMessageEvents.addListener(\n        CometChatMessageEvents.onMessageDelete,\n        \"onMessageDelete\",\n        updateLastMessage\n    );\n    /**\n     * Component internal state\n     */\n    const conversationListRef = React.useRef(null);\n\n    /**\n     * Component private scoping\n     */\n    const _conversationListConfiguration = new ConversationListConfiguration(conversationListConfiguration ?? {});\n    const _theme = new CometChatTheme(theme ??  {});;\n\n\n    React.useImperativeHandle(ref, () => ({\n        conversationListRef: conversationListRef.current\n    }));\n\n  \n    \n    /**\n     * Component internal handlers/methods \n     */\n\n    const searchHandler = (searchText) => {\n        //TODO: search is not implemented\n        return false;\n    };\n\n    /**\n     * Component template scoping\n     */\n    const getStartConversationButtonElem = () => {\n        if (hideStartConversation) {\n            return <div style={styles.startConversationBtnStyle(style, _theme, startConversationIconURL)}></div>;\n        }\n        return null;\n    };\n\n    /**\n     * Component template\n     */\n    return (\n        <div\n            style={styles.containerStyle(style, _theme)}\n            className=\"cometchat__conversations\"\n        >\n            {/* {getStartConversationButtonElem()} */}\n            <CometChatListBase\n                style={new ListBaseStyles({\n                    ...styles.getListBaseStyle(style, _theme),\n                })}\n                title={title}\n                searchPlaceholder={searchPlaceholder}\n                hideSearch={hideSearch}\n                showBackButton={showBackButton}\n                backButtonIconURL={backButtonIconURL}\n                onSearch={searchHandler}\n                searchIconURL={searchIconURL}\n                searchText={\"\"}\n                theme={_theme}\n            >\n                <CometChatConversationList\n                    ref={conversationListRef}\n                    style={new ConversationListStyles({\n                        ...styles.getConversationListStyle(style, _theme),\n                        ..._conversationListConfiguration?.style\n                    })}\n                    limit={_conversationListConfiguration?.limit}\n                    userAndGroupTags={_conversationListConfiguration?.userAndGroupTags}\n                    tags={_conversationListConfiguration?.tags}\n                    loadingIconURL={_conversationListConfiguration?.loadingIconURL}\n                    customView={_conversationListConfiguration?.customView}\n                    hideError={_conversationListConfiguration?.hideError}\n                    emptyText={_conversationListConfiguration?.emptyText}\n                    errorText={_conversationListConfiguration?.errorText}\n                    activeConversation={activeConversation}\n                    enableSoundForMessages={_conversationListConfiguration?.enableSoundForMessages}\n                    conversationListItemConfiguration={_conversationListConfiguration?.conversationListItemConfiguration}\n                    theme={_theme}\n                />\n            </CometChatListBase>\n        </div>\n    );\n})\n\n/**\n * Component default props\n */\nCometChatConversations.defaultProps = {\n    backButtonIconURL: backIcon, //TODO: This default props will be moved to configuration class when we move configurations in component folder only. \n    startConversationIconURL: startConversationIcon,\n    searchIconURL: seachIcon,\n};\n\n/**\n * Component default props types\n */\nCometChatConversations.propTypes = {\n    title: PropTypes.string,\n    searchPlaceholder: PropTypes.string,\n    style: PropTypes.object,\n    backButtonIconURL: PropTypes.string,\n    searchIconURL: PropTypes.string,\n    showBackButton: PropTypes.bool,\n    hideSearch: PropTypes.bool,\n    startConversationIconURL: PropTypes.string,\n    hideStartConversation: PropTypes.bool,\n    activeConversation: PropTypes.object, //TODO: Figure out way to use PropTypes.objectOf(CometChat.Conversation)\n    conversationListConfiguration: PropTypes.object,\n    theme: PropTypes.object\n};\n\nexport { CometChatConversations };\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAO,KAAKC,MAAM,MAAM,SAAS;AACjC,SAASC,yBAAyB,QAAQ,KAAK;AAC/C,SACIC,iBAAiB,EACjBC,6BAA6B,EAC7BC,cAAc,EACdC,2BAA2B,EAC3BC,sBAAsB,QACnB,WAAW;AAClB,SACIC,mBAAmB,EACnBC,sBAAsB,QACnB,aAAa;AACpB,SAASC,cAAc,QAAQ,iEAAiE;AAChG,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,qBAAqB,MAAM,qBAAqB;AACvD,OAAOC,SAAS,MAAM,wBAAwB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA,MAAMC,sBAAsB,iCAAGf,UAAU,SAAC,CAACgB,KAAK,EAAEC,GAAG,KAAK;EAAA;EAEtD;AACJ;AACA;EACI,MAAM;IACFC,kBAAkB;IAClBC,KAAK;IACLC,iBAAiB;IAEjBC,iBAAiB;IACjBC,wBAAwB;IACxBC,aAAa;IACbC,cAAc;IACdC,qBAAqB;IACrBC,UAAU;IACVC,KAAK;IACLC,6BAA6B;IAC7BC;EACJ,CAAC,GAAGb,KAAK;EAET,MAAMc,iBAAiB,GAAIC,OAAO,IAAK;IACnC,IAAIC,mBAAmB,aAAnBA,mBAAmB,eAAnBA,mBAAmB,CAAEC,OAAO,EAAE;MAC9BD,mBAAmB,CAACC,OAAO,CAACH,iBAAiB,CAACC,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEG,OAAO,CAAC;IACnE;EACJ,CAAC;EAED1B,sBAAsB,CAAC2B,WAAW,CAC9B3B,sBAAsB,CAAC4B,aAAa,EACpC,eAAe,EACfN,iBAAiB,CACpB;EAEDtB,sBAAsB,CAAC2B,WAAW,CAC9B3B,sBAAsB,CAAC6B,eAAe,EACtC,iBAAiB,EACjBP,iBAAiB,CACpB;EACD;AACJ;AACA;EACI,MAAME,mBAAmB,GAAGjC,KAAK,CAACuC,MAAM,CAAC,IAAI,CAAC;;EAE9C;AACJ;AACA;EACI,MAAMC,8BAA8B,GAAG,IAAIlC,6BAA6B,CAACuB,6BAA6B,aAA7BA,6BAA6B,cAA7BA,6BAA6B,GAAI,CAAC,CAAC,CAAC;EAC7G,MAAMY,MAAM,GAAG,IAAIlC,cAAc,CAACuB,KAAK,aAALA,KAAK,cAALA,KAAK,GAAK,CAAC,CAAC,CAAC;EAAC;EAGhD9B,KAAK,CAAC0C,mBAAmB,CAACxB,GAAG,EAAE,OAAO;IAClCe,mBAAmB,EAAEA,mBAAmB,CAACC;EAC7C,CAAC,CAAC,CAAC;;EAIH;AACJ;AACA;;EAEI,MAAMS,aAAa,GAAIC,UAAU,IAAK;IAClC;IACA,OAAO,KAAK;EAChB,CAAC;;EAED;AACJ;AACA;EACI,MAAMC,8BAA8B,GAAG,MAAM;IACzC,IAAInB,qBAAqB,EAAE;MACvB,oBAAO;QAAK,KAAK,EAAEvB,MAAM,CAAC2C,yBAAyB,CAAClB,KAAK,EAAEa,MAAM,EAAElB,wBAAwB;MAAE;QAAA;QAAA;QAAA;MAAA,QAAO;IACxG;IACA,OAAO,IAAI;EACf,CAAC;;EAED;AACJ;AACA;EACI,oBACI;IACI,KAAK,EAAEpB,MAAM,CAAC4C,cAAc,CAACnB,KAAK,EAAEa,MAAM,CAAE;IAC5C,SAAS,EAAC,0BAA0B;IAAA,uBAGpC,QAAC,iBAAiB;MACd,KAAK,EAAE,IAAI7B,cAAc,CAAC;QACtB,GAAGT,MAAM,CAAC6C,gBAAgB,CAACpB,KAAK,EAAEa,MAAM;MAC5C,CAAC,CAAE;MACH,KAAK,EAAErB,KAAM;MACb,iBAAiB,EAAEC,iBAAkB;MACrC,UAAU,EAAEM,UAAW;MACvB,cAAc,EAAEF,cAAe;MAC/B,iBAAiB,EAAEH,iBAAkB;MACrC,QAAQ,EAAEqB,aAAc;MACxB,aAAa,EAAEnB,aAAc;MAC7B,UAAU,EAAE,EAAG;MACf,KAAK,EAAEiB,MAAO;MAAA,uBAEd,QAAC,yBAAyB;QACtB,GAAG,EAAER,mBAAoB;QACzB,KAAK,EAAE,IAAItB,sBAAsB,CAAC;UAC9B,GAAGR,MAAM,CAAC8C,wBAAwB,CAACrB,KAAK,EAAEa,MAAM,CAAC;UACjD,IAAGD,8BAA8B,aAA9BA,8BAA8B,uBAA9BA,8BAA8B,CAAEZ,KAAK;QAC5C,CAAC,CAAE;QACH,KAAK,EAAEY,8BAA8B,aAA9BA,8BAA8B,uBAA9BA,8BAA8B,CAAEU,KAAM;QAC7C,gBAAgB,EAAEV,8BAA8B,aAA9BA,8BAA8B,uBAA9BA,8BAA8B,CAAEW,gBAAiB;QACnE,IAAI,EAAEX,8BAA8B,aAA9BA,8BAA8B,uBAA9BA,8BAA8B,CAAEY,IAAK;QAC3C,cAAc,EAAEZ,8BAA8B,aAA9BA,8BAA8B,uBAA9BA,8BAA8B,CAAEa,cAAe;QAC/D,UAAU,EAAEb,8BAA8B,aAA9BA,8BAA8B,uBAA9BA,8BAA8B,CAAEc,UAAW;QACvD,SAAS,EAAEd,8BAA8B,aAA9BA,8BAA8B,uBAA9BA,8BAA8B,CAAEe,SAAU;QACrD,SAAS,EAAEf,8BAA8B,aAA9BA,8BAA8B,uBAA9BA,8BAA8B,CAAEgB,SAAU;QACrD,SAAS,EAAEhB,8BAA8B,aAA9BA,8BAA8B,uBAA9BA,8BAA8B,CAAEiB,SAAU;QACrD,kBAAkB,EAAEtC,kBAAmB;QACvC,sBAAsB,EAAEqB,8BAA8B,aAA9BA,8BAA8B,uBAA9BA,8BAA8B,CAAEkB,sBAAuB;QAC/E,iCAAiC,EAAElB,8BAA8B,aAA9BA,8BAA8B,uBAA9BA,8BAA8B,CAAEmB,iCAAkC;QACrG,KAAK,EAAElB;MAAO;QAAA;QAAA;QAAA;MAAA;IAChB;MAAA;MAAA;MAAA;IAAA;EACc;IAAA;IAAA;IAAA;EAAA,QAClB;AAEd,CAAC,kCAAC;;AAEF;AACA;AACA;AAFA,MA1HMzB,sBAAsB;AA6H5BA,sBAAsB,CAAC4C,YAAY,GAAG;EAClCtC,iBAAiB,EAAET,QAAQ;EAAE;EAC7BU,wBAAwB,EAAET,qBAAqB;EAC/CU,aAAa,EAAET;AACnB,CAAC;;AAED;AACA;AACA;AACAC,sBAAsB,CAAC6C,SAAS,GAAG;EAC/BzC,KAAK,EAAElB,SAAS,CAAC4D,MAAM;EACvBzC,iBAAiB,EAAEnB,SAAS,CAAC4D,MAAM;EACnClC,KAAK,EAAE1B,SAAS,CAAC6D,MAAM;EACvBzC,iBAAiB,EAAEpB,SAAS,CAAC4D,MAAM;EACnCtC,aAAa,EAAEtB,SAAS,CAAC4D,MAAM;EAC/BrC,cAAc,EAAEvB,SAAS,CAAC8D,IAAI;EAC9BrC,UAAU,EAAEzB,SAAS,CAAC8D,IAAI;EAC1BzC,wBAAwB,EAAErB,SAAS,CAAC4D,MAAM;EAC1CpC,qBAAqB,EAAExB,SAAS,CAAC8D,IAAI;EACrC7C,kBAAkB,EAAEjB,SAAS,CAAC6D,MAAM;EAAE;EACtClC,6BAA6B,EAAE3B,SAAS,CAAC6D,MAAM;EAC/CjC,KAAK,EAAE5B,SAAS,CAAC6D;AACrB,CAAC;AAED,SAAS/C,sBAAsB;AAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}