{"ast":null,"code":"var _jsxFileName = \"/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/cometchat-pro-react-ui-kit/src/components/Messages/CometChatEmojiKeyboard/index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Emojis } from \"./emojis\";\nimport { CometChatEmojiCategory } from \"./EmojiCategory\";\nimport { CometChatEmoji } from \"./Emoji\";\nimport { emojiListStyle, emojiCategoryWrapper, emojiCategoryTitle, emojiTabLsitStyle, emojiContainerStyle, getListStyle, listStyle } from \"./style\";\nimport { CometChatListItem, CometChatTheme } from \"../../..\";\n\n/**\n *\n * CometChatEmojiKeyboard is a component that fetch emoji from emjis file and displays emoji\n * in the CometChatListItem component.\n *\n *\n * @version 1.0.0\n * @author CometChatTeam\n * @copyright © 2022 CometChat Inc.\n *\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CometChatEmojiKeyboard = props => {\n  _s();\n  const [theme] = React.useState(new CometChatTheme(props.theme || {}));\n  const handleEvent = obj => {\n    props.onClick(obj);\n  };\n  const autoScrollView = id => {\n    document.getElementById(id).scrollIntoView(true);\n  };\n  const renderItems = () => {\n    let emojiJSX = null;\n    let emojiCategoryJSX = [];\n    emojiJSX = Emojis === null || Emojis === void 0 ? void 0 : Emojis.map((el, i) => {\n      var _Object$values;\n      const vals = Object === null || Object === void 0 ? void 0 : Object.values(el)[0];\n      /**Each json iteration filter through EmojiCategory class */\n      const emojiCategory = new CometChatEmojiCategory({\n        id: vals.id,\n        name: vals.name,\n        symbol: vals.symbol,\n        emojis: vals.emojis\n      });\n      /**Emoji Category List */\n      emojiCategoryJSX.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emoji__autoscroll\",\n        children: /*#__PURE__*/_jsxDEV(CometChatListItem, {\n          id: emojiCategory.id,\n          iconURL: emojiCategory.symbol,\n          style: getListStyle(theme),\n          onItemClick: autoScrollView.bind(this, emojiCategory.id)\n        }, emojiCategory.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, emojiCategory.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this));\n      const title = /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"emoji__category__title\",\n        style: emojiCategoryTitle(props, theme),\n        children: emojiCategory.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this);\n\n      /**Emojis List */\n      let emojiList = null;\n      emojiList = Object === null || Object === void 0 ? void 0 : (_Object$values = Object.values(emojiCategory === null || emojiCategory === void 0 ? void 0 : emojiCategory.emojis)) === null || _Object$values === void 0 ? void 0 : _Object$values.map((emoji, i) => {\n        var _Object$values2;\n        let emojiId = Math.floor(Math.random() * ((Object === null || Object === void 0 ? void 0 : (_Object$values2 = Object.values) === null || _Object$values2 === void 0 ? void 0 : _Object$values2.length) - 0) + i);\n        const emojiInstance = new CometChatEmoji({\n          char: emoji.char,\n          keywords: emoji.keywords\n        });\n        return /*#__PURE__*/_jsxDEV(CometChatListItem, {\n          onItemClick: handleEvent.bind(this, emojiInstance.char),\n          style: listStyle(props, theme),\n          text: emojiInstance.char\n        }, emojiId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this);\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: emojiCategory.id // for auto scroll\n        ,\n        className: \"emoji__category__wrapper\",\n        style: emojiCategoryWrapper(props),\n        children: [title, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"emoji__list\",\n          style: emojiListStyle(props, theme),\n          children: emojiList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, emojiCategory.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"emoji__keyboard\",\n      style: emojiContainerStyle(props, theme),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emoji__list__items\",\n        children: emojiJSX\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emoji__category\",\n        style: emojiTabLsitStyle(props, theme),\n        children: emojiCategoryJSX\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  };\n  return renderItems();\n};\n\n// Specifies the default values for props:\n_s(CometChatEmojiKeyboard, \"HBruF64ZTJjs2tfSX8UiqZwRBd8=\");\n_c = CometChatEmojiKeyboard;\nCometChatEmojiKeyboard.defaultProps = {\n  hideSearch: false,\n  onClick: () => {},\n  style: {\n    width: \"272px\",\n    height: \"330px\",\n    border: \"none\",\n    background: \"rgb(255,255,255)\",\n    borderRadius: \"8px\",\n    sectionHeaderFont: \"500 12px Inter, sans-serif\",\n    sectionHeaderColor: \"rgba(20,20,20,0.58)\",\n    categoryIconTint: \"RGBA(20, 20, 20, 0.58)\",\n    selectedCategoryIconTint: \"#39f\",\n    categoryBackground: \"rgb(255,255,255)\"\n  }\n};\nCometChatEmojiKeyboard.propTypes = {\n  hideSearch: PropTypes.bool,\n  onClick: PropTypes.func,\n  style: PropTypes.object\n};\nexport { CometChatEmojiKeyboard };\nvar _c;\n$RefreshReg$(_c, \"CometChatEmojiKeyboard\");","map":{"version":3,"names":["React","PropTypes","Emojis","CometChatEmojiCategory","CometChatEmoji","emojiListStyle","emojiCategoryWrapper","emojiCategoryTitle","emojiTabLsitStyle","emojiContainerStyle","getListStyle","listStyle","CometChatListItem","CometChatTheme","CometChatEmojiKeyboard","props","theme","useState","handleEvent","obj","onClick","autoScrollView","id","document","getElementById","scrollIntoView","renderItems","emojiJSX","emojiCategoryJSX","map","el","i","vals","Object","values","emojiCategory","name","symbol","emojis","push","bind","title","emojiList","emoji","emojiId","Math","floor","random","length","emojiInstance","char","keywords","defaultProps","hideSearch","style","width","height","border","background","borderRadius","sectionHeaderFont","sectionHeaderColor","categoryIconTint","selectedCategoryIconTint","categoryBackground","propTypes","bool","func","object"],"sources":["/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/cometchat-pro-react-ui-kit/src/components/Messages/CometChatEmojiKeyboard/index.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Emojis } from \"./emojis\";\nimport { CometChatEmojiCategory } from \"./EmojiCategory\";\nimport { CometChatEmoji } from \"./Emoji\";\n\nimport {\n  emojiListStyle,\n  emojiCategoryWrapper,\n  emojiCategoryTitle,\n  emojiTabLsitStyle,\n  emojiContainerStyle,\n  getListStyle,\n  listStyle,\n} from \"./style\";\n\nimport { CometChatListItem, CometChatTheme } from \"../../..\";\n\n/**\n *\n * CometChatEmojiKeyboard is a component that fetch emoji from emjis file and displays emoji\n * in the CometChatListItem component.\n *\n *\n * @version 1.0.0\n * @author CometChatTeam\n * @copyright © 2022 CometChat Inc.\n *\n */\n\nconst CometChatEmojiKeyboard = (props) => {\n  const [theme] = React.useState(new CometChatTheme(props.theme || {}));\n\n  const handleEvent = (obj) => {\n    props.onClick(obj);\n  };\n\n  const autoScrollView = (id) => {\n    document.getElementById(id).scrollIntoView(true);\n  };\n\n  const renderItems = () => {\n    let emojiJSX = null;\n    let emojiCategoryJSX = [];\n    emojiJSX = Emojis?.map((el, i) => {\n      const vals = Object?.values(el)[0];\n      /**Each json iteration filter through EmojiCategory class */\n      const emojiCategory = new CometChatEmojiCategory({\n        id: vals.id,\n        name: vals.name,\n        symbol: vals.symbol,\n        emojis: vals.emojis,\n      });\n      /**Emoji Category List */\n      emojiCategoryJSX.push(\n        <div key={emojiCategory.id} className=\"emoji__autoscroll\">\n          <CometChatListItem\n            key={emojiCategory.id}\n            id={emojiCategory.id}\n            iconURL={emojiCategory.symbol}\n            style={getListStyle(theme)}\n            onItemClick={autoScrollView.bind(this, emojiCategory.id)}\n          />\n        </div>\n      );\n\n      const title = (\n        <p\n          className=\"emoji__category__title\"\n          style={emojiCategoryTitle(props, theme)}\n        >\n          {emojiCategory.name}\n        </p>\n      );\n\n      /**Emojis List */\n      let emojiList = null;\n      emojiList = Object?.values(emojiCategory?.emojis)?.map((emoji, i) => {\n        let emojiId = Math.floor(\n          Math.random() * (Object?.values?.length - 0) + i\n        );\n        const emojiInstance = new CometChatEmoji({\n          char: emoji.char,\n          keywords: emoji.keywords,\n        });\n\n        return (\n          <CometChatListItem\n            key={emojiId}\n            onItemClick={handleEvent.bind(this, emojiInstance.char)}\n            style={listStyle(props, theme)}\n            text={emojiInstance.char}\n          />\n        );\n      });\n      return (\n        <div\n          key={emojiCategory.id}\n          id={emojiCategory.id} // for auto scroll\n          className=\"emoji__category__wrapper\"\n          style={emojiCategoryWrapper(props)}\n        >\n          {title}\n          <div className=\"emoji__list\" style={emojiListStyle(props, theme)}>\n            {emojiList}\n          </div>\n        </div>\n      );\n    });\n\n    return (\n      <div\n        className=\"emoji__keyboard\"\n        style={emojiContainerStyle(props, theme)}\n      >\n        <div className=\"emoji__list__items\">{emojiJSX}</div>\n        <div\n          className=\"emoji__category\"\n          style={emojiTabLsitStyle(props, theme)}\n        >\n          {emojiCategoryJSX}\n        </div>\n      </div>\n    );\n  };\n\n  return renderItems();\n};\n\n// Specifies the default values for props:\nCometChatEmojiKeyboard.defaultProps = {\n  hideSearch: false,\n  onClick: () => {},\n  style: {\n    width: \"272px\",\n    height: \"330px\",\n    border: \"none\",\n    background: \"rgb(255,255,255)\",\n    borderRadius: \"8px\",\n    sectionHeaderFont: \"500 12px Inter, sans-serif\",\n    sectionHeaderColor: \"rgba(20,20,20,0.58)\",\n    categoryIconTint: \"RGBA(20, 20, 20, 0.58)\",\n    selectedCategoryIconTint: \"#39f\",\n    categoryBackground: \"rgb(255,255,255)\",\n  },\n};\n\nCometChatEmojiKeyboard.propTypes = {\n  hideSearch: PropTypes.bool,\n  onClick: PropTypes.func,\n  style: PropTypes.object,\n};\n\nexport { CometChatEmojiKeyboard };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}