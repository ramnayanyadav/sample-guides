{"ast":null,"code":"var _jsxFileName = \"/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/cometchat-pro-react-ui-kit/src/components/Messages/CometChatSmartReplies/index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getExtensionsData } from \"..\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { CometChatSoundManager, CometChatTheme, MessageStatusConstants } from \"../../Shared\";\nimport { CometChatMessageEvents } from \"..\";\nimport { getUnixTimestamp } from \"../CometChatMessageHelper\";\nimport { CometChatListItem } from \"../../Shared\";\nimport { previewWrapperStyle, previewCloseStyle, previewOptionsWrapperStyle, previewOptionStyle } from \"./style\";\nimport closeIcon from \"./resources/close.svg\";\nimport { Hooks } from \"./hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CometChatSmartReplies = props => {\n  _s();\n  const {\n    messageObject,\n    customOutgoingMessageSound,\n    enableSoundForMessages,\n    loggedInUser,\n    onClick,\n    onClose,\n    style,\n    theme\n  } = props;\n  const _theme = theme || new CometChatTheme({});\n  const [chatWith, setChatWith] = React.useState(null);\n  const [chatWithId, setChatWithId] = React.useState(null);\n  let options = [];\n\n  /**\n   * Function to get Smart reply data from extensions\n   */\n  const smartReplyData = getExtensionsData(messageObject, \"smart-reply\");\n  if (smartReplyData && Object.keys(smartReplyData).length && !smartReplyData.hasOwnProperty(\"error\")) {\n    options.push(smartReplyData[\"reply_positive\"]);\n    options.push(smartReplyData[\"reply_neutral\"]);\n    options.push(smartReplyData[\"reply_negative\"]);\n  }\n\n  /**\n   * Play Outgoing Audio sound on send\n   */\n  const playOutgoingAudio = () => {\n    if (enableSoundForMessages) {\n      if (customOutgoingMessageSound) {\n        CometChatSoundManager.play(CometChatSoundManager.Sound.outgoingMessage, customOutgoingMessageSound);\n      } else {\n        CometChatSoundManager.play(CometChatSoundManager.Sound.outgoingMessage);\n      }\n    }\n  };\n  Hooks(messageObject, setChatWith, setChatWithId);\n\n  /**\n   *\n   * @param {*} smartReply\n   * performs send Message Function\n   */\n  const sendMessage = smartReply => {\n    if (onClick) {\n      return onClick(smartReply);\n    }\n    if (!smartReply.trim().length) {\n      return false;\n    }\n    let textMessage = new CometChat.TextMessage(chatWithId, smartReply, chatWith);\n    textMessage.setSender(loggedInUser);\n    textMessage.setReceiver(chatWith);\n    textMessage.setText(smartReply);\n    textMessage.setSentAt(getUnixTimestamp());\n    textMessage.setMuid(String(getUnixTimestamp()));\n    CometChatMessageEvents.emit(CometChatMessageEvents.onMessageSent, {\n      message: textMessage,\n      status: MessageStatusConstants.inprogress\n    });\n    playOutgoingAudio();\n    CometChat.sendMessage(textMessage).then(message => {\n      const messageObject = {\n        ...message\n      };\n      CometChatMessageEvents.emit(CometChatMessageEvents.onMessageSent, {\n        message: messageObject,\n        status: MessageStatusConstants.success\n      });\n    }).catch(error => {\n      CometChatMessageEvents.emit(CometChatMessageEvents.onMessageError, {\n        message: textMessage,\n        error: error\n      });\n    });\n    if (onClose) {\n      return onClose();\n    }\n  };\n\n  /**\n   *\n   * @returns Single smart reply option\n   */\n  const CometChatSmartReplyOptions = () => {\n    if (options && options.length) {\n      return options.map(option => {\n        return /*#__PURE__*/_jsxDEV(CometChatListItem, {\n          style: previewOptionStyle(style, _theme),\n          text: option,\n          className: \"smartreplies__option\",\n          onItemClick: sendMessage.bind(this, option)\n        }, option.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 6\n        }, this);\n      });\n    }\n  };\n\n  /**\n   *\n   * @returns items to be rendered\n   */\n  const renderItems = () => {\n    if (options !== null && options !== void 0 && options.length && messageObject !== null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: previewWrapperStyle(style, _theme),\n        className: \"smartreplies__wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: previewCloseStyle(style, closeIcon),\n          onClick: onClose.bind(this),\n          className: \"smartreplies__close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: previewOptionsWrapperStyle(),\n          className: \"smartreplies__options\",\n          children: CometChatSmartReplyOptions()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 5\n      }, this);\n    } else {\n      return null;\n    }\n  };\n  return renderItems();\n};\n_s(CometChatSmartReplies, \"cuQJmtVp26uzt9nNDXPxVMXAgls=\");\n_c = CometChatSmartReplies;\nCometChatSmartReplies.defaultProps = {\n  messageObject: null,\n  customOutgoingMessageSound: null,\n  enableSoundForMessages: false,\n  loggedInUser: null,\n  onClick: () => {},\n  onClose: () => {},\n  style: null\n};\nCometChatSmartReplies.propTypes = {\n  messageObject: PropTypes.object,\n  customOutgoingMessageSound: PropTypes.string,\n  enableSoundForMessages: PropTypes.bool,\n  loggedInUser: PropTypes.object,\n  onClick: PropTypes.func,\n  onClose: PropTypes.func,\n  style: PropTypes.object\n};\nexport { CometChatSmartReplies };\nvar _c;\n$RefreshReg$(_c, \"CometChatSmartReplies\");","map":{"version":3,"names":["React","PropTypes","getExtensionsData","CometChat","CometChatSoundManager","CometChatTheme","MessageStatusConstants","CometChatMessageEvents","getUnixTimestamp","CometChatListItem","previewWrapperStyle","previewCloseStyle","previewOptionsWrapperStyle","previewOptionStyle","closeIcon","Hooks","CometChatSmartReplies","props","messageObject","customOutgoingMessageSound","enableSoundForMessages","loggedInUser","onClick","onClose","style","theme","_theme","chatWith","setChatWith","useState","chatWithId","setChatWithId","options","smartReplyData","Object","keys","length","hasOwnProperty","push","playOutgoingAudio","play","Sound","outgoingMessage","sendMessage","smartReply","trim","textMessage","TextMessage","setSender","setReceiver","setText","setSentAt","setMuid","String","emit","onMessageSent","message","status","inprogress","then","success","catch","error","onMessageError","CometChatSmartReplyOptions","map","option","bind","id","renderItems","defaultProps","propTypes","object","string","bool","func"],"sources":["/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/cometchat-pro-react-ui-kit/src/components/Messages/CometChatSmartReplies/index.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getExtensionsData } from \"..\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport {\n\tCometChatSoundManager,\n\tCometChatTheme,\n\tMessageStatusConstants,\n} from \"../../Shared\";\nimport { CometChatMessageEvents } from \"..\";\nimport { getUnixTimestamp } from \"../CometChatMessageHelper\";\n\nimport { CometChatListItem } from \"../../Shared\";\nimport {\n\tpreviewWrapperStyle,\n\tpreviewCloseStyle,\n\tpreviewOptionsWrapperStyle,\n\tpreviewOptionStyle,\n} from \"./style\";\nimport closeIcon from \"./resources/close.svg\";\nimport { Hooks } from \"./hooks\";\n\nconst CometChatSmartReplies = (props) => {\n\tconst {\n\t\tmessageObject,\n\t\tcustomOutgoingMessageSound,\n\t\tenableSoundForMessages,\n\t\tloggedInUser,\n\t\tonClick,\n\t\tonClose,\n\t\tstyle,\n\t\ttheme,\n\t} = props;\n\n\tconst _theme = theme || new CometChatTheme({});\n\n\tconst [chatWith, setChatWith] = React.useState(null);\n\tconst [chatWithId, setChatWithId] = React.useState(null);\n\n\tlet options = [];\n\n\t/**\n\t * Function to get Smart reply data from extensions\n\t */\n\tconst smartReplyData = getExtensionsData(messageObject, \"smart-reply\");\n\tif (\n\t\tsmartReplyData &&\n\t\tObject.keys(smartReplyData).length &&\n\t\t!smartReplyData.hasOwnProperty(\"error\")\n\t) {\n\t\toptions.push(smartReplyData[\"reply_positive\"]);\n\t\toptions.push(smartReplyData[\"reply_neutral\"]);\n\t\toptions.push(smartReplyData[\"reply_negative\"]);\n\t}\n\n\t/**\n\t * Play Outgoing Audio sound on send\n\t */\n\tconst playOutgoingAudio = () => {\n\t\tif (enableSoundForMessages) {\n\t\t\tif (customOutgoingMessageSound) {\n\t\t\t\tCometChatSoundManager.play(\n\t\t\t\t\tCometChatSoundManager.Sound.outgoingMessage,\n\t\t\t\t\tcustomOutgoingMessageSound\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tCometChatSoundManager.play(CometChatSoundManager.Sound.outgoingMessage);\n\t\t\t}\n\t\t}\n\t};\n\n\tHooks(messageObject, setChatWith, setChatWithId);\n\n\t/**\n\t *\n\t * @param {*} smartReply\n\t * performs send Message Function\n\t */\n\tconst sendMessage = (smartReply) => {\n\t\tif (onClick) {\n\t\t\treturn onClick(smartReply);\n\t\t}\n\n\t\tif (!smartReply.trim().length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet textMessage = new CometChat.TextMessage(\n\t\t\tchatWithId,\n\t\t\tsmartReply,\n\t\t\tchatWith\n\t\t);\n\n\t\ttextMessage.setSender(loggedInUser);\n\t\ttextMessage.setReceiver(chatWith);\n\t\ttextMessage.setText(smartReply);\n\t\ttextMessage.setSentAt(getUnixTimestamp());\n\t\ttextMessage.setMuid(String(getUnixTimestamp()));\n\t\tCometChatMessageEvents.emit(CometChatMessageEvents.onMessageSent, {\n\t\t\tmessage: textMessage,\n\t\t\tstatus: MessageStatusConstants.inprogress,\n\t\t});\n\n\t\tplayOutgoingAudio();\n\n\t\tCometChat.sendMessage(textMessage)\n\t\t\t.then((message) => {\n\t\t\t\tconst messageObject = { ...message };\n\t\t\t\tCometChatMessageEvents.emit(CometChatMessageEvents.onMessageSent, {\n\t\t\t\t\tmessage: messageObject,\n\t\t\t\t\tstatus: MessageStatusConstants.success,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tCometChatMessageEvents.emit(CometChatMessageEvents.onMessageError, {\n\t\t\t\t\tmessage: textMessage,\n\t\t\t\t\terror: error,\n\t\t\t\t});\n\t\t\t});\n\n\t\tif (onClose) {\n\t\t\treturn onClose();\n\t\t}\n\t};\n\n\t/**\n\t *\n\t * @returns Single smart reply option\n\t */\n\tconst CometChatSmartReplyOptions = () => {\n\t\tif (options && options.length) {\n\t\t\treturn options.map((option) => {\n\t\t\t\treturn (\n\t\t\t\t\t<CometChatListItem\n\t\t\t\t\t\tkey={option.id}\n\t\t\t\t\t\tstyle={previewOptionStyle(style, _theme)}\n\t\t\t\t\t\ttext={option}\n\t\t\t\t\t\tclassName='smartreplies__option'\n\t\t\t\t\t\tonItemClick={sendMessage.bind(this, option)}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t};\n\n\t/**\n\t *\n\t * @returns items to be rendered\n\t */\n\tconst renderItems = () => {\n\t\tif (options?.length && messageObject !== null) {\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tstyle={previewWrapperStyle(style, _theme)}\n\t\t\t\t\tclassName='smartreplies__wrapper'\n\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle={previewCloseStyle(style, closeIcon)}\n\t\t\t\t\t\tonClick={onClose.bind(this)}\n\t\t\t\t\t\tclassName='smartreplies__close'\n\t\t\t\t\t></div>\n\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle={previewOptionsWrapperStyle()}\n\t\t\t\t\t\tclassName='smartreplies__options'\n\t\t\t\t\t>\n\t\t\t\t\t\t{CometChatSmartReplyOptions()}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t};\n\n\treturn renderItems();\n};\n\nCometChatSmartReplies.defaultProps = {\n\tmessageObject: null,\n\tcustomOutgoingMessageSound: null,\n\tenableSoundForMessages: false,\n\tloggedInUser: null,\n\tonClick: () => {},\n\tonClose: () => {},\n\tstyle: null,\n};\nCometChatSmartReplies.propTypes = {\n\tmessageObject: PropTypes.object,\n\tcustomOutgoingMessageSound: PropTypes.string,\n\tenableSoundForMessages: PropTypes.bool,\n\tloggedInUser: PropTypes.object,\n\tonClick: PropTypes.func,\n\tonClose: PropTypes.func,\n\tstyle: PropTypes.object,\n};\nexport { CometChatSmartReplies };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}