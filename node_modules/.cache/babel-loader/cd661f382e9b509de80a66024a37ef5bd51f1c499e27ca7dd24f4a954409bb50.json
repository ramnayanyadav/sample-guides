{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from \"react\";\nimport { ExtensionConstants, getExtensionsData, MetadataConstants } from \"../../../Shared\";\nimport { CometChatMessageEvents } from \"../../\";\nexport const Hooks = (props, setImageURL, imageURL, setUnsafe) => {\n  _s();\n  const pickImage = thumbnailGenerationObject => {\n    const mediumUrl = thumbnailGenerationObject[\"url_medium\"];\n    return mediumUrl;\n  };\n  const downloadImage = imgUrl => {\n    return new Promise((resolve, reject) => {\n      let timer;\n      const xhr = new XMLHttpRequest();\n      xhr.open(\"GET\", imgUrl, true);\n      xhr.responseType = \"blob\";\n      xhr.onload = () => {\n        if (xhr.readyState === 4) {\n          if (xhr.status === 200) {\n            timer = null;\n            resolve(imgUrl);\n          } else if (xhr.status === 403) {\n            timer = setTimeout(() => {\n              downloadImage(imgUrl).then(response => resolve(imgUrl)).catch(error => reject(error));\n            }, 800);\n          }\n        } else {\n          reject(xhr.statusText);\n        }\n      };\n      xhr.onerror = event => reject(new Error(\"There was a network error.\", event));\n      xhr.ontimeout = event => reject(new Error(\"There was a timeout error.\", event));\n      xhr.send();\n    });\n  };\n  const setMessageImageUrl = React.useCallback(() => {\n    return new Promise(resolve => {\n      let img = new Image();\n      if (props.messageObject && props.messageObject.data && props.messageObject.data.attachments && typeof props.messageObject.data.attachments === \"object\" && props.messageObject.data.attachments.length) {\n        var _props$messageObject$;\n        img.src = (_props$messageObject$ = props.messageObject.data.attachments[0]) === null || _props$messageObject$ === void 0 ? void 0 : _props$messageObject$.url;\n      } else if (props.messageObject.data.file && props.messageObject.data.file) {\n        const reader = new FileReader();\n        reader.onload = function () {\n          img.src = reader.result;\n        };\n        reader.readAsDataURL(props.messageObject.data.file);\n      }\n      img.onload = () => resolve(img.src);\n    });\n  }, [props.messageObject]);\n  React.useEffect(() => {\n    if (props.imageURL && props.imageURL.length) {\n      setImageURL(props.imageURL);\n    } else if (props.messageObject) {\n      const thumbnailGenerationExtensionData = getExtensionsData(props.messageObject, MetadataConstants.extensions.thumbnailGeneration);\n      if (thumbnailGenerationExtensionData && !thumbnailGenerationExtensionData.hasOwnProperty(\"error\")) {\n        const imageToDownload = pickImage(thumbnailGenerationExtensionData);\n        downloadImage(imageToDownload).then(response => {\n          let img = new Image();\n          img.src = imageToDownload;\n          img.onload = () => setImageURL(img.src);\n        }).catch(error => {\n          CometChatMessageEvents.emit(CometChatMessageEvents.onMessageError, error);\n        });\n      } else {\n        setMessageImageUrl().then(imageUrl => {\n          if (imageUrl !== imageURL) {\n            setImageURL(imageUrl);\n          }\n        });\n      }\n    }\n\n    /**image moderation extension */\n    const imageModeration = getExtensionsData(props === null || props === void 0 ? void 0 : props.messageObject, ExtensionConstants.imageModeration);\n    if ((imageModeration === null || imageModeration === void 0 ? void 0 : imageModeration[\"unsafe\"]) === \"yes\") {\n      setUnsafe(true);\n    } else {\n      setUnsafe(false);\n    }\n  }, [props, imageURL, props.imageURL, props.messageObject, setImageURL, setMessageImageUrl]);\n};\n_s(Hooks, \"rrfEC01C5Wmo2h0qgiHIwEEn9fg=\");\n_c = Hooks;\nvar _c;\n$RefreshReg$(_c, \"Hooks\");","map":{"version":3,"names":["React","ExtensionConstants","getExtensionsData","MetadataConstants","CometChatMessageEvents","Hooks","props","setImageURL","imageURL","setUnsafe","pickImage","thumbnailGenerationObject","mediumUrl","downloadImage","imgUrl","Promise","resolve","reject","timer","xhr","XMLHttpRequest","open","responseType","onload","readyState","status","setTimeout","then","response","catch","error","statusText","onerror","event","Error","ontimeout","send","setMessageImageUrl","useCallback","img","Image","messageObject","data","attachments","length","src","url","file","reader","FileReader","result","readAsDataURL","useEffect","thumbnailGenerationExtensionData","extensions","thumbnailGeneration","hasOwnProperty","imageToDownload","emit","onMessageError","imageUrl","imageModeration"],"sources":["/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/cometchat-pro-react-ui-kit/src/components/Messages/Bubbles/CometChatImageBubble/hooks.js"],"sourcesContent":["import React from \"react\";\n\nimport {\n  ExtensionConstants,\n  getExtensionsData,\n  MetadataConstants,\n} from \"../../../Shared\";\nimport { CometChatMessageEvents } from \"../../\";\n\nexport const Hooks = (props, setImageURL, imageURL, setUnsafe) => {\n  const pickImage = (thumbnailGenerationObject) => {\n    const mediumUrl = thumbnailGenerationObject[\"url_medium\"];\n    return mediumUrl;\n  };\n\n  const downloadImage = (imgUrl) => {\n    return new Promise((resolve, reject) => {\n      let timer;\n      const xhr = new XMLHttpRequest();\n      xhr.open(\"GET\", imgUrl, true);\n      xhr.responseType = \"blob\";\n\n      xhr.onload = () => {\n        if (xhr.readyState === 4) {\n          if (xhr.status === 200) {\n            timer = null;\n            resolve(imgUrl);\n          } else if (xhr.status === 403) {\n            timer = setTimeout(() => {\n              downloadImage(imgUrl)\n                .then((response) => resolve(imgUrl))\n                .catch((error) => reject(error));\n            }, 800);\n          }\n        } else {\n          reject(xhr.statusText);\n        }\n      };\n\n      xhr.onerror = (event) =>\n        reject(new Error(\"There was a network error.\", event));\n      xhr.ontimeout = (event) =>\n        reject(new Error(\"There was a timeout error.\", event));\n      xhr.send();\n    });\n  };\n\n  const setMessageImageUrl = React.useCallback(() => {\n    return new Promise((resolve) => {\n      let img = new Image();\n\n      if (\n        props.messageObject &&\n        props.messageObject.data &&\n        props.messageObject.data.attachments &&\n        typeof props.messageObject.data.attachments === \"object\" &&\n        props.messageObject.data.attachments.length\n      ) {\n        img.src = props.messageObject.data.attachments[0]?.url;\n      } else if (\n        props.messageObject.data.file &&\n        props.messageObject.data.file\n      ) {\n        const reader = new FileReader();\n        reader.onload = function () {\n          img.src = reader.result;\n        };\n\n        reader.readAsDataURL(props.messageObject.data.file);\n      }\n\n      img.onload = () => resolve(img.src);\n    });\n  }, [props.messageObject]);\n\n  React.useEffect(() => {\n    if (props.imageURL && props.imageURL.length) {\n      setImageURL(props.imageURL);\n    } else if (props.messageObject) {\n      const thumbnailGenerationExtensionData = getExtensionsData(\n        props.messageObject,\n        MetadataConstants.extensions.thumbnailGeneration\n      );\n      if (\n        thumbnailGenerationExtensionData &&\n        !thumbnailGenerationExtensionData.hasOwnProperty(\"error\")\n      ) {\n        const imageToDownload = pickImage(thumbnailGenerationExtensionData);\n\n        downloadImage(imageToDownload)\n          .then((response) => {\n            let img = new Image();\n            img.src = imageToDownload;\n            img.onload = () => setImageURL(img.src);\n          })\n          .catch((error) => {\n            CometChatMessageEvents.emit(\n              CometChatMessageEvents.onMessageError,\n              error\n            );\n          });\n      } else {\n        setMessageImageUrl().then((imageUrl) => {\n          if (imageUrl !== imageURL) {\n            setImageURL(imageUrl);\n          }\n        });\n      }\n    }\n\n    /**image moderation extension */\n    const imageModeration = getExtensionsData(\n      props?.messageObject,\n      ExtensionConstants.imageModeration\n    );\n\n    if (imageModeration?.[\"unsafe\"] === \"yes\") {\n      setUnsafe(true);\n    } else {\n      setUnsafe(false);\n    }\n  }, [\n    props,\n    imageURL,\n    props.imageURL,\n    props.messageObject,\n    setImageURL,\n    setMessageImageUrl,\n  ]);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}