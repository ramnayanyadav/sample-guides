{"ast":null,"code":"var _jsxFileName = \"/home/admin1/dev/react/sample-react-guides/src/app/guides/ExcludeMessageOptions/index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { CometChatMessageList, MessageOptionConstants, CometChatPopover } from \"react-ui-kit-testing\";\nimport { Hook } from \"./hook\";\nimport reminderURL from \"./resources/reminders.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ExcludeMessageOptions = () => {\n  _s();\n  const [user, setUser] = React.useState(null);\n  const [group, setGroup] = React.useState(null);\n  const [launchReminder, setReminder] = React.useState(false);\n  const FetchApi = e => {\n    setReminder(!launchReminder);\n    if (!launchReminder) {\n      let ms = Date.now();\n      CometChat.callExtension(\"reminders\", \"POST\", \"v1/reminder\", {\n        about: parseInt(e.id),\n        isCustom: false,\n        timeInMS: 1669860928000\n      }).then(response => {\n        // Reminder created successfully\n        // Reminder details with reminderId.\n        console.log(\"reminder resp\", response);\n      }).catch(error => {\n        // Some error occured\n        console.log(\"reminder error\", error);\n      });\n    }\n  };\n  const excludeMessageOptions = [\n  // MessageOptionConstants.reactToMessage,\n  MessageOptionConstants.editMessage, MessageOptionConstants.deleteMessage, MessageOptionConstants.copyMessage, MessageOptionConstants.translateMessage];\n  const customMessageOptions = [\n  // MessageOptionConstants.reactToMessage,\n  // MessageOptionConstants.editMessage,\n  // MessageOptionConstants.deleteMessage,\n  // MessageOptionConstants.copyMessage,\n  // MessageOptionConstants.translateMessage,\n  {\n    iconURL: reminderURL,\n    id: \"RemindToMessage\",\n    onClick: FetchApi,\n    optionFor: null,\n    title: \"Reminder\"\n  }];\n  let customView = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  Hook(setGroup, setUser);\n  return user || group ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CometChatMessageList, {\n      user: user,\n      style: {\n        width: \"650px\",\n        height: \"450px\"\n      },\n      alignment: \"standard\" //['standard','leftAligned']\n      ,\n      excludeMessageOptions: excludeMessageOptions,\n      customMessageOptions: customMessageOptions,\n      sentMessageInputData: {\n        thumbnail: false,\n        title: false,\n        time: true,\n        readReceipt: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), launchReminder ? /*#__PURE__*/_jsxDEV(CometChatPopover, {\n      position: \"left\",\n      x: \"750\",\n      y: \"300\",\n      children: customView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true) : null;\n};\n_s(ExcludeMessageOptions, \"emCsRJE6ZlETqIuh5mNTi3zm7WY=\");\n_c = ExcludeMessageOptions;\nexport { ExcludeMessageOptions };\nvar _c;\n$RefreshReg$(_c, \"ExcludeMessageOptions\");","map":{"version":3,"names":["React","CometChat","CometChatMessageList","MessageOptionConstants","CometChatPopover","Hook","reminderURL","ExcludeMessageOptions","user","setUser","useState","group","setGroup","launchReminder","setReminder","FetchApi","e","ms","Date","now","callExtension","about","parseInt","id","isCustom","timeInMS","then","response","console","log","catch","error","excludeMessageOptions","editMessage","deleteMessage","copyMessage","translateMessage","customMessageOptions","iconURL","onClick","optionFor","title","customView","width","height","thumbnail","time","readReceipt"],"sources":["/home/admin1/dev/react/sample-react-guides/src/app/guides/ExcludeMessageOptions/index.js"],"sourcesContent":["import React from \"react\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport {\n  CometChatMessageList,\n  MessageOptionConstants,\n  CometChatPopover,\n} from \"react-ui-kit-testing\";\n\nimport { Hook } from \"./hook\";\n\nimport reminderURL from \"./resources/reminders.svg\";\n\nconst ExcludeMessageOptions = () => {\n  const [user, setUser] = React.useState(null);\n  const [group, setGroup] = React.useState(null);\n  const [launchReminder, setReminder] = React.useState(false);\n\n  const FetchApi = (e) => {\n    setReminder(!launchReminder);\n    if (!launchReminder) {\n      let ms = Date.now();\n      CometChat.callExtension(\"reminders\", \"POST\", \"v1/reminder\", {\n        about: parseInt(e.id),\n        isCustom: false,\n        timeInMS: 1669860928000,\n      })\n        .then((response) => {\n          // Reminder created successfully\n          // Reminder details with reminderId.\n          console.log(\"reminder resp\", response);\n        })\n        .catch((error) => {\n          // Some error occured\n          console.log(\"reminder error\", error);\n        });\n    }\n  };\n\n  const excludeMessageOptions = [\n    // MessageOptionConstants.reactToMessage,\n    MessageOptionConstants.editMessage,\n    MessageOptionConstants.deleteMessage,\n    MessageOptionConstants.copyMessage,\n    MessageOptionConstants.translateMessage,\n  ];\n\n  const customMessageOptions = [\n    // MessageOptionConstants.reactToMessage,\n    // MessageOptionConstants.editMessage,\n    // MessageOptionConstants.deleteMessage,\n    // MessageOptionConstants.copyMessage,\n    // MessageOptionConstants.translateMessage,\n    {\n      iconURL: reminderURL,\n      id: \"RemindToMessage\",\n      onClick: FetchApi,\n      optionFor: null,\n      title: \"Reminder\",\n    },\n  ];\n\n  let customView = (\n    <>\n      <p>Date</p>\n      <input type=\"date\" />\n      <p>Time</p>\n      <input type=\"time\" />\n    </>\n  );\n\n  Hook(setGroup, setUser);\n\n  return user || group ? (\n    <>\n      <CometChatMessageList\n        user={user}\n        style={{ width: \"650px\", height: \"450px\" }}\n        alignment={\"standard\"} //['standard','leftAligned']\n        excludeMessageOptions={excludeMessageOptions}\n        customMessageOptions={customMessageOptions}\n        sentMessageInputData={{\n          thumbnail: false,\n          title: false,\n          time: true,\n          readReceipt: true,\n        }}\n      />\n\n      {launchReminder ? (\n        <CometChatPopover position=\"left\" x=\"750\" y=\"300\">\n          {customView}\n        </CometChatPopover>\n      ) : null}\n    </>\n  ) : null;\n};\n\nexport { ExcludeMessageOptions };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}