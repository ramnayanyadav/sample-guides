{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from \"react\";\nimport { getExtensionsData, MetadataConstants } from \"../../..\";\nexport const Hooks = (props, setWhiteboardURL) => {\n  _s();\n  React.useEffect(() => {\n    var _props$whiteboardURL;\n    if (props !== null && props !== void 0 && props.whiteboardURL && (_props$whiteboardURL = props.whiteboardURL) !== null && _props$whiteboardURL !== void 0 && _props$whiteboardURL.length) {\n      setWhiteboardURL(props === null || props === void 0 ? void 0 : props.whiteboardURL);\n    } else if (props !== null && props !== void 0 && props.messageObject) {\n      var _MetadataConstants$ex;\n      const whiteboardData = getExtensionsData(props === null || props === void 0 ? void 0 : props.messageObject, (_MetadataConstants$ex = MetadataConstants.extensions) === null || _MetadataConstants$ex === void 0 ? void 0 : _MetadataConstants$ex.whiteboard);\n      if (whiteboardData && whiteboardData.board_url && whiteboardData.board_url.trim().length) {\n        var _props$loggedInUser;\n        // Appending the username to the board_url\n        const username = (_props$loggedInUser = props.loggedInUser) === null || _props$loggedInUser === void 0 ? void 0 : _props$loggedInUser.name.split(\" \").join(\"_\");\n        setWhiteboardURL(whiteboardData.board_url + \"&username=\" + username);\n      }\n    }\n  }, [props.whiteboardURL, props.messageObject, props.loggedInUser, setWhiteboardURL]);\n};\n_s(Hooks, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Hooks;\nvar _c;\n$RefreshReg$(_c, \"Hooks\");","map":{"version":3,"names":["React","getExtensionsData","MetadataConstants","Hooks","props","setWhiteboardURL","useEffect","whiteboardURL","length","messageObject","whiteboardData","extensions","whiteboard","board_url","trim","username","loggedInUser","name","split","join"],"sources":["/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/cometchat-pro-react-ui-kit/src/components/Messages/Bubbles/CometChatWhiteboardBubble/hooks.js"],"sourcesContent":["import React from \"react\";\nimport { getExtensionsData, MetadataConstants } from \"../../..\";\n\nexport const Hooks = (props, setWhiteboardURL) => {\n  React.useEffect(() => {\n    if (props?.whiteboardURL && props.whiteboardURL?.length) {\n      setWhiteboardURL(props?.whiteboardURL);\n    } else if (props?.messageObject) {\n      const whiteboardData = getExtensionsData(\n        props?.messageObject,\n        MetadataConstants.extensions?.whiteboard\n      );\n      if (\n        whiteboardData &&\n        whiteboardData.board_url &&\n        whiteboardData.board_url.trim().length\n      ) {\n        // Appending the username to the board_url\n        const username = props.loggedInUser?.name.split(\" \").join(\"_\");\n        setWhiteboardURL(whiteboardData.board_url + \"&username=\" + username);\n      }\n    }\n  }, [\n    props.whiteboardURL,\n    props.messageObject,\n    props.loggedInUser,\n    setWhiteboardURL,\n  ]);\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,iBAAiB,EAAEC,iBAAiB,QAAQ,UAAU;AAE/D,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAK,EAAEC,gBAAgB,KAAK;EAAA;EAChDL,KAAK,CAACM,SAAS,CAAC,MAAM;IAAA;IACpB,IAAIF,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEG,aAAa,4BAAIH,KAAK,CAACG,aAAa,iDAAnB,qBAAqBC,MAAM,EAAE;MACvDH,gBAAgB,CAACD,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEG,aAAa,CAAC;IACxC,CAAC,MAAM,IAAIH,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEK,aAAa,EAAE;MAAA;MAC/B,MAAMC,cAAc,GAAGT,iBAAiB,CACtCG,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEK,aAAa,2BACpBP,iBAAiB,CAACS,UAAU,0DAA5B,sBAA8BC,UAAU,CACzC;MACD,IACEF,cAAc,IACdA,cAAc,CAACG,SAAS,IACxBH,cAAc,CAACG,SAAS,CAACC,IAAI,EAAE,CAACN,MAAM,EACtC;QAAA;QACA;QACA,MAAMO,QAAQ,0BAAGX,KAAK,CAACY,YAAY,wDAAlB,oBAAoBC,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;QAC9Dd,gBAAgB,CAACK,cAAc,CAACG,SAAS,GAAG,YAAY,GAAGE,QAAQ,CAAC;MACtE;IACF;EACF,CAAC,EAAE,CACDX,KAAK,CAACG,aAAa,EACnBH,KAAK,CAACK,aAAa,EACnBL,KAAK,CAACY,YAAY,EAClBX,gBAAgB,CACjB,CAAC;AACJ,CAAC;AAAC,GAzBWF,KAAK;AAAA,KAALA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}