{"ast":null,"code":"var _jsxFileName = \"/home/admin1/dev/react/sample-react-guides/src/app/guides/ExcludeMessageTypes/index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { CometChatMessages, MessageTypeConstants, CometChatMessageTemplate, CometChatConversationsWithMessages } from \"@cometchat-pro/react-ui-kit\";\nimport { Hook } from \"./hook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExcludeMessageTypes = () => {\n  _s();\n  const [user, setUser] = React.useState(null);\n  const [group, setGroup] = React.useState(null);\n  const _excludeMessageTypes = [MessageTypeConstants.text, MessageTypeConstants.image, MessageTypeConstants.file, MessageTypeConstants.poll, MessageTypeConstants.sticker, MessageTypeConstants.document];\n  const messageConfig = {\n    sentMessageInputData: {\n      thumbnail: false,\n      title: false,\n      time: true,\n      readReceipt: true\n    },\n    receivedMessageInputData: {\n      thumbnail: true,\n      title: true,\n      time: true,\n      readReceipt: false\n    },\n    excludeMessageType: [MessageTypeConstants.text, MessageTypeConstants.image, MessageTypeConstants.file, MessageTypeConstants.poll, MessageTypeConstants.sticker, MessageTypeConstants.document]\n  };\n  let messageTypes = CometChatMessageTemplate.getDefaultTypes();\n  let paymentTemplate = new CometChatMessageTemplate({\n    type: \"payment\",\n    icon: \"assets/credit-card.png\",\n    name: \"Payment\",\n    customView: this.customView,\n    actionCallback: this.openPaymentTab\n  });\n  messageTypes.push(paymentTemplate);\n  console.log(messageTypes);\n  Hook(setGroup, setUser);\n  return user || group ? /*#__PURE__*/_jsxDEV(CometChatConversationsWithMessages, {\n    user: user,\n    group: group,\n    alignment: \"standard\" //['standard','leftAligned']\n    ,\n    s: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this) : null;\n};\n_s(ExcludeMessageTypes, \"lIWPwmJ+Y71mP+ObNWWLzPI7vqg=\");\n_c = ExcludeMessageTypes;\nexport { ExcludeMessageTypes };\nvar _c;\n$RefreshReg$(_c, \"ExcludeMessageTypes\");","map":{"version":3,"names":["React","CometChatMessages","MessageTypeConstants","CometChatMessageTemplate","CometChatConversationsWithMessages","Hook","ExcludeMessageTypes","user","setUser","useState","group","setGroup","_excludeMessageTypes","text","image","file","poll","sticker","document","messageConfig","sentMessageInputData","thumbnail","title","time","readReceipt","receivedMessageInputData","excludeMessageType","messageTypes","getDefaultTypes","paymentTemplate","type","icon","name","customView","actionCallback","openPaymentTab","push","console","log"],"sources":["/home/admin1/dev/react/sample-react-guides/src/app/guides/ExcludeMessageTypes/index.js"],"sourcesContent":["import React from \"react\";\nimport {\n  CometChatMessages,\n  MessageTypeConstants,\n  CometChatMessageTemplate,\n  CometChatConversationsWithMessages,\n} from \"@cometchat-pro/react-ui-kit\";\n\nimport { Hook } from \"./hook\";\n\nconst ExcludeMessageTypes = () => {\n  const [user, setUser] = React.useState(null);\n  const [group, setGroup] = React.useState(null);\n\n  const _excludeMessageTypes = [\n    MessageTypeConstants.text,\n    MessageTypeConstants.image,\n    MessageTypeConstants.file,\n    MessageTypeConstants.poll,\n    MessageTypeConstants.sticker,\n    MessageTypeConstants.document,\n  ];\n\n  const messageConfig = {\n    sentMessageInputData: {\n      thumbnail: false,\n      title: false,\n      time: true,\n      readReceipt: true,\n    },\n    receivedMessageInputData: {\n      thumbnail: true,\n      title: true,\n      time: true,\n      readReceipt: false,\n    },\n    excludeMessageType: [\n      MessageTypeConstants.text,\n      MessageTypeConstants.image,\n      MessageTypeConstants.file,\n      MessageTypeConstants.poll,\n      MessageTypeConstants.sticker,\n      MessageTypeConstants.document,\n    ],\n  };\n\n  let messageTypes = CometChatMessageTemplate.getDefaultTypes();\n  let paymentTemplate = new CometChatMessageTemplate({\n    type: \"payment\",\n    icon: \"assets/credit-card.png\",\n    name: \"Payment\",\n    customView: this.customView,\n    actionCallback: this.openPaymentTab,\n  });\n  messageTypes.push(paymentTemplate);\n  console.log(messageTypes);\n  Hook(setGroup, setUser);\n  return user || group ? (\n    <CometChatConversationsWithMessages\n      user={user}\n      group={group}\n      alignment={\"standard\"} //['standard','leftAligned']\n      s\n    />\n  ) : null;\n};\n\nexport { ExcludeMessageTypes };\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,iBAAiB,EACjBC,oBAAoB,EACpBC,wBAAwB,EACxBC,kCAAkC,QAC7B,6BAA6B;AAEpC,SAASC,IAAI,QAAQ,QAAQ;AAAC;AAE9B,MAAMC,mBAAmB,GAAG,MAAM;EAAA;EAChC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,KAAK,CAACS,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,KAAK,CAACS,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMG,oBAAoB,GAAG,CAC3BV,oBAAoB,CAACW,IAAI,EACzBX,oBAAoB,CAACY,KAAK,EAC1BZ,oBAAoB,CAACa,IAAI,EACzBb,oBAAoB,CAACc,IAAI,EACzBd,oBAAoB,CAACe,OAAO,EAC5Bf,oBAAoB,CAACgB,QAAQ,CAC9B;EAED,MAAMC,aAAa,GAAG;IACpBC,oBAAoB,EAAE;MACpBC,SAAS,EAAE,KAAK;MAChBC,KAAK,EAAE,KAAK;MACZC,IAAI,EAAE,IAAI;MACVC,WAAW,EAAE;IACf,CAAC;IACDC,wBAAwB,EAAE;MACxBJ,SAAS,EAAE,IAAI;MACfC,KAAK,EAAE,IAAI;MACXC,IAAI,EAAE,IAAI;MACVC,WAAW,EAAE;IACf,CAAC;IACDE,kBAAkB,EAAE,CAClBxB,oBAAoB,CAACW,IAAI,EACzBX,oBAAoB,CAACY,KAAK,EAC1BZ,oBAAoB,CAACa,IAAI,EACzBb,oBAAoB,CAACc,IAAI,EACzBd,oBAAoB,CAACe,OAAO,EAC5Bf,oBAAoB,CAACgB,QAAQ;EAEjC,CAAC;EAED,IAAIS,YAAY,GAAGxB,wBAAwB,CAACyB,eAAe,EAAE;EAC7D,IAAIC,eAAe,GAAG,IAAI1B,wBAAwB,CAAC;IACjD2B,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE,wBAAwB;IAC9BC,IAAI,EAAE,SAAS;IACfC,UAAU,EAAE,IAAI,CAACA,UAAU;IAC3BC,cAAc,EAAE,IAAI,CAACC;EACvB,CAAC,CAAC;EACFR,YAAY,CAACS,IAAI,CAACP,eAAe,CAAC;EAClCQ,OAAO,CAACC,GAAG,CAACX,YAAY,CAAC;EACzBtB,IAAI,CAACM,QAAQ,EAAEH,OAAO,CAAC;EACvB,OAAOD,IAAI,IAAIG,KAAK,gBAClB,QAAC,kCAAkC;IACjC,IAAI,EAAEH,IAAK;IACX,KAAK,EAAEG,KAAM;IACb,SAAS,EAAE,UAAW,CAAC;IAAA;IACvB,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACD,GACA,IAAI;AACV,CAAC;AAAC,GAvDIJ,mBAAmB;AAAA,KAAnBA,mBAAmB;AAyDzB,SAASA,mBAAmB;AAAG;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}