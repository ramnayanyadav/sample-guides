{"ast":null,"code":"import { BaseStyles } from \"../../Base/BaseStyles\";\n\n/**\n * @class ConversationListItemStyles\n * @description ConversationListItemStyles class is used for defining the styles for conversation list item.\n * @param {String} width\n * @param {String} height\n * @param {String} background\n * @param {String} activeBackground\n * @param {String} border\n * @param {String} borderRadius\n * @param {String} titleColor\n * @param {String} titleFont\n * @param {String} subtitleColor\n * @param {String} subtitleFont\n * @param {String} typingIndicatorTextColor\n * @param {String} typingIndicatorTextFont\n * @param {String} threadIndicatorTextColor\n * @param {String} threadIndicatorTextFont\n */\n\nclass ConversationListItemStyles extends BaseStyles {\n  constructor(_ref) {\n    let {\n      width = \"280px\",\n      height = \"100%\",\n      background = \"\",\n      activeBackground = \"\",\n      border = \"\",\n      borderRadius = \"50%\",\n      titleColor = \"\",\n      titleFont = \"\",\n      subtitleColor = \"\",\n      subtitleFont = \"\",\n      typingIndicatorTextColor = \"\",\n      typingIndicatorTextFont = \"\",\n      threadIndicatorTextColor = \"\",\n      threadIndicatorTextFont = \"\"\n    } = _ref;\n    super({\n      width,\n      height,\n      background,\n      activeBackground,\n      border,\n      borderRadius\n    });\n    this.titleColor = titleColor;\n    this.titleFont = titleFont;\n    this.subtitleColor = subtitleColor;\n    this.subtitleFont = subtitleFont;\n    this.typingIndicatorTextColor = typingIndicatorTextColor;\n    this.typingIndicatorTextFont = typingIndicatorTextFont;\n    this.threadIndicatorTextColor = threadIndicatorTextColor;\n    this.threadIndicatorTextFont = threadIndicatorTextFont;\n  }\n}\nexport { ConversationListItemStyles };","map":{"version":3,"names":["BaseStyles","ConversationListItemStyles","constructor","width","height","background","activeBackground","border","borderRadius","titleColor","titleFont","subtitleColor","subtitleFont","typingIndicatorTextColor","typingIndicatorTextFont","threadIndicatorTextColor","threadIndicatorTextFont"],"sources":["/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/cometchat-pro-react-ui-kit/src/components/Shared/SDKDerivedComponents/CometChatConversationListItem/ConversationListItemStyles.js"],"sourcesContent":["import { BaseStyles } from \"../../Base/BaseStyles\";\n\n/**\n * @class ConversationListItemStyles\n * @description ConversationListItemStyles class is used for defining the styles for conversation list item.\n * @param {String} width\n * @param {String} height\n * @param {String} background\n * @param {String} activeBackground\n * @param {String} border\n * @param {String} borderRadius\n * @param {String} titleColor\n * @param {String} titleFont\n * @param {String} subtitleColor\n * @param {String} subtitleFont\n * @param {String} typingIndicatorTextColor\n * @param {String} typingIndicatorTextFont\n * @param {String} threadIndicatorTextColor\n * @param {String} threadIndicatorTextFont\n */\n\nclass ConversationListItemStyles extends BaseStyles {\n  constructor({\n    width = \"280px\",\n    height = \"100%\",\n    background = \"\",\n    activeBackground = \"\",\n    border = \"\",\n    borderRadius = \"50%\",\n\n    titleColor = \"\",\n    titleFont = \"\",\n    subtitleColor = \"\",\n    subtitleFont = \"\",\n    typingIndicatorTextColor = \"\",\n    typingIndicatorTextFont = \"\",\n    threadIndicatorTextColor = \"\",\n    threadIndicatorTextFont = \"\",\n  }) {\n    super({\n      width,\n      height,\n      background,\n      activeBackground,\n      border,\n      borderRadius,\n    });\n\n    this.titleColor = titleColor;\n    this.titleFont = titleFont;\n    this.subtitleColor = subtitleColor;\n    this.subtitleFont = subtitleFont;\n    this.typingIndicatorTextColor = typingIndicatorTextColor;\n    this.typingIndicatorTextFont = typingIndicatorTextFont;\n    this.threadIndicatorTextColor = threadIndicatorTextColor;\n    this.threadIndicatorTextFont = threadIndicatorTextFont;\n  }\n}\nexport { ConversationListItemStyles };\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,uBAAuB;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,0BAA0B,SAASD,UAAU,CAAC;EAClDE,WAAW,OAgBR;IAAA,IAhBS;MACVC,KAAK,GAAG,OAAO;MACfC,MAAM,GAAG,MAAM;MACfC,UAAU,GAAG,EAAE;MACfC,gBAAgB,GAAG,EAAE;MACrBC,MAAM,GAAG,EAAE;MACXC,YAAY,GAAG,KAAK;MAEpBC,UAAU,GAAG,EAAE;MACfC,SAAS,GAAG,EAAE;MACdC,aAAa,GAAG,EAAE;MAClBC,YAAY,GAAG,EAAE;MACjBC,wBAAwB,GAAG,EAAE;MAC7BC,uBAAuB,GAAG,EAAE;MAC5BC,wBAAwB,GAAG,EAAE;MAC7BC,uBAAuB,GAAG;IAC5B,CAAC;IACC,KAAK,CAAC;MACJb,KAAK;MACLC,MAAM;MACNC,UAAU;MACVC,gBAAgB;MAChBC,MAAM;MACNC;IACF,CAAC,CAAC;IAEF,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACC,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,wBAAwB,GAAGA,wBAAwB;IACxD,IAAI,CAACC,uBAAuB,GAAGA,uBAAuB;IACtD,IAAI,CAACC,wBAAwB,GAAGA,wBAAwB;IACxD,IAAI,CAACC,uBAAuB,GAAGA,uBAAuB;EACxD;AACF;AACA,SAASf,0BAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}