{"ast":null,"code":"var _jsxFileName = \"/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/cometchat-pro-react-ui-kit/src/components/Messages/Bubbles/CometChatTextBubble/index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { emailPattern, urlPattern, phoneNumPattern } from \"../../CometChatMessageConstants\";\nimport { getExtensionsData, ExtensionConstants, CometChatTheme } from \"../../..\";\nimport { messageTextBubbleStyle, messageKitTextBubbleBlockStyle, /** link previw styles*/\nmessagePreviewContainerStyle, messagePreviewWrapperStyle, previewImageStyle, previewDataStyle, previewTitleStyle, previewLinkStyle, linkSubtitleStyle } from \"./style\";\nimport { Hooks } from \"./hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CometChatTextBubble = props => {\n  _s();\n  const [linkPreviewData, setLinkPreview] = React.useState();\n  const theme = props.theme ? new CometChatTheme(props === null || props === void 0 ? void 0 : props.theme) : new CometChatTheme({});\n  const linkify = messageText => {\n    var _outputStr, _outputStr2;\n    let outputStr = messageText === null || messageText === void 0 ? void 0 : messageText.replace(phoneNumPattern, \"<a target='blank' rel='noopener noreferrer' href='tel:$&'>$&</a>\");\n    outputStr = (_outputStr = outputStr) === null || _outputStr === void 0 ? void 0 : _outputStr.replace(emailPattern, \"<a target='blank' rel='noopener noreferrer' href='mailto:$&'>$&</a>\");\n    const results = (_outputStr2 = outputStr) === null || _outputStr2 === void 0 ? void 0 : _outputStr2.match(urlPattern);\n    results && (results === null || results === void 0 ? void 0 : results.forEach(url => {\n      url = url.trim();\n      let normalizedURL = url;\n      if (!url.startsWith(\"http\")) {\n        normalizedURL = `//${url}`;\n      }\n      outputStr = outputStr.replace(url, `<a target='blank' rel='noopener noreferrer' href=\"${normalizedURL}\">${url}</a>`);\n    }));\n    return outputStr;\n  };\n  function linkPreviewHandler(preview) {\n    const linkObject = preview[\"links\"][0];\n    const linkText = linkObject[\"url\"];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: messagePreviewContainerStyle(props, theme),\n      className: \"message__preview\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: messagePreviewWrapperStyle(),\n        className: \"preview__card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: previewImageStyle(linkObject[\"image\"]),\n          className: \"card__image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: previewDataStyle(),\n          className: \"card__info\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: previewTitleStyle(props, theme),\n            className: \"card__title\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: linkObject[\"title\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: previewLinkStyle(),\n          className: \"card__link\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: linkObject[\"url\"],\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            style: linkSubtitleStyle(props, theme),\n            children: linkText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n  Hooks(props, setLinkPreview);\n  const getMessageText = () => {\n    var _props$messageObject;\n    if (linkPreviewData && linkPreviewData !== null && linkPreviewData !== void 0 && linkPreviewData.links[0]) {\n      return linkPreviewHandler(linkPreviewData);\n    }\n    let messageText;\n    if (props.text && props.text.length) {\n      messageText = props.text;\n    }\n    if (props !== null && props !== void 0 && props.messageObject && props !== null && props !== void 0 && (_props$messageObject = props.messageObject) !== null && _props$messageObject !== void 0 && _props$messageObject.text) {\n      var _props$messageObject2;\n      messageText = props === null || props === void 0 ? void 0 : (_props$messageObject2 = props.messageObject) === null || _props$messageObject2 === void 0 ? void 0 : _props$messageObject2.text;\n\n      //xss extensions data\n      const xssData = getExtensionsData(props.messageObject, ExtensionConstants.xssFilter);\n      if (xssData && xssData.hasOwnProperty(ExtensionConstants.sanitizedText) && xssData.hasOwnProperty(ExtensionConstants.hasXSS) && xssData.hasXSS === \"yes\") {\n        messageText = xssData.sanitized_text;\n      }\n\n      //datamasking extensions data\n      const maskedData = getExtensionsData(props.messageObject, ExtensionConstants.dataMasking);\n      if (maskedData && maskedData.hasOwnProperty(\"data\") && maskedData.data.hasOwnProperty(ExtensionConstants.sensitiveData) && maskedData.data.hasOwnProperty(ExtensionConstants.messageMasked) && maskedData.data.sensitive_data === \"yes\") {\n        messageText = maskedData.data.message_masked;\n      }\n\n      //profanity extensions data\n      const profaneData = getExtensionsData(props.messageObject, ExtensionConstants.profanityFilter);\n      if (profaneData && profaneData.hasOwnProperty(ExtensionConstants.profanity) && profaneData.hasOwnProperty(ExtensionConstants.messageClean) && profaneData.profanity === \"yes\") {\n        messageText = profaneData.message_clean;\n      }\n    }\n    const formatedText = linkify(messageText);\n    const parseText = () => /*#__PURE__*/_jsxDEV(\"span\", {\n      dangerouslySetInnerHTML: {\n        __html: formatedText\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: messageKitTextBubbleBlockStyle(props, theme),\n      className: \"message_kit__blocks\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message__message-blocks\",\n        style: messageTextBubbleStyle(props, theme, parseText()),\n        children: parseText()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this);\n  };\n  return getMessageText();\n};\n_s(CometChatTextBubble, \"NYcTZS6A5MdQDFF0mbuhgtchOiQ=\");\n_c = CometChatTextBubble;\nCometChatTextBubble.defaultProps = {\n  messageObject: null,\n  text: \"\",\n  linkPreviewTitle: \"\",\n  linkPreviewSubtitle: \"\",\n  style: {\n    width: \"\",\n    height: \"\",\n    border: \"0 none\",\n    background: \"rgb(255,255,255)\",\n    borderRadius: \"8px\",\n    textFont: \"\",\n    textColor: \"\",\n    linkPreviewTitleFont: \"\",\n    linkPreviewTitleColor: \"\",\n    linkPreviewSubtitleFont: \"\",\n    linkPreviewSubtitleColor: \"\",\n    linkPreviewBackgroundColor: \"\"\n  }\n};\nCometChatTextBubble.propTypes = {\n  messageObject: PropTypes.object,\n  text: PropTypes.string,\n  linkPreviewTitle: PropTypes.string,\n  linkPreviewSubtitle: PropTypes.string,\n  style: PropTypes.object\n};\nexport { CometChatTextBubble };\nvar _c;\n$RefreshReg$(_c, \"CometChatTextBubble\");","map":{"version":3,"names":["React","PropTypes","emailPattern","urlPattern","phoneNumPattern","getExtensionsData","ExtensionConstants","CometChatTheme","messageTextBubbleStyle","messageKitTextBubbleBlockStyle","messagePreviewContainerStyle","messagePreviewWrapperStyle","previewImageStyle","previewDataStyle","previewTitleStyle","previewLinkStyle","linkSubtitleStyle","Hooks","CometChatTextBubble","props","linkPreviewData","setLinkPreview","useState","theme","linkify","messageText","outputStr","replace","results","match","forEach","url","trim","normalizedURL","startsWith","linkPreviewHandler","preview","linkObject","linkText","getMessageText","links","text","length","messageObject","xssData","xssFilter","hasOwnProperty","sanitizedText","hasXSS","sanitized_text","maskedData","dataMasking","data","sensitiveData","messageMasked","sensitive_data","message_masked","profaneData","profanityFilter","profanity","messageClean","message_clean","formatedText","parseText","__html","defaultProps","linkPreviewTitle","linkPreviewSubtitle","style","width","height","border","background","borderRadius","textFont","textColor","linkPreviewTitleFont","linkPreviewTitleColor","linkPreviewSubtitleFont","linkPreviewSubtitleColor","linkPreviewBackgroundColor","propTypes","object","string"],"sources":["/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/cometchat-pro-react-ui-kit/src/components/Messages/Bubbles/CometChatTextBubble/index.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  emailPattern,\n  urlPattern,\n  phoneNumPattern,\n} from \"../../CometChatMessageConstants\";\nimport {\n  getExtensionsData,\n  ExtensionConstants,\n  CometChatTheme,\n} from \"../../..\";\nimport {\n  messageTextBubbleStyle,\n  messageKitTextBubbleBlockStyle,\n  /** link previw styles*/\n  messagePreviewContainerStyle,\n  messagePreviewWrapperStyle,\n  previewImageStyle,\n  previewDataStyle,\n  previewTitleStyle,\n  previewLinkStyle,\n  linkSubtitleStyle,\n} from \"./style\";\nimport { Hooks } from \"./hooks\";\n\nconst CometChatTextBubble = (props) => {\n  const [linkPreviewData, setLinkPreview] = React.useState();\n\n  const theme = props.theme\n    ? new CometChatTheme(props?.theme)\n    : new CometChatTheme({});\n\n  const linkify = (messageText) => {\n    let outputStr = messageText?.replace(\n      phoneNumPattern,\n      \"<a target='blank' rel='noopener noreferrer' href='tel:$&'>$&</a>\"\n    );\n    outputStr = outputStr?.replace(\n      emailPattern,\n      \"<a target='blank' rel='noopener noreferrer' href='mailto:$&'>$&</a>\"\n    );\n\n    const results = outputStr?.match(urlPattern);\n\n    results &&\n      results?.forEach((url) => {\n        url = url.trim();\n        let normalizedURL = url;\n        if (!url.startsWith(\"http\")) {\n          normalizedURL = `//${url}`;\n        }\n        outputStr = outputStr.replace(\n          url,\n          `<a target='blank' rel='noopener noreferrer' href=\"${normalizedURL}\">${url}</a>`\n        );\n      });\n\n    return outputStr;\n  };\n\n  function linkPreviewHandler(preview) {\n    const linkObject = preview[\"links\"][0];\n\n    const linkText = linkObject[\"url\"];\n\n    return (\n      <div\n        style={messagePreviewContainerStyle(props, theme)}\n        className=\"message__preview\"\n      >\n        <div style={messagePreviewWrapperStyle()} className=\"preview__card\">\n          <div\n            style={previewImageStyle(linkObject[\"image\"])}\n            className=\"card__image\"\n          ></div>\n          <div style={previewDataStyle()} className=\"card__info\">\n            <div\n              style={previewTitleStyle(props, theme)}\n              className=\"card__title\"\n            >\n              <span>{linkObject[\"title\"]}</span>\n            </div>\n          </div>\n          <div style={previewLinkStyle()} className=\"card__link\">\n            <a\n              href={linkObject[\"url\"]}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              style={linkSubtitleStyle(props, theme)}\n            >\n              {linkText}\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  Hooks(props, setLinkPreview);\n\n  const getMessageText = () => {\n    if (linkPreviewData && linkPreviewData?.links[0]) {\n      return linkPreviewHandler(linkPreviewData);\n    }\n\n    let messageText;\n    if (props.text && props.text.length) {\n      messageText = props.text;\n    }\n    if (props?.messageObject && props?.messageObject?.text) {\n      messageText = props?.messageObject?.text;\n\n      //xss extensions data\n      const xssData = getExtensionsData(\n        props.messageObject,\n        ExtensionConstants.xssFilter\n      );\n      if (\n        xssData &&\n        xssData.hasOwnProperty(ExtensionConstants.sanitizedText) &&\n        xssData.hasOwnProperty(ExtensionConstants.hasXSS) &&\n        xssData.hasXSS === \"yes\"\n      ) {\n        messageText = xssData.sanitized_text;\n      }\n\n      //datamasking extensions data\n      const maskedData = getExtensionsData(\n        props.messageObject,\n        ExtensionConstants.dataMasking\n      );\n      if (\n        maskedData &&\n        maskedData.hasOwnProperty(\"data\") &&\n        maskedData.data.hasOwnProperty(ExtensionConstants.sensitiveData) &&\n        maskedData.data.hasOwnProperty(ExtensionConstants.messageMasked) &&\n        maskedData.data.sensitive_data === \"yes\"\n      ) {\n        messageText = maskedData.data.message_masked;\n      }\n\n      //profanity extensions data\n      const profaneData = getExtensionsData(\n        props.messageObject,\n        ExtensionConstants.profanityFilter\n      );\n      if (\n        profaneData &&\n        profaneData.hasOwnProperty(ExtensionConstants.profanity) &&\n        profaneData.hasOwnProperty(ExtensionConstants.messageClean) &&\n        profaneData.profanity === \"yes\"\n      ) {\n        messageText = profaneData.message_clean;\n      }\n    }\n\n    const formatedText = linkify(messageText);\n    const parseText = () => (\n      <span dangerouslySetInnerHTML={{ __html: formatedText }} />\n    );\n\n    return (\n      <div\n        style={messageKitTextBubbleBlockStyle(props, theme)}\n        className=\"message_kit__blocks\"\n      >\n        <p\n          className=\"message__message-blocks\"\n          style={messageTextBubbleStyle(props, theme, parseText())}\n        >\n          {parseText()}\n        </p>\n      </div>\n    );\n  };\n\n  return getMessageText();\n};\n\nCometChatTextBubble.defaultProps = {\n  messageObject: null,\n  text: \"\",\n  linkPreviewTitle: \"\",\n  linkPreviewSubtitle: \"\",\n  style: {\n    width: \"\",\n    height: \"\",\n    border: \"0 none\",\n    background: \"rgb(255,255,255)\",\n    borderRadius: \"8px\",\n    textFont: \"\",\n    textColor: \"\",\n    linkPreviewTitleFont: \"\",\n    linkPreviewTitleColor: \"\",\n    linkPreviewSubtitleFont: \"\",\n    linkPreviewSubtitleColor: \"\",\n    linkPreviewBackgroundColor: \"\",\n  },\n};\n\nCometChatTextBubble.propTypes = {\n  messageObject: PropTypes.object,\n  text: PropTypes.string,\n  linkPreviewTitle: PropTypes.string,\n  linkPreviewSubtitle: PropTypes.string,\n  style: PropTypes.object,\n};\n\nexport { CometChatTextBubble };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}