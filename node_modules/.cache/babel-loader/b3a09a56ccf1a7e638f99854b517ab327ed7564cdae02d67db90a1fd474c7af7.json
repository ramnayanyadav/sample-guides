{"ast":null,"code":"var _jsxFileName = \"/home/admin1/dev/react/sample-react-guides/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { COMETCHAT_CONSTANTS } from \"./CONSTANTS\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar appID = COMETCHAT_CONSTANTS.APP_ID;\nvar region = COMETCHAT_CONSTANTS.REGION;\nvar appSetting = new CometChat.AppSettingsBuilder().subscribePresenceForAllUsers().setRegion(region).build();\nCometChat.init(appID, appSetting).then(() => {\n  let user = \"superhero3\";\n  if (user && user != \" \") {\n    var UID = user;\n    var authKey = COMETCHAT_CONSTANTS.AUTH_KEY;\n    // CometChat.logout().then(\n    //   () => {\n    //     console.log(\"Logout completed successfully\");\n    //   },\n    //   (error) => {\n    //     console.log(\"Logout failed with exception:\", { error });\n    //   }\n    // );\n    CometChat.getLoggedinUser().then(user => {\n      if (!user) {\n        CometChat.login(UID, authKey).then(user => {\n          console.log(\"Login Successful:\", {\n            user\n          });\n        }, error => {\n          console.log(\"Login failed with exception:\", {\n            error\n          });\n        });\n      }\n    }, error => {\n      console.log(\"Some Error Occured\", {\n        error\n      });\n    });\n  }\n  const root = ReactDOM.createRoot(document.getElementById(\"root\"));\n  root.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this));\n}, error => {\n  console.log(\"Initialization failed with error:\", error);\n  // Check the reason for error and take appropriate action.\n});\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","COMETCHAT_CONSTANTS","CometChat","appID","APP_ID","region","REGION","appSetting","AppSettingsBuilder","subscribePresenceForAllUsers","setRegion","build","init","then","user","UID","authKey","AUTH_KEY","getLoggedinUser","login","console","log","error","root","createRoot","document","getElementById","render"],"sources":["/home/admin1/dev/react/sample-react-guides/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { COMETCHAT_CONSTANTS } from \"./CONSTANTS\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nvar appID = COMETCHAT_CONSTANTS.APP_ID;\nvar region = COMETCHAT_CONSTANTS.REGION;\n\nvar appSetting = new CometChat.AppSettingsBuilder()\n  .subscribePresenceForAllUsers()\n  .setRegion(region)\n  .build();\nCometChat.init(appID, appSetting).then(\n  () => {\n    let user = \"superhero3\";\n    if (user && user != \" \") {\n      var UID = user;\n      var authKey = COMETCHAT_CONSTANTS.AUTH_KEY;\n      // CometChat.logout().then(\n      //   () => {\n      //     console.log(\"Logout completed successfully\");\n      //   },\n      //   (error) => {\n      //     console.log(\"Logout failed with exception:\", { error });\n      //   }\n      // );\n      CometChat.getLoggedinUser().then(\n        (user) => {\n          if (!user) {\n            CometChat.login(UID, authKey).then(\n              (user) => {\n                console.log(\"Login Successful:\", { user });\n              },\n              (error) => {\n                console.log(\"Login failed with exception:\", { error });\n              }\n            );\n          }\n        },\n        (error) => {\n          console.log(\"Some Error Occured\", { error });\n        }\n      );\n    }\n\n    const root = ReactDOM.createRoot(document.getElementById(\"root\"));\n    root.render(\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    );\n  },\n\n  (error) => {\n    console.log(\"Initialization failed with error:\", error);\n    // Check the reason for error and take appropriate action.\n  }\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,mBAAmB,QAAQ,aAAa;AACjD,SAASC,SAAS,QAAQ,qBAAqB;AAAC;AAEhD,IAAIC,KAAK,GAAGF,mBAAmB,CAACG,MAAM;AACtC,IAAIC,MAAM,GAAGJ,mBAAmB,CAACK,MAAM;AAEvC,IAAIC,UAAU,GAAG,IAAIL,SAAS,CAACM,kBAAkB,EAAE,CAChDC,4BAA4B,EAAE,CAC9BC,SAAS,CAACL,MAAM,CAAC,CACjBM,KAAK,EAAE;AACVT,SAAS,CAACU,IAAI,CAACT,KAAK,EAAEI,UAAU,CAAC,CAACM,IAAI,CACpC,MAAM;EACJ,IAAIC,IAAI,GAAG,YAAY;EACvB,IAAIA,IAAI,IAAIA,IAAI,IAAI,GAAG,EAAE;IACvB,IAAIC,GAAG,GAAGD,IAAI;IACd,IAAIE,OAAO,GAAGf,mBAAmB,CAACgB,QAAQ;IAC1C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAf,SAAS,CAACgB,eAAe,EAAE,CAACL,IAAI,CAC7BC,IAAI,IAAK;MACR,IAAI,CAACA,IAAI,EAAE;QACTZ,SAAS,CAACiB,KAAK,CAACJ,GAAG,EAAEC,OAAO,CAAC,CAACH,IAAI,CAC/BC,IAAI,IAAK;UACRM,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE;YAAEP;UAAK,CAAC,CAAC;QAC5C,CAAC,EACAQ,KAAK,IAAK;UACTF,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAE;YAAEC;UAAM,CAAC,CAAC;QACxD,CAAC,CACF;MACH;IACF,CAAC,EACAA,KAAK,IAAK;MACTF,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE;QAAEC;MAAM,CAAC,CAAC;IAC9C,CAAC,CACF;EACH;EAEA,MAAMC,IAAI,GAAGzB,QAAQ,CAAC0B,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;EACjEH,IAAI,CAACI,MAAM,eACT,QAAC,KAAK,CAAC,UAAU;IAAA,uBACf,QAAC,GAAG;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QACU,CACpB;AACH,CAAC,EAEAL,KAAK,IAAK;EACTF,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEC,KAAK,CAAC;EACvD;AACF,CAAC,CACF;AACD;AACA;AACA;AACAtB,eAAe,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}