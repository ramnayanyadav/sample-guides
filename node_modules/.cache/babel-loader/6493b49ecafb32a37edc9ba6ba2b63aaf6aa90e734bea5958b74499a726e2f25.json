{"ast":null,"code":"import roundedPlus from \"./resources/add-circle-filled.svg\";\nimport insertEmoticon from \"./resources/emoji.svg\";\nimport sendBtn from \"./resources/send-message.svg\";\nimport closeButton from \"./resources/close-circle.svg\";\nimport { MessageComposerStyles } from \"../\";\nimport { MessagePreviewConfiguration } from \"../CometChatMessagePreview/MessagePreviewConfiguration\";\nimport { EmojiKeyboardConfiguration } from \"../CometChatEmojiKeyboard/EmojiKeyboardConfiguration\";\nimport { CreatePollConfiguration } from \"../CometChatCreatePoll/CreatePollConfiguration\";\nimport { StickerKeyboardConfiguration } from \"../CometChatStickerKeyboard/StickerKeyboardConfiguration\";\nimport { ActionSheetConfiguration } from \"../../Shared\";\n\n/**\n * @class MessageComposerConfiguration\n * @description MessageComposerConfiguration class is used for defining the MessageComposer templates.\n * @param {String} sendButtonIconURL\n * @param {String} attachmentIconURL\n * @param {String} stickerIconURL\n * @param {String} stickerCloseIconURL\n * @param {String} emojiIconURL\n * @param {String} customOutgoingMessageSound\n * @param {Boolean} hideAttachment\n * @param {Boolean} hideLiveReaction\n * @param {Boolean} hideEmoji\n * @param {Boolean} showSendButton\n * @param {Boolean} enableSoundForMsg\n * @param {Boolean} enableTyping\n * @param {Function} onSendButtonClick\n * @param {Array} messageTypes\n * @param {Array} excludeMessageTypes\n * @param {Object} style\n */\n\nclass MessageComposerConfiguration {\n  constructor(_ref) {\n    let {\n      hideAttachment = false,\n      attachmentIconURL = roundedPlus,\n      stickerCloseIconURL = closeButton,\n      hideLiveReaction = false,\n      hideEmoji = false,\n      emojiIconURL = insertEmoticon,\n      showSendButton = true,\n      sendButtonIconURL = sendBtn,\n      onSendButtonClick = null,\n      messageTypes = null,\n      excludeMessageTypes = null,\n      enableTypingIndicator = true,\n      enableSoundForMessages = true,\n      customOutgoingMessageSound = null,\n      style = new MessageComposerStyles({}),\n      messagePreviewConfiguration = new MessagePreviewConfiguration({}),\n      emojiKeyboardConfiguration = new EmojiKeyboardConfiguration({}),\n      stickerKeyboardConfiguration = new StickerKeyboardConfiguration({}),\n      createPollConfiguration = new CreatePollConfiguration({}),\n      actionSheetConfiguration = new ActionSheetConfiguration({})\n    } = _ref;\n    this.sendButtonIconURL = sendButtonIconURL;\n    this.attachmentIconURL = attachmentIconURL;\n    this.stickerCloseIconURL = stickerCloseIconURL;\n    this.hideAttachment = hideAttachment;\n    this.hideLiveReaction = hideLiveReaction;\n    this.hideEmoji = hideEmoji;\n    this.emojiIconURL = emojiIconURL;\n    this.showSendButton = showSendButton;\n    this.onSendButtonClick = onSendButtonClick;\n    this.messageTypes = messageTypes;\n    this.customOutgoingMessageSound = customOutgoingMessageSound;\n    this.enableSoundForMessages = enableSoundForMessages;\n    this.enableTypingIndicator = enableTypingIndicator;\n    this.excludeMessageTypes = excludeMessageTypes;\n    this.style = new MessageComposerStyles(style !== null && style !== void 0 ? style : {});\n    this.messagePreviewConfiguration = new MessagePreviewConfiguration(messagePreviewConfiguration !== null && messagePreviewConfiguration !== void 0 ? messagePreviewConfiguration : {});\n    this.emojiKeyboardConfiguration = new EmojiKeyboardConfiguration(emojiKeyboardConfiguration !== null && emojiKeyboardConfiguration !== void 0 ? emojiKeyboardConfiguration : {});\n    this.stickerKeyboardConfiguration = new StickerKeyboardConfiguration(stickerKeyboardConfiguration !== null && stickerKeyboardConfiguration !== void 0 ? stickerKeyboardConfiguration : {});\n    this.createPollConfiguration = new CreatePollConfiguration(createPollConfiguration !== null && createPollConfiguration !== void 0 ? createPollConfiguration : {});\n    this.actionSheetConfiguration = new ActionSheetConfiguration(actionSheetConfiguration !== null && actionSheetConfiguration !== void 0 ? actionSheetConfiguration : {});\n  }\n}\nexport { MessageComposerConfiguration };","map":{"version":3,"names":["roundedPlus","insertEmoticon","sendBtn","closeButton","MessageComposerStyles","MessagePreviewConfiguration","EmojiKeyboardConfiguration","CreatePollConfiguration","StickerKeyboardConfiguration","ActionSheetConfiguration","MessageComposerConfiguration","constructor","hideAttachment","attachmentIconURL","stickerCloseIconURL","hideLiveReaction","hideEmoji","emojiIconURL","showSendButton","sendButtonIconURL","onSendButtonClick","messageTypes","excludeMessageTypes","enableTypingIndicator","enableSoundForMessages","customOutgoingMessageSound","style","messagePreviewConfiguration","emojiKeyboardConfiguration","stickerKeyboardConfiguration","createPollConfiguration","actionSheetConfiguration"],"sources":["/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/cometchat-pro-react-ui-kit/src/components/Messages/CometChatMessageComposer/MessageComposerConfiguration.js"],"sourcesContent":["import roundedPlus from \"./resources/add-circle-filled.svg\";\nimport insertEmoticon from \"./resources/emoji.svg\";\nimport sendBtn from \"./resources/send-message.svg\";\n\nimport closeButton from \"./resources/close-circle.svg\";\n\nimport { MessageComposerStyles } from \"../\";\n\nimport { MessagePreviewConfiguration } from \"../CometChatMessagePreview/MessagePreviewConfiguration\";\n\nimport { EmojiKeyboardConfiguration } from \"../CometChatEmojiKeyboard/EmojiKeyboardConfiguration\";\n\nimport { CreatePollConfiguration } from \"../CometChatCreatePoll/CreatePollConfiguration\";\n\nimport { StickerKeyboardConfiguration } from \"../CometChatStickerKeyboard/StickerKeyboardConfiguration\";\n\nimport { ActionSheetConfiguration } from \"../../Shared\";\n\n/**\n * @class MessageComposerConfiguration\n * @description MessageComposerConfiguration class is used for defining the MessageComposer templates.\n * @param {String} sendButtonIconURL\n * @param {String} attachmentIconURL\n * @param {String} stickerIconURL\n * @param {String} stickerCloseIconURL\n * @param {String} emojiIconURL\n * @param {String} customOutgoingMessageSound\n * @param {Boolean} hideAttachment\n * @param {Boolean} hideLiveReaction\n * @param {Boolean} hideEmoji\n * @param {Boolean} showSendButton\n * @param {Boolean} enableSoundForMsg\n * @param {Boolean} enableTyping\n * @param {Function} onSendButtonClick\n * @param {Array} messageTypes\n * @param {Array} excludeMessageTypes\n * @param {Object} style\n */\n\nclass MessageComposerConfiguration {\n  constructor({\n    hideAttachment = false,\n    attachmentIconURL = roundedPlus,\n    stickerCloseIconURL = closeButton,\n    hideLiveReaction = false,\n    hideEmoji = false,\n    emojiIconURL = insertEmoticon,\n    showSendButton = true,\n    sendButtonIconURL = sendBtn,\n    onSendButtonClick = null,\n    messageTypes = null,\n    excludeMessageTypes = null,\n    enableTypingIndicator = true,\n    enableSoundForMessages = true,\n    customOutgoingMessageSound = null,\n    style = new MessageComposerStyles({}),\n    messagePreviewConfiguration = new MessagePreviewConfiguration({}),\n    emojiKeyboardConfiguration = new EmojiKeyboardConfiguration({}),\n    stickerKeyboardConfiguration = new StickerKeyboardConfiguration({}),\n    createPollConfiguration = new CreatePollConfiguration({}),\n    actionSheetConfiguration = new ActionSheetConfiguration({}),\n  }) {\n    this.sendButtonIconURL = sendButtonIconURL;\n    this.attachmentIconURL = attachmentIconURL;\n    this.stickerCloseIconURL = stickerCloseIconURL;\n    this.hideAttachment = hideAttachment;\n    this.hideLiveReaction = hideLiveReaction;\n    this.hideEmoji = hideEmoji;\n    this.emojiIconURL = emojiIconURL;\n    this.showSendButton = showSendButton;\n    this.onSendButtonClick = onSendButtonClick;\n    this.messageTypes = messageTypes;\n    this.customOutgoingMessageSound = customOutgoingMessageSound;\n    this.enableSoundForMessages = enableSoundForMessages;\n    this.enableTypingIndicator = enableTypingIndicator;\n    this.excludeMessageTypes = excludeMessageTypes;\n    this.style = new MessageComposerStyles(style ?? {});\n    this.messagePreviewConfiguration = new MessagePreviewConfiguration(messagePreviewConfiguration ?? {});\n    this.emojiKeyboardConfiguration = new EmojiKeyboardConfiguration(emojiKeyboardConfiguration ?? {});\n    this.stickerKeyboardConfiguration = new StickerKeyboardConfiguration(stickerKeyboardConfiguration ?? {});\n    this.createPollConfiguration = new CreatePollConfiguration(createPollConfiguration ?? {});\n    this.actionSheetConfiguration = new ActionSheetConfiguration(actionSheetConfiguration ?? {});\n  }\n}\n\nexport { MessageComposerConfiguration };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}