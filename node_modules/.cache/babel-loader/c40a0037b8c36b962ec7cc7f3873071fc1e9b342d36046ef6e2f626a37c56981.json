{"ast":null,"code":"var _jsxFileName = \"/home/admin1/dev/react/sample-react-guides/src/app/guides/CustomMessageTypes/index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { CometChatMessageList, CometChatMessages, CometChatMessageTemplate } from \"react-ui-kit-testing\";\nimport iconURL from \"./resources/empty.svg\";\nimport { Hook } from \"./hook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomMessageTypes = props => {\n  _s();\n  const [_user, setUser] = React.useState(null);\n  const [_group, setGroup] = React.useState(null);\n  Hook(setGroup, setUser);\n  const myApp = () => {\n    console.alert(\"payment succeeded\");\n  };\n  let messageTypes = CometChatMessageTemplate.getDefaultTypes();\n  let paymentTemplate = new CometChatMessageTemplate({\n    type: \"payment\",\n    icon: iconURL,\n    name: \"Payment\",\n    customView: null,\n    onActionClick: myApp\n  });\n  messageTypes.push(paymentTemplate);\n  let listconfi = {\n    messageTypes: messageTypes\n  };\n  return _user || _group ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CometChatMessageList, {\n      user: _user,\n      style: {\n        width: \"700px\",\n        height: \"500px\"\n      },\n      messageTypes: [new CometChatMessageTemplate({\n        type: \"text\",\n        icon: \"\",\n        name: \"Text\",\n        category: \"text\",\n        customView: customViewTextBubble\n        // onActionClick: null,\n      }), new CometChatMessageTemplate({\n        type: \"payment\",\n        icon: \"\",\n        name: \"Payment\",\n        customView: customViewPayment\n        // onActionClick: onActionClickPayment,\n      })]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false) : null;\n};\n_s(CustomMessageTypes, \"IIYCR1OLoA/apTMP93MvmQyV/ZY=\");\n_c = CustomMessageTypes;\nexport { CustomMessageTypes };\nvar _c;\n$RefreshReg$(_c, \"CustomMessageTypes\");","map":{"version":3,"names":["React","CometChatMessageList","CometChatMessages","CometChatMessageTemplate","iconURL","Hook","CustomMessageTypes","props","_user","setUser","useState","_group","setGroup","myApp","console","alert","messageTypes","getDefaultTypes","paymentTemplate","type","icon","name","customView","onActionClick","push","listconfi","width","height","category","customViewTextBubble","customViewPayment"],"sources":["/home/admin1/dev/react/sample-react-guides/src/app/guides/CustomMessageTypes/index.js"],"sourcesContent":["import React from \"react\";\n\nimport {\n  CometChatMessageList,\n  CometChatMessages,\n  CometChatMessageTemplate,\n} from \"react-ui-kit-testing\";\n\nimport iconURL from \"./resources/empty.svg\";\n\nimport { Hook } from \"./hook\";\n\nconst CustomMessageTypes = (props) => {\n  const [_user, setUser] = React.useState(null);\n  const [_group, setGroup] = React.useState(null);\n\n  Hook(setGroup, setUser);\n\n  const myApp = () => {\n    console.alert(\"payment succeeded\");\n  };\n\n  let messageTypes = CometChatMessageTemplate.getDefaultTypes();\n\n  let paymentTemplate = new CometChatMessageTemplate({\n    type: \"payment\",\n    icon: iconURL,\n    name: \"Payment\",\n    customView: null,\n    onActionClick: myApp,\n  });\n  messageTypes.push(paymentTemplate);\n\n  let listconfi = {\n    messageTypes: messageTypes,\n  };\n\n  return _user || _group ? (\n    <>\n      <CometChatMessageList\n        user={_user}\n        style={{ width: \"700px\", height: \"500px\" }}\n        messageTypes={[\n          new CometChatMessageTemplate({\n            type: \"text\",\n            icon: \"\",\n            name: \"Text\",\n            category: \"text\",\n            customView: customViewTextBubble,\n            // onActionClick: null,\n          }),\n          new CometChatMessageTemplate({\n            type: \"payment\",\n            icon: \"\",\n            name: \"Payment\",\n            customView: customViewPayment,\n            // onActionClick: onActionClickPayment,\n          }),\n        ]}\n      />\n    </>\n  ) : null;\n};\n\nexport { CustomMessageTypes };\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SACEC,oBAAoB,EACpBC,iBAAiB,EACjBC,wBAAwB,QACnB,sBAAsB;AAE7B,OAAOC,OAAO,MAAM,uBAAuB;AAE3C,SAASC,IAAI,QAAQ,QAAQ;AAAC;AAAA;AAE9B,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;EAAA;EACpC,MAAM,CAACC,KAAK,EAAEC,OAAO,CAAC,GAAGT,KAAK,CAACU,QAAQ,CAAC,IAAI,CAAC;EAC7C,MAAM,CAACC,MAAM,EAAEC,QAAQ,CAAC,GAAGZ,KAAK,CAACU,QAAQ,CAAC,IAAI,CAAC;EAE/CL,IAAI,CAACO,QAAQ,EAAEH,OAAO,CAAC;EAEvB,MAAMI,KAAK,GAAG,MAAM;IAClBC,OAAO,CAACC,KAAK,CAAC,mBAAmB,CAAC;EACpC,CAAC;EAED,IAAIC,YAAY,GAAGb,wBAAwB,CAACc,eAAe,EAAE;EAE7D,IAAIC,eAAe,GAAG,IAAIf,wBAAwB,CAAC;IACjDgB,IAAI,EAAE,SAAS;IACfC,IAAI,EAAEhB,OAAO;IACbiB,IAAI,EAAE,SAAS;IACfC,UAAU,EAAE,IAAI;IAChBC,aAAa,EAAEV;EACjB,CAAC,CAAC;EACFG,YAAY,CAACQ,IAAI,CAACN,eAAe,CAAC;EAElC,IAAIO,SAAS,GAAG;IACdT,YAAY,EAAEA;EAChB,CAAC;EAED,OAAOR,KAAK,IAAIG,MAAM,gBACpB;IAAA,uBACE,QAAC,oBAAoB;MACnB,IAAI,EAAEH,KAAM;MACZ,KAAK,EAAE;QAAEkB,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAQ,CAAE;MAC3C,YAAY,EAAE,CACZ,IAAIxB,wBAAwB,CAAC;QAC3BgB,IAAI,EAAE,MAAM;QACZC,IAAI,EAAE,EAAE;QACRC,IAAI,EAAE,MAAM;QACZO,QAAQ,EAAE,MAAM;QAChBN,UAAU,EAAEO;QACZ;MACF,CAAC,CAAC,EACF,IAAI1B,wBAAwB,CAAC;QAC3BgB,IAAI,EAAE,SAAS;QACfC,IAAI,EAAE,EAAE;QACRC,IAAI,EAAE,SAAS;QACfC,UAAU,EAAEQ;QACZ;MACF,CAAC,CAAC;IACF;MAAA;MAAA;MAAA;IAAA;EACF,iBACD,GACD,IAAI;AACV,CAAC;AAAC,GAlDIxB,kBAAkB;AAAA,KAAlBA,kBAAkB;AAoDxB,SAASA,kBAAkB;AAAG;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}