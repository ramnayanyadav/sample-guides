{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from \"react\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { MessageTypeConstants, ReceiverTypeConstants } from \"../..\";\nimport { getDefaultTypes } from \"../CometChatMessageTemplate\";\nimport { CometChatMessageTypes, CometChatCustomMessageTypes } from \"..\";\nexport const Hooks = (props, loggedInUser, setChatWith, setChatWithId, chatRef, setViewSticker, stickerTemplate, setActionSheetItems, setViewInputField, setViewAttachButton, openCreatePoll, fileInputHandler, videoInputHandler, imageInputHandler, audioInputHandler, shareCollaborativeDocument, shareCollaborativeWhiteboard, sendSticker, excludeMessageTypes) => {\n  _s();\n  const helper = (type, item) => {\n    switch (type) {\n      case CometChatMessageTypes.file:\n        return {\n          ...item,\n          onActionClick: fileInputHandler\n        };\n      case CometChatMessageTypes.image:\n        return {\n          ...item,\n          onActionClick: imageInputHandler\n        };\n      case CometChatMessageTypes.audio:\n        return {\n          ...item,\n          onActionClick: audioInputHandler\n        };\n      case CometChatMessageTypes.video:\n        return {\n          ...item,\n          onActionClick: videoInputHandler\n        };\n      case CometChatCustomMessageTypes.poll:\n        {\n          return {\n            ...item,\n            onActionClick: openCreatePoll\n          };\n        }\n      case CometChatCustomMessageTypes.document:\n        {\n          return {\n            ...item,\n            onActionClick: shareCollaborativeDocument\n          };\n        }\n      case CometChatCustomMessageTypes.whiteboard:\n        {\n          return {\n            ...item,\n            onActionClick: shareCollaborativeWhiteboard\n          };\n        }\n      case CometChatCustomMessageTypes.sticker:\n        {\n          return {\n            ...item,\n            onActionClick: sendSticker\n          };\n        }\n      default:\n        break;\n    }\n  };\n\n  //fetch logged in user\n  React.useEffect(() => {\n    CometChat.getLoggedinUser().then(user => loggedInUser.current = user);\n  }, []);\n  React.useEffect(() => {\n    //update receiver user\n    if (props.user && props.user.uid) {\n      chatRef.current = {\n        chatWith: ReceiverTypeConstants.user,\n        chatWithId: props.user.uid\n      };\n      setChatWith(ReceiverTypeConstants.user);\n      setChatWithId(props.user.uid);\n    } else if (props.group && props.group.guid) {\n      chatRef.current = {\n        chatWith: ReceiverTypeConstants.group,\n        chatWithId: props.group.guid\n      };\n      setChatWith(ReceiverTypeConstants.group);\n      setChatWithId(props.group.guid);\n    }\n  }, [props.user, props.group, setChatWith, setChatWithId, chatRef]);\n  React.useEffect(() => {\n    let stickerMessageTemplate = null;\n    let textMessageTemplate = null;\n    let actionItems = [];\n    if (props.messageTypes && props.messageTypes.length) {\n      let Items = props.messageTypes.map((item, index) => {\n        if (item.onActionClick === null) {\n          return helper(item.type, item);\n        }\n        return item;\n      });\n      if (props !== null && props !== void 0 && props.excludeMessageTypes) {\n        var _Items;\n        Items = (_Items = Items) === null || _Items === void 0 ? void 0 : _Items.filter(val => {\n          var _props$excludeMessage;\n          return !(props !== null && props !== void 0 && (_props$excludeMessage = props.excludeMessageTypes) !== null && _props$excludeMessage !== void 0 && _props$excludeMessage.includes(val === null || val === void 0 ? void 0 : val.type));\n        });\n      }\n      actionItems = Items.filter((item, index) => {\n        if ((item === null || item === void 0 ? void 0 : item.type) !== MessageTypeConstants.text && (item === null || item === void 0 ? void 0 : item.type) !== MessageTypeConstants.sticker) {\n          return item;\n        }\n      });\n      textMessageTemplate = props.messageTypes.find(messageTemplate => messageTemplate.type === MessageTypeConstants.text);\n      stickerMessageTemplate = props.messageTypes.find(messageTemplate => messageTemplate.type === MessageTypeConstants.sticker);\n    } else {\n      var _Items2, _Items3;\n      let defaultTypes = getDefaultTypes();\n      let Items = defaultTypes.map((item, index) => {\n        if (item.onActionClick === null) {\n          return helper(item.type, item);\n        }\n        return item;\n      });\n      Items = (_Items2 = Items) === null || _Items2 === void 0 ? void 0 : _Items2.filter(val => {\n        var _props$excludeMessage2;\n        return !(props !== null && props !== void 0 && (_props$excludeMessage2 = props.excludeMessageTypes) !== null && _props$excludeMessage2 !== void 0 && _props$excludeMessage2.includes(val === null || val === void 0 ? void 0 : val.type));\n      });\n      actionItems = (_Items3 = Items) === null || _Items3 === void 0 ? void 0 : _Items3.filter((item, index) => {\n        if ((item === null || item === void 0 ? void 0 : item.type) !== MessageTypeConstants.text && (item === null || item === void 0 ? void 0 : item.type) !== MessageTypeConstants.sticker) {\n          return item;\n        }\n      });\n      textMessageTemplate = defaultTypes === null || defaultTypes === void 0 ? void 0 : defaultTypes.find(messageTemplate => (messageTemplate === null || messageTemplate === void 0 ? void 0 : messageTemplate.type) === MessageTypeConstants.text);\n      stickerMessageTemplate = defaultTypes === null || defaultTypes === void 0 ? void 0 : defaultTypes.find(messageTemplate => (messageTemplate === null || messageTemplate === void 0 ? void 0 : messageTemplate.type) === MessageTypeConstants.sticker);\n    }\n\n    //if messageTypes is't contain text, hide message input box.\n    if (textMessageTemplate) {\n      setViewInputField(true);\n    } else {\n      setViewInputField(false);\n    }\n\n    //if messageTypes is't contain sticker, hide sticker.\n    if (stickerMessageTemplate) {\n      setViewSticker(true);\n      stickerTemplate.current = stickerMessageTemplate;\n    } else {\n      setViewSticker(false);\n      stickerTemplate.current = null;\n    }\n\n    //if message filters are set, show attachment button\n    if (actionItems.length && !props.hideAttachment) {\n      setViewAttachButton(true);\n      setActionSheetItems(actionItems);\n    }\n  }, [props.messageTypes, props.excludeMessageTypes]);\n};\n_s(Hooks, \"ewq31d5h+FnD/qJW52w5UqeNMN4=\");\n_c = Hooks;\nvar _c;\n$RefreshReg$(_c, \"Hooks\");","map":{"version":3,"names":["React","CometChat","MessageTypeConstants","ReceiverTypeConstants","getDefaultTypes","CometChatMessageTypes","CometChatCustomMessageTypes","Hooks","props","loggedInUser","setChatWith","setChatWithId","chatRef","setViewSticker","stickerTemplate","setActionSheetItems","setViewInputField","setViewAttachButton","openCreatePoll","fileInputHandler","videoInputHandler","imageInputHandler","audioInputHandler","shareCollaborativeDocument","shareCollaborativeWhiteboard","sendSticker","excludeMessageTypes","helper","type","item","file","onActionClick","image","audio","video","poll","document","whiteboard","sticker","useEffect","getLoggedinUser","then","user","current","uid","chatWith","chatWithId","group","guid","stickerMessageTemplate","textMessageTemplate","actionItems","messageTypes","length","Items","map","index","filter","val","includes","text","find","messageTemplate","defaultTypes","hideAttachment"],"sources":["/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/cometchat-pro-react-ui-kit/src/components/Messages/CometChatMessageComposer/hooks.js"],"sourcesContent":["import React from \"react\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport { MessageTypeConstants, ReceiverTypeConstants } from \"../..\";\n\nimport { getDefaultTypes } from \"../CometChatMessageTemplate\";\n\nimport { CometChatMessageTypes, CometChatCustomMessageTypes } from \"..\";\n\nexport const Hooks = (\n  props,\n  loggedInUser,\n  setChatWith,\n  setChatWithId,\n  chatRef,\n  setViewSticker,\n  stickerTemplate,\n  setActionSheetItems,\n  setViewInputField,\n  setViewAttachButton,\n  openCreatePoll,\n  fileInputHandler,\n  videoInputHandler,\n  imageInputHandler,\n  audioInputHandler,\n  shareCollaborativeDocument,\n  shareCollaborativeWhiteboard,\n  sendSticker,\n  excludeMessageTypes\n) => {\n  const helper = (type, item) => {\n    switch (type) {\n      case CometChatMessageTypes.file:\n        return { ...item, onActionClick: fileInputHandler };\n      case CometChatMessageTypes.image:\n        return { ...item, onActionClick: imageInputHandler };\n      case CometChatMessageTypes.audio:\n        return { ...item, onActionClick: audioInputHandler };\n      case CometChatMessageTypes.video:\n        return { ...item, onActionClick: videoInputHandler };\n      case CometChatCustomMessageTypes.poll: {\n        return { ...item, onActionClick: openCreatePoll };\n      }\n      case CometChatCustomMessageTypes.document: {\n        return { ...item, onActionClick: shareCollaborativeDocument };\n      }\n      case CometChatCustomMessageTypes.whiteboard: {\n        return { ...item, onActionClick: shareCollaborativeWhiteboard };\n      }\n      case CometChatCustomMessageTypes.sticker: {\n        return { ...item, onActionClick: sendSticker };\n      }\n      default:\n        break;\n    }\n  };\n\n  //fetch logged in user\n  React.useEffect(() => {\n    CometChat.getLoggedinUser().then((user) => (loggedInUser.current = user));\n  }, []);\n\n  React.useEffect(() => {\n    //update receiver user\n    if (props.user && props.user.uid) {\n      chatRef.current = {\n        chatWith: ReceiverTypeConstants.user,\n        chatWithId: props.user.uid,\n      };\n\n      setChatWith(ReceiverTypeConstants.user);\n      setChatWithId(props.user.uid);\n    } else if (props.group && props.group.guid) {\n      chatRef.current = {\n        chatWith: ReceiverTypeConstants.group,\n        chatWithId: props.group.guid,\n      };\n\n      setChatWith(ReceiverTypeConstants.group);\n      setChatWithId(props.group.guid);\n    }\n  }, [props.user, props.group, setChatWith, setChatWithId, chatRef]);\n\n  React.useEffect(() => {\n    let stickerMessageTemplate = null;\n    let textMessageTemplate = null;\n    let actionItems = [];\n    if (props.messageTypes && props.messageTypes.length) {\n      let Items = props.messageTypes.map((item, index) => {\n        if (item.onActionClick === null) {\n          return helper(item.type, item);\n        }\n        return item;\n      });\n\n      if (props?.excludeMessageTypes) {\n        Items = Items?.filter(\n          (val) => !props?.excludeMessageTypes?.includes(val?.type)\n        );\n      }\n\n      actionItems = Items.filter((item, index) => {\n        if (\n          item?.type !== MessageTypeConstants.text &&\n          item?.type !== MessageTypeConstants.sticker\n        ) {\n          return item;\n        }\n      });\n      textMessageTemplate = props.messageTypes.find(\n        (messageTemplate) => messageTemplate.type === MessageTypeConstants.text\n      );\n      stickerMessageTemplate = props.messageTypes.find(\n        (messageTemplate) =>\n          messageTemplate.type === MessageTypeConstants.sticker\n      );\n    } else {\n      let defaultTypes = getDefaultTypes();\n      let Items = defaultTypes.map((item, index) => {\n        if (item.onActionClick === null) {\n          return helper(item.type, item);\n        }\n        return item;\n      });\n\n      Items = Items?.filter(\n        (val) => !props?.excludeMessageTypes?.includes(val?.type)\n      );\n\n      actionItems = Items?.filter((item, index) => {\n        if (\n          item?.type !== MessageTypeConstants.text &&\n          item?.type !== MessageTypeConstants.sticker\n        ) {\n          return item;\n        }\n      });\n      textMessageTemplate = defaultTypes?.find(\n        (messageTemplate) => messageTemplate?.type === MessageTypeConstants.text\n      );\n      stickerMessageTemplate = defaultTypes?.find(\n        (messageTemplate) =>\n          messageTemplate?.type === MessageTypeConstants.sticker\n      );\n    }\n\n    //if messageTypes is't contain text, hide message input box.\n    if (textMessageTemplate) {\n      setViewInputField(true);\n    } else {\n      setViewInputField(false);\n    }\n\n    //if messageTypes is't contain sticker, hide sticker.\n    if (stickerMessageTemplate) {\n      setViewSticker(true);\n      stickerTemplate.current = stickerMessageTemplate;\n    } else {\n      setViewSticker(false);\n      stickerTemplate.current = null;\n    }\n\n    //if message filters are set, show attachment button\n    if (actionItems.length && !props.hideAttachment) {\n      setViewAttachButton(true);\n      setActionSheetItems(actionItems);\n    }\n  }, [props.messageTypes, props.excludeMessageTypes]);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}