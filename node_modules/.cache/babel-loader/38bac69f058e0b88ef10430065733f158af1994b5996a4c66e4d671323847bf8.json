{"ast":null,"code":"var _jsxFileName = \"/home/admin1/dev/react/sample-react-guides/src/app/guides/ExcludeMessageOptions/index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { CometChatMessageList, MessageOptionConstants, CometChatPopover } from \"react-ui-kit-testing\";\nimport { dateTimeStyle } from \"./style\";\nimport { Hook } from \"./hook\";\nimport reminderURL from \"./resources/reminders.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ExcludeMessageOptions = () => {\n  _s();\n  const [user, setUser] = React.useState(null);\n  const [group, setGroup] = React.useState(null);\n  const [launchReminder, setReminder] = React.useState(false);\n  const [time, setTime] = React.useState(\"\");\n  const [date, setDate] = React.useState(\"\");\n  const [messageObject, setMessageObject] = React.useState(\"\");\n  console.log(time, date);\n  const FetchApi = e => {\n    setMessageObject(e);\n    setReminder(!launchReminder);\n  };\n  const excludeMessageOptions = [\n  // MessageOptionConstants.reactToMessage,\n  MessageOptionConstants.editMessage, MessageOptionConstants.deleteMessage, MessageOptionConstants.copyMessage, MessageOptionConstants.translateMessage];\n  const customMessageOptions = [\n  // MessageOptionConstants.reactToMessage,\n  // MessageOptionConstants.editMessage,\n  // MessageOptionConstants.deleteMessage,\n  // MessageOptionConstants.copyMessage,\n  // MessageOptionConstants.translateMessage,\n  {\n    iconURL: reminderURL,\n    id: \"RemindToMessage\",\n    onClick: FetchApi,\n    optionFor: null,\n    title: \"Reminder\"\n  }];\n  const sentReminder = () => {\n    if (date.length && time.length) {\n      let reminderDate = date + \" \" + time;\n      console.log(reminderDate);\n      let ms = Date.now();\n      setReminder(!launchReminder);\n      // CometChat.callExtension(\"reminders\", \"POST\", \"v1/reminder\", {\n      //   about: parseInt(messageObject.id),\n      //   isCustom: false,\n      //   timeInMS: 1669860928000,\n      // })\n      //   .then((response) => {\n      //     // Reminder created successfully\n      //     // Reminder details with reminderId.\n      //     console.log(\"reminder resp\", response);\n      //   })\n      //   .catch((error) => {\n      //     // Some error occured\n      //     console.log(\"reminder error\", error);\n      //   });\n    }\n  };\n\n  let customView = /*#__PURE__*/_jsxDEV(\"div\", {\n    style: dateTimeStyle(),\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        margin: \"0\"\n      },\n      children: \"Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      onChange: e => setDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        margin: \"0\"\n      },\n      children: \"Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"time\",\n      onChange: e => setTime(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sentReminder,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n  Hook(setGroup, setUser);\n  return user || group ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CometChatMessageList, {\n      user: user,\n      style: {\n        width: \"650px\",\n        height: \"450px\"\n      },\n      alignment: \"standard\" //['standard','leftAligned']\n      ,\n      excludeMessageOptions: excludeMessageOptions,\n      customMessageOptions: customMessageOptions,\n      sentMessageInputData: {\n        thumbnail: false,\n        title: false,\n        time: true,\n        readReceipt: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), launchReminder ? /*#__PURE__*/_jsxDEV(CometChatPopover, {\n      position: \"left\",\n      x: \"750\",\n      y: \"350\",\n      children: customView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true) : null;\n};\n_s(ExcludeMessageOptions, \"IvaUeaT4sDgOhNXgO+SuEZeLVWo=\");\n_c = ExcludeMessageOptions;\nexport { ExcludeMessageOptions };\nvar _c;\n$RefreshReg$(_c, \"ExcludeMessageOptions\");","map":{"version":3,"names":["React","CometChat","CometChatMessageList","MessageOptionConstants","CometChatPopover","dateTimeStyle","Hook","reminderURL","ExcludeMessageOptions","user","setUser","useState","group","setGroup","launchReminder","setReminder","time","setTime","date","setDate","messageObject","setMessageObject","console","log","FetchApi","e","excludeMessageOptions","editMessage","deleteMessage","copyMessage","translateMessage","customMessageOptions","iconURL","id","onClick","optionFor","title","sentReminder","length","reminderDate","ms","Date","now","customView","margin","target","value","width","height","thumbnail","readReceipt"],"sources":["/home/admin1/dev/react/sample-react-guides/src/app/guides/ExcludeMessageOptions/index.js"],"sourcesContent":["import React from \"react\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport {\n  CometChatMessageList,\n  MessageOptionConstants,\n  CometChatPopover,\n} from \"react-ui-kit-testing\";\n\nimport { dateTimeStyle } from \"./style\";\n\nimport { Hook } from \"./hook\";\n\nimport reminderURL from \"./resources/reminders.svg\";\n\nconst ExcludeMessageOptions = () => {\n  const [user, setUser] = React.useState(null);\n  const [group, setGroup] = React.useState(null);\n  const [launchReminder, setReminder] = React.useState(false);\n  const [time, setTime] = React.useState(\"\");\n  const [date, setDate] = React.useState(\"\");\n  const [messageObject, setMessageObject] = React.useState(\"\");\n  console.log(time, date);\n  const FetchApi = (e) => {\n    setMessageObject(e);\n    setReminder(!launchReminder);\n  };\n\n  const excludeMessageOptions = [\n    // MessageOptionConstants.reactToMessage,\n    MessageOptionConstants.editMessage,\n    MessageOptionConstants.deleteMessage,\n    MessageOptionConstants.copyMessage,\n    MessageOptionConstants.translateMessage,\n  ];\n\n  const customMessageOptions = [\n    // MessageOptionConstants.reactToMessage,\n    // MessageOptionConstants.editMessage,\n    // MessageOptionConstants.deleteMessage,\n    // MessageOptionConstants.copyMessage,\n    // MessageOptionConstants.translateMessage,\n    {\n      iconURL: reminderURL,\n      id: \"RemindToMessage\",\n      onClick: FetchApi,\n      optionFor: null,\n      title: \"Reminder\",\n    },\n  ];\n\n  const sentReminder = () => {\n    if (date.length && time.length) {\n      let reminderDate = date + \" \" + time;\n      console.log(reminderDate);\n      let ms = Date.now();\n      setReminder(!launchReminder);\n      // CometChat.callExtension(\"reminders\", \"POST\", \"v1/reminder\", {\n      //   about: parseInt(messageObject.id),\n      //   isCustom: false,\n      //   timeInMS: 1669860928000,\n      // })\n      //   .then((response) => {\n      //     // Reminder created successfully\n      //     // Reminder details with reminderId.\n      //     console.log(\"reminder resp\", response);\n      //   })\n      //   .catch((error) => {\n      //     // Some error occured\n      //     console.log(\"reminder error\", error);\n      //   });\n    }\n  };\n\n  let customView = (\n    <div style={dateTimeStyle()}>\n      <p style={{ margin: \"0\" }}>Date</p>\n      <input type=\"date\" onChange={(e) => setDate(e.target.value)} />\n      <p style={{ margin: \"0\" }}>Time</p>\n      <input type=\"time\" onChange={(e) => setTime(e.target.value)} />\n      <button onClick={sentReminder}>Submit</button>\n    </div>\n  );\n\n  Hook(setGroup, setUser);\n\n  return user || group ? (\n    <>\n      <CometChatMessageList\n        user={user}\n        style={{ width: \"650px\", height: \"450px\" }}\n        alignment={\"standard\"} //['standard','leftAligned']\n        excludeMessageOptions={excludeMessageOptions}\n        customMessageOptions={customMessageOptions}\n        sentMessageInputData={{\n          thumbnail: false,\n          title: false,\n          time: true,\n          readReceipt: true,\n        }}\n      />\n\n      {launchReminder ? (\n        <CometChatPopover position=\"left\" x=\"750\" y=\"350\">\n          {customView}\n        </CometChatPopover>\n      ) : null}\n    </>\n  ) : null;\n};\n\nexport { ExcludeMessageOptions };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}