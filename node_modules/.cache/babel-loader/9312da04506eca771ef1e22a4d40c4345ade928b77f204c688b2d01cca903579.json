{"ast":null,"code":"import { MessageOptionConstants, MessageTypeConstants, MessageOptionForConstants } from \"../..\";\nimport { localize } from \"../../\";\nimport deleteIcon from \"../CometChatMessageList/resources/deleteicon.svg\";\nimport editIcon from \"../CometChatMessageList/resources/edit.svg\";\nimport threadIcon from \"../CometChatMessageList/resources/threadicon.svg\";\nimport reaction from \"../CometChatMessageList/resources/reactionsicon.svg\";\nimport copy from \"../CometChatMessageList/resources/copy.svg\";\nimport translateIcon from \"../CometChatMessageList/resources/messageTranslation.svg\";\n\n/**\n * @class CometChatMessageOptions\n * @description CometChatMessageOptions is a data model used for creating the various message actions with the id serving as the name of the action and the onClick as the handler function to be run on click.\n * @param {String} id\n * @param {String} icon\n * @param {String} title\n * @param {Function} onClick\n * @param {String} optionFor\n */\n\nclass CometChatMessageOptions {\n  constructor(_ref) {\n    let {\n      id,\n      iconURL,\n      title,\n      onClick,\n      optionFor\n    } = _ref;\n    this.id = \"\";\n    this.title = \"\";\n    this.iconURL = \"\";\n    this.onClick = null;\n    this.optionFor = \"\";\n    this.id = id;\n    this.iconURL = iconURL;\n    this.title = title;\n    this.onClick = onClick;\n    this.optionFor = optionFor;\n  }\n}\nCometChatMessageOptions.getMessageOptions = optionType => {\n  switch (optionType) {\n    case MessageOptionConstants.deleteMessage:\n      {\n        return new CometChatMessageOptions({\n          id: MessageOptionConstants.deleteMessage,\n          title: localize(\"DELETE\"),\n          //inside style\n          iconURL: deleteIcon,\n          onClick: null,\n          optionFor: MessageOptionForConstants.sender\n        });\n      }\n    case MessageOptionConstants.editMessage:\n      {\n        return new CometChatMessageOptions({\n          id: MessageOptionConstants.editMessage,\n          title: localize(\"EDIT_MESSAGE\"),\n          //inside style\n          iconURL: editIcon,\n          onClick: null,\n          optionFor: MessageOptionForConstants.sender\n        });\n      }\n    case MessageOptionConstants.replyInThread:\n      {\n        return new CometChatMessageOptions({\n          id: MessageOptionConstants.replyInThread,\n          title: localize(\"REPLY_IN_THREAD\"),\n          //inside style\n          iconURL: threadIcon,\n          onClick: null,\n          optionFor: \"\"\n        });\n      }\n    case MessageOptionConstants.copyMessage:\n      {\n        return new CometChatMessageOptions({\n          id: MessageOptionConstants.copyMessage,\n          title: localize(\"COPY_MESSAGE\"),\n          iconURL: copy,\n          onClick: null,\n          optionFor: MessageOptionForConstants.both\n        });\n      }\n    case MessageOptionConstants.translateMessage:\n      {\n        return new CometChatMessageOptions({\n          id: MessageOptionConstants.translateMessage,\n          title: localize(\"TRANSLATE_MESSAGE\"),\n          //inside style\n          iconURL: translateIcon,\n          onClick: null,\n          optionFor: MessageOptionForConstants.both\n        });\n      }\n    case MessageOptionConstants.reactToMessage:\n      {\n        return new CometChatMessageOptions({\n          id: MessageOptionConstants.reactToMessage,\n          title: localize(\"ADD_REACTION\"),\n          //inside style\n          iconURL: reaction,\n          onClick: null,\n          optionFor: MessageOptionForConstants.both\n        });\n      }\n    default:\n      return null;\n  }\n};\nCometChatMessageOptions.getDefaultOptions = type => {\n  switch (type) {\n    case MessageTypeConstants.text:\n      return [CometChatMessageOptions.getMessageOptions(MessageOptionConstants.reactToMessage), CometChatMessageOptions.getMessageOptions(MessageOptionConstants.editMessage), CometChatMessageOptions.getMessageOptions(MessageOptionConstants.copyMessage), CometChatMessageOptions.getMessageOptions(MessageOptionConstants.deleteMessage), CometChatMessageOptions.getMessageOptions(MessageOptionConstants.translateMessage)];\n    case MessageTypeConstants.file:\n      return [CometChatMessageOptions.getMessageOptions(MessageOptionConstants.reactToMessage), CometChatMessageOptions.getMessageOptions(MessageOptionConstants.deleteMessage)];\n    case MessageTypeConstants.audio:\n      return [CometChatMessageOptions.getMessageOptions(MessageOptionConstants.reactToMessage), CometChatMessageOptions.getMessageOptions(MessageOptionConstants.deleteMessage)];\n    case MessageTypeConstants.video:\n      return [CometChatMessageOptions.getMessageOptions(MessageOptionConstants.reactToMessage), CometChatMessageOptions.getMessageOptions(MessageOptionConstants.deleteMessage)];\n    case MessageTypeConstants.image:\n      return [CometChatMessageOptions.getMessageOptions(MessageOptionConstants.reactToMessage), CometChatMessageOptions.getMessageOptions(MessageOptionConstants.deleteMessage)];\n    case MessageTypeConstants.document:\n      return [CometChatMessageOptions.getMessageOptions(MessageOptionConstants.reactToMessage), CometChatMessageOptions.getMessageOptions(MessageOptionConstants.deleteMessage)];\n    case MessageTypeConstants.poll:\n      return [CometChatMessageOptions.getMessageOptions(MessageOptionConstants.reactToMessage), CometChatMessageOptions.getMessageOptions(MessageOptionConstants.deleteMessage)];\n    case MessageTypeConstants.sticker:\n      return [CometChatMessageOptions.getMessageOptions(MessageOptionConstants.reactToMessage), CometChatMessageOptions.getMessageOptions(MessageOptionConstants.deleteMessage)];\n    case MessageTypeConstants.whiteboard:\n      return [CometChatMessageOptions.getMessageOptions(MessageOptionConstants.reactToMessage), CometChatMessageOptions.getMessageOptions(MessageOptionConstants.deleteMessage)];\n    default:\n      return [];\n  }\n};\nexport { CometChatMessageOptions };","map":{"version":3,"names":["MessageOptionConstants","MessageTypeConstants","MessageOptionForConstants","localize","deleteIcon","editIcon","threadIcon","reaction","copy","translateIcon","CometChatMessageOptions","constructor","id","iconURL","title","onClick","optionFor","getMessageOptions","optionType","deleteMessage","sender","editMessage","replyInThread","copyMessage","both","translateMessage","reactToMessage","getDefaultOptions","type","text","file","audio","video","image","document","poll","sticker","whiteboard"],"sources":["/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/cometchat-pro-react-ui-kit/src/components/Messages/CometChatMessageOptions/index.js"],"sourcesContent":["import {\n  MessageOptionConstants,\n  MessageTypeConstants,\n  MessageOptionForConstants,\n} from \"../..\";\n\nimport { localize } from \"../../\";\n\nimport deleteIcon from \"../CometChatMessageList/resources/deleteicon.svg\";\nimport editIcon from \"../CometChatMessageList/resources/edit.svg\";\nimport threadIcon from \"../CometChatMessageList/resources/threadicon.svg\";\nimport reaction from \"../CometChatMessageList/resources/reactionsicon.svg\";\nimport copy from \"../CometChatMessageList/resources/copy.svg\";\nimport translateIcon from \"../CometChatMessageList/resources/messageTranslation.svg\";\n\n/**\n * @class CometChatMessageOptions\n * @description CometChatMessageOptions is a data model used for creating the various message actions with the id serving as the name of the action and the onClick as the handler function to be run on click.\n * @param {String} id\n * @param {String} icon\n * @param {String} title\n * @param {Function} onClick\n * @param {String} optionFor\n */\n\nclass CometChatMessageOptions {\n  id = \"\";\n  title = \"\";\n  iconURL = \"\";\n  onClick = null;\n  optionFor = \"\";\n\n  constructor({ id, iconURL, title, onClick, optionFor }) {\n    this.id = id;\n    this.iconURL = iconURL;\n    this.title = title;\n    this.onClick = onClick;\n    this.optionFor = optionFor;\n  }\n\n  static getMessageOptions = (optionType) => {\n    switch (optionType) {\n      case MessageOptionConstants.deleteMessage: {\n        return new CometChatMessageOptions({\n          id: MessageOptionConstants.deleteMessage,\n          title: localize(\"DELETE\"),\n          //inside style\n          iconURL: deleteIcon,\n          onClick: null,\n          optionFor: MessageOptionForConstants.sender,\n        });\n      }\n      case MessageOptionConstants.editMessage: {\n        return new CometChatMessageOptions({\n          id: MessageOptionConstants.editMessage,\n          title: localize(\"EDIT_MESSAGE\"),\n          //inside style\n          iconURL: editIcon,\n          onClick: null,\n          optionFor: MessageOptionForConstants.sender,\n        });\n      }\n      case MessageOptionConstants.replyInThread: {\n        return new CometChatMessageOptions({\n          id: MessageOptionConstants.replyInThread,\n          title: localize(\"REPLY_IN_THREAD\"),\n          //inside style\n          iconURL: threadIcon,\n          onClick: null,\n          optionFor: \"\",\n        });\n      }\n      case MessageOptionConstants.copyMessage: {\n        return new CometChatMessageOptions({\n          id: MessageOptionConstants.copyMessage,\n          title: localize(\"COPY_MESSAGE\"),\n          iconURL: copy,\n          onClick: null,\n          optionFor: MessageOptionForConstants.both,\n        });\n      }\n      case MessageOptionConstants.translateMessage: {\n        return new CometChatMessageOptions({\n          id: MessageOptionConstants.translateMessage,\n          title: localize(\"TRANSLATE_MESSAGE\"),\n          //inside style\n          iconURL: translateIcon,\n          onClick: null,\n          optionFor: MessageOptionForConstants.both,\n        });\n      }\n      case MessageOptionConstants.reactToMessage: {\n        return new CometChatMessageOptions({\n          id: MessageOptionConstants.reactToMessage,\n          title: localize(\"ADD_REACTION\"),\n          //inside style\n          iconURL: reaction,\n          onClick: null,\n          optionFor: MessageOptionForConstants.both,\n        });\n      }\n      default:\n        return null;\n    }\n  };\n\n  // Check for Options table once in notion\n\n  static getDefaultOptions = (type) => {\n    switch (type) {\n      case MessageTypeConstants.text:\n        return [\n          this.getMessageOptions(MessageOptionConstants.reactToMessage),\n          this.getMessageOptions(MessageOptionConstants.editMessage),\n          this.getMessageOptions(MessageOptionConstants.copyMessage),\n          this.getMessageOptions(MessageOptionConstants.deleteMessage),\n          this.getMessageOptions(MessageOptionConstants.translateMessage),\n        ];\n      case MessageTypeConstants.file:\n        return [\n          this.getMessageOptions(MessageOptionConstants.reactToMessage),\n          this.getMessageOptions(MessageOptionConstants.deleteMessage),\n        ];\n      case MessageTypeConstants.audio:\n        return [\n          this.getMessageOptions(MessageOptionConstants.reactToMessage),\n          this.getMessageOptions(MessageOptionConstants.deleteMessage),\n        ];\n      case MessageTypeConstants.video:\n        return [\n          this.getMessageOptions(MessageOptionConstants.reactToMessage),\n          this.getMessageOptions(MessageOptionConstants.deleteMessage),\n        ];\n\n      case MessageTypeConstants.image:\n        return [\n          this.getMessageOptions(MessageOptionConstants.reactToMessage),\n          this.getMessageOptions(MessageOptionConstants.deleteMessage),\n        ];\n      case MessageTypeConstants.document:\n        return [\n          this.getMessageOptions(MessageOptionConstants.reactToMessage),\n          this.getMessageOptions(MessageOptionConstants.deleteMessage),\n        ];\n      case MessageTypeConstants.poll:\n        return [\n          this.getMessageOptions(MessageOptionConstants.reactToMessage),\n          this.getMessageOptions(MessageOptionConstants.deleteMessage),\n        ];\n      case MessageTypeConstants.sticker:\n        return [\n          this.getMessageOptions(MessageOptionConstants.reactToMessage),\n          this.getMessageOptions(MessageOptionConstants.deleteMessage),\n        ];\n      case MessageTypeConstants.whiteboard:\n        return [\n          this.getMessageOptions(MessageOptionConstants.reactToMessage),\n          this.getMessageOptions(MessageOptionConstants.deleteMessage),\n        ];\n      default:\n        return [];\n    }\n  };\n}\n\nexport { CometChatMessageOptions };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}