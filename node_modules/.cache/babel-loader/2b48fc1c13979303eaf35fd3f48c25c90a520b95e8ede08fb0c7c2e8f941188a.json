{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CometChatMessageList = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _chat = require(\"@cometchat-pro/chat\");\nvar _ = require(\"..\");\nvar _2 = require(\"../..\");\nvar _spinner = _interopRequireDefault(require(\"./resources/spinner.svg\"));\nvar _hooks = require(\"./hooks\");\nvar _controller = require(\"./controller\");\nvar _style = require(\"./style\");\nvar _CometChatMessageConstants = require(\"../CometChatMessageConstants\");\nvar _Shared = require(\"../../Shared\");\nvar _3 = require(\"../\");\nvar _SmartRepliesConfiguration = require(\"../CometChatSmartReplies/SmartRepliesConfiguration\");\nvar _NewMessageIndicatorConfiguration = require(\"../CometChatNewMessageIndicator/NewMessageIndicatorConfiguration\");\nvar _MessageBubbleConfiguration = require(\"../Bubbles/CometChatMessageBubble/MessageBubbleConfiguration\");\nvar _DateConfiguration = require(\"../../Shared/PrimaryComponents/CometChatConfiguration/DateConfiguration\");\nvar _this = void 0;\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2.default)(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\n\n/**\n *\n * CometChatMessageList component retrieves the latest messages and presents them inside a message bubble, that a CometChat logged-in user has been a part of.\n * The state of the component is communicated via 3 states i.e empty, loading and error\n *\n * @version 1.0.0\n * @author CometChatTeam\n * @copyright Â© 2022 CometChat Inc.\n *\n *\n */\nvar CometChatMessageList = /*#__PURE__*/_react.default.forwardRef(function (props, ref) {\n  /**\n   * Destructuring prop values\n   */\n  var limit = props.limit,\n    user = props.user,\n    group = props.group,\n    alignment = props.alignment,\n    messageTypes = props.messageTypes,\n    excludeMessageOptions = props.excludeMessageOptions,\n    customMessageOptions = props.customMessageOptions,\n    excludeMessageTypes = props.excludeMessageTypes,\n    onlyUnread = props.onlyUnread,\n    hideMessagesFromBlockedUsers = props.hideMessagesFromBlockedUsers,\n    hideDeletedMessages = props.hideDeletedMessages,\n    tags = props.tags,\n    loadingIconURL = props.loadingIconURL,\n    customView = props.customView,\n    emptyText = props.emptyText,\n    errorText = props.errorText,\n    hideError = props.hideError,\n    customIncomingMessageSound = props.customIncomingMessageSound,\n    enableSoundForMessages = props.enableSoundForMessages,\n    sentMessageInputData = props.sentMessageInputData,\n    receivedMessageInputData = props.receivedMessageInputData,\n    style = props.style,\n    theme = props.theme,\n    messageBubbleConfiguration = props.messageBubbleConfiguration,\n    emojiKeyboardConfiguration = props.emojiKeyboardConfiguration,\n    smartRepliesConfiguration = props.smartRepliesConfiguration,\n    newMessageIndicatorConfiguration = props.newMessageIndicatorConfiguration,\n    dateConfiguration = props.dateConfiguration;\n  var lastScrollTop = 0;\n  var loggedInUserRef = _react.default.useRef(null);\n  var _React$useState = _react.default.useState(0),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n    messageCount = _React$useState2[0],\n    setMessageCount = _React$useState2[1];\n  var _React$useState3 = _react.default.useState([]),\n    _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),\n    messageList = _React$useState4[0],\n    setMessageList = _React$useState4[1];\n  var _React$useState5 = _react.default.useState(0),\n    _React$useState6 = (0, _slicedToArray2.default)(_React$useState5, 2),\n    unreadMessageCount = _React$useState6[0],\n    setUnreadMessageCount = _React$useState6[1];\n  var _React$useState7 = _react.default.useState(null),\n    _React$useState8 = (0, _slicedToArray2.default)(_React$useState7, 2),\n    callbackData = _React$useState8[0],\n    setCallbackData = _React$useState8[1];\n  var _React$useState9 = _react.default.useState((0, _2.localize)(\"LOADING\")),\n    _React$useState10 = (0, _slicedToArray2.default)(_React$useState9, 2),\n    decoratorMessage = _React$useState10[0],\n    setDecoratorMessage = _React$useState10[1];\n  var _React$useState11 = _react.default.useState(null),\n    _React$useState12 = (0, _slicedToArray2.default)(_React$useState11, 2),\n    chatWith = _React$useState12[0],\n    setChatWith = _React$useState12[1];\n  var _React$useState13 = _react.default.useState(null),\n    _React$useState14 = (0, _slicedToArray2.default)(_React$useState13, 2),\n    chatWithType = _React$useState14[0],\n    setChatWithType = _React$useState14[1];\n  var messageTypesRef = _react.default.useRef(null);\n  var messageCategoryRef = _react.default.useRef(null);\n  var messageListManagerRef = _react.default.useRef(null);\n  var messageListEndRef = _react.default.useRef(null);\n  var _React$useState15 = _react.default.useState({}),\n    _React$useState16 = (0, _slicedToArray2.default)(_React$useState15, 2),\n    viewEmojiTray = _React$useState16[0],\n    setViewEmojiTray = _React$useState16[1];\n  var _React$useState17 = _react.default.useState(null),\n    _React$useState18 = (0, _slicedToArray2.default)(_React$useState17, 2),\n    messageToReact = _React$useState18[0],\n    setMessageToReact = _React$useState18[1];\n  var _React$useState19 = _react.default.useState({}),\n    _React$useState20 = (0, _slicedToArray2.default)(_React$useState19, 2),\n    newMessage = _React$useState20[0],\n    setnewMessage = _React$useState20[1];\n  var _theme = new _2.CometChatTheme(theme !== null && theme !== void 0 ? theme : {});\n  var _messageBubbleConfiguration = messageBubbleConfiguration || new _MessageBubbleConfiguration.MessageBubbleConfiguration({});\n  var _emojiKeyboardConfiguration = emojiKeyboardConfiguration || new _3.EmojiKeyboardConfiguration({});\n  var _newMessageIndicatorConfiguration = newMessageIndicatorConfiguration || new _NewMessageIndicatorConfiguration.NewMessageIndicatorConfiguration({});\n  var _dateConfiguration = dateConfiguration || new _DateConfiguration.DateConfiguration({\n    pattern: \"dayDateFormat\"\n  });\n  /**\n   * Update messagelist\n   */\n\n  _react.default.useImperativeHandle(ref, function () {\n    return {\n      addMessage: addMessage,\n      updateMessage: updateMessage,\n      removeMessage: removeMessage,\n      deleteMessage: deleteMessage,\n      scrollToBottom: scrollToBottom,\n      translateMessage: translateMessage,\n      reactToMessages: reactToMessages\n    };\n  });\n  var messageListCallback = function messageListCallback(listenerName) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    setCallbackData({\n      name: listenerName,\n      args: [].concat(args)\n    });\n  };\n  var errorHandler = function errorHandler(errorCode) {\n    _.CometChatMessageEvents.emit(_.CometChatMessageEvents.onMessageError, errorCode);\n  };\n  var reInitializeMessageBuilder = function reInitializeMessageBuilder() {\n    resetChatWindow();\n    setDecoratorMessage(\"loading\");\n    messageListManagerRef.current.removeListeners();\n    messageListManagerRef.current = new _controller.MessageListManager(limit, user, group, onlyUnread, hideDeletedMessages, hideMessagesFromBlockedUsers, tags, messageTypesRef.current, messageCategoryRef.current);\n    (0, _hooks.fetchMessages)(messageListManagerRef === null || messageListManagerRef === void 0 ? void 0 : messageListManagerRef.current).then(function (messagelist) {\n      messageHandler(messagelist, true);\n      setMessageList(messagelist);\n      messageListManagerRef.current.attachListeners(messageListCallback);\n    });\n  };\n  /**\n   * add new message to the messageList\n   */\n\n  var addMessage = function addMessage(message) {\n    var messagelist = (0, _toConsumableArray2.default)(messageList);\n    messagelist.push(message);\n    setMessageList(messagelist); // scrollToBottom()\n  };\n  /**\n   * Set unreadCount when new message is received\n   */\n\n  var updateUnreadMessageCount = function updateUnreadMessageCount() {\n    setUnreadMessageCount(unreadMessageCount + 1);\n  };\n  /**\n   *\n   * @param {*} message\n   * Function to play notification sound if sound for messages is enabled.\n   * It checks for custom sound and if not provided plays default sound.\n   */\n\n  var playNotificationSound = function playNotificationSound(message) {\n    var _message$metadata;\n    if (message.category === _2.MessageCategoryConstants.message) {\n      if (enableSoundForMessages) {\n        if (customIncomingMessageSound) {\n          _2.CometChatSoundManager.play(_2.CometChatSoundManager.Sound.incomingMessage, customIncomingMessageSound);\n        } else {\n          _2.CometChatSoundManager.play(_2.CometChatSoundManager.Sound.incomingMessage);\n        }\n      }\n    } else if (message.category !== _2.MessageCategoryConstants.message && message !== null && message !== void 0 && (_message$metadata = message.metadata) !== null && _message$metadata !== void 0 && _message$metadata.incrementUnreadCount) {\n      if (enableSoundForMessages) {\n        if (customIncomingMessageSound) {\n          _2.CometChatSoundManager.play(customIncomingMessageSound);\n        } else {\n          _2.CometChatSoundManager.play(_2.CometChatSoundManager.Sound.incomingMessage);\n        }\n      }\n    }\n  };\n  /**\n   * Update message\n   */\n\n  var updateMessage = function updateMessage(message) {\n    var withMuid = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var messageKey;\n    var messagelist = (0, _toConsumableArray2.default)(messageList);\n    if (withMuid) {\n      messageKey = messagelist.findIndex(function (m) {\n        return m.muid === message.muid;\n      });\n    } else {\n      messageKey = messagelist.findIndex(function (m) {\n        return m.id === message.id;\n      });\n    }\n    if (messageKey > -1) {\n      var messageObject = _objectSpread(_objectSpread({}, messageList[messageKey]), message);\n      messagelist.splice(messageKey, 1, messageObject);\n      setMessageCount(messagelist.length);\n      setMessageList(messagelist);\n    }\n  };\n  /**\n   * Update message as read; show double blue tick\n   */\n\n  var updateMessageAsRead = function updateMessageAsRead(message) {\n    var messagelist = (0, _toConsumableArray2.default)(messageList);\n    var messageKey = messagelist.findIndex(function (m) {\n      return m.id === message.messageId;\n    });\n    if (messageKey > -1) {\n      var messageObject = _objectSpread({}, messageList[messageKey]);\n      messageObject.readAt = message.getReadAt();\n      messagelist.splice(messageKey, 1, messageObject);\n      setMessageList(messagelist);\n    }\n  };\n  /**\n   * Update message as deleted; show deleted message bubble\n   */\n\n  var removeMessage = function removeMessage(message) {\n    var messages = (0, _toConsumableArray2.default)(messageList);\n    var messageKey = messages.findIndex(function (m) {\n      return m.id === message.id;\n    });\n    if (messageKey > -1) {\n      if (hideDeletedMessages) {\n        messages.splice(messageKey, 1);\n      } else {\n        var messageObject = _objectSpread(_objectSpread({}, messages[messageKey]), message);\n        messages.splice(messageKey, 1, messageObject);\n      }\n      setMessageList(function () {\n        return messages;\n      });\n    }\n  };\n  /**\n   *\n   * @param {*} message\n   * emits markAsRead Event\n   */\n\n  var markMessageAsRead = function markMessageAsRead(message) {\n    if (!(message !== null && message !== void 0 && message.readAt)) {\n      _chat.CometChat.markAsRead(message).catch(function (error) {\n        errorHandler(error);\n      });\n    }\n  };\n  var handleNewMessages = function handleNewMessages(message) {\n    //handling dom lag - increment count only for main message list\n    setnewMessage(message);\n    var messageReceivedHandler = function messageReceivedHandler(message) {\n      var _messageListEndRef$cu, _messageListEndRef$cu2, _messageListEndRef$cu3;\n\n      //if the user has not scrolled in chat window(scroll is at the bottom of the chat window)\n      setMessageCount(messageCount + 1);\n      if ((messageListEndRef === null || messageListEndRef === void 0 ? void 0 : (_messageListEndRef$cu = messageListEndRef.current) === null || _messageListEndRef$cu === void 0 ? void 0 : _messageListEndRef$cu.scrollHeight) - (messageListEndRef === null || messageListEndRef === void 0 ? void 0 : (_messageListEndRef$cu2 = messageListEndRef.current) === null || _messageListEndRef$cu2 === void 0 ? void 0 : _messageListEndRef$cu2.scrollTop) - (messageListEndRef === null || messageListEndRef === void 0 ? void 0 : (_messageListEndRef$cu3 = messageListEndRef.current) === null || _messageListEndRef$cu3 === void 0 ? void 0 : _messageListEndRef$cu3.clientHeight) <= 1) {\n        if (messageCount > _.messageConstants.maximumNumOfMessages) {\n          reInitializeMessageBuilder();\n        } else {\n          playNotificationSound(message);\n          addMessage(message);\n          scrollToBottom();\n          markMessageAsRead(message);\n          _.CometChatMessageEvents.emit(_.CometChatMessageEvents.onMessageRead, message);\n        }\n      } else {\n        //if the user has scrolled up in chat window\n        playNotificationSound(message);\n        addMessage(message);\n        updateUnreadMessageCount();\n      }\n    };\n    /**\n     * message receiver is chat window group\n     */\n\n    if (chatWithType === _2.ReceiverTypeConstants.group && message.getReceiverType() === _2.ReceiverTypeConstants.group && message.getReceiverId() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.guid)) {\n      messageReceivedHandler(message);\n    } else if (chatWithType === _2.ReceiverTypeConstants.user && message.getReceiverType() === _2.ReceiverTypeConstants.user) {\n      var _loggedInUserRef$curr, _loggedInUserRef$curr2;\n\n      /**\n       * If the message sender is chat window user and message receiver is logged-in user\n       * OR\n       * If the message sender is logged-in user and message receiver is chat window user\n       */\n      if (message.getSender().uid === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.uid) && message.getReceiverId() === (loggedInUserRef === null || loggedInUserRef === void 0 ? void 0 : (_loggedInUserRef$curr = loggedInUserRef.current) === null || _loggedInUserRef$curr === void 0 ? void 0 : _loggedInUserRef$curr.uid) || message.getSender().uid === (loggedInUserRef === null || loggedInUserRef === void 0 ? void 0 : (_loggedInUserRef$curr2 = loggedInUserRef.current) === null || _loggedInUserRef$curr2 === void 0 ? void 0 : _loggedInUserRef$curr2.uid) && message.getReceiverId() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.uid)) {\n        messageReceivedHandler(message);\n      }\n    }\n  };\n  var handleNewCustomMessages = function handleNewCustomMessages(message) {\n    var _loggedInUserRef$curr3, _loggedInUserRef$curr4;\n    var customMessageReceivedHandler = function customMessageReceivedHandler(message) {\n      var _messageListEndRef$cu4, _messageListEndRef$cu5, _messageListEndRef$cu6;\n      setMessageCount(messageCount + 1); //if the user has not scrolled in chat window(scroll is at the bottom of the chat window)\n\n      if ((messageListEndRef === null || messageListEndRef === void 0 ? void 0 : (_messageListEndRef$cu4 = messageListEndRef.current) === null || _messageListEndRef$cu4 === void 0 ? void 0 : _messageListEndRef$cu4.scrollHeight) - (messageListEndRef === null || messageListEndRef === void 0 ? void 0 : (_messageListEndRef$cu5 = messageListEndRef.current) === null || _messageListEndRef$cu5 === void 0 ? void 0 : _messageListEndRef$cu5.scrollTop) - (messageListEndRef === null || messageListEndRef === void 0 ? void 0 : (_messageListEndRef$cu6 = messageListEndRef.current) === null || _messageListEndRef$cu6 === void 0 ? void 0 : _messageListEndRef$cu6.clientHeight) <= 1) {\n        if (messageCount > _.messageConstants.maximumNumOfMessages) {\n          reInitializeMessageBuilder();\n        } else {\n          playNotificationSound(message);\n          addMessage(message); // scrollToBottom();\n\n          markMessageAsRead(message);\n          _.CometChatMessageEvents.emit(_.CometChatMessageEvents.onMessageRead, message);\n        }\n      } else {\n        //if the user has scrolled in chat window\n        playNotificationSound(message);\n        addMessage(message);\n        updateUnreadMessageCount();\n      }\n    };\n    if (chatWithType === _2.ReceiverTypeConstants.group && message.getReceiverType() === _2.ReceiverTypeConstants.group && ((_loggedInUserRef$curr3 = loggedInUserRef.current) === null || _loggedInUserRef$curr3 === void 0 ? void 0 : _loggedInUserRef$curr3.uid) === message.getSender().uid && message.getReceiverId() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.guid) && (message.type === _.CometChatCustomMessageTypes.poll || message.type === _.CometChatCustomMessageTypes.document || message.type === _.CometChatCustomMessageTypes.whiteboard)) {\n      playNotificationSound();\n      addMessage(message); // scrollToBottom();\n    } else if (chatWithType === _2.ReceiverTypeConstants.group && message.getReceiverType() === _2.ReceiverTypeConstants.group && message.getReceiverId() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.guid)) {\n      customMessageReceivedHandler(message, _2.ReceiverTypeConstants.group);\n    } else if (chatWithType === _2.ReceiverTypeConstants.user && message.getReceiverType() === _2.ReceiverTypeConstants.user && message.getSender().uid === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.uid)) {\n      customMessageReceivedHandler(message, _2.ReceiverTypeConstants.user);\n    } else if (chatWithType === _2.ReceiverTypeConstants.user && message.getReceiverType() === _2.ReceiverTypeConstants.user && ((_loggedInUserRef$curr4 = loggedInUserRef.current) === null || _loggedInUserRef$curr4 === void 0 ? void 0 : _loggedInUserRef$curr4.uid) === message.getSender().uid && message.getReceiverId() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.uid) && (message.type === _.CometChatCustomMessageTypes.poll || message.type === _.CometChatCustomMessageTypes.document || message.type === _.CometChatCustomMessageTypes.whiteboard)) {\n      playNotificationSound(message);\n      addMessage(message); // scrollToBottom();\n    }\n  };\n\n  var handleMessageDeliveryAndReadReceipt = function handleMessageDeliveryAndReadReceipt(messageReceipt) {\n    //read receipts\n    if (messageReceipt.getReceiverType() === _2.ReceiverTypeConstants.user && messageReceipt.getSender().getUid() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.uid) && messageReceipt.getReceiver() === loggedInUserRef.current.uid) {\n      if (messageReceipt.getReceiptType() === \"delivery\") {\n        updateMessageAsDelivered(messageReceipt);\n      } else if (messageReceipt.getReceiptType() === \"read\") {\n        updateMessageAsRead(messageReceipt);\n      }\n    } else if (messageReceipt.getReceiverType() === _2.ReceiverTypeConstants.group && messageReceipt.getReceiver() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.guid)) {}\n  };\n  var handleMessageDelete = function handleMessageDelete(message) {\n    if (chatWithType === _2.ReceiverTypeConstants.group && message.getReceiverType() === _2.ReceiverTypeConstants.group && message.getReceiverId() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.guid)) {\n      removeMessage(message);\n    } else if (chatWith === _2.ReceiverTypeConstants.user && message.getReceiverType() === _2.ReceiverTypeConstants.user && message.getSender().uid === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.uid)) {\n      removeMessage(message);\n    }\n  };\n  var handleMessageEdit = function handleMessageEdit(message) {\n    if (chatWithType === _2.ReceiverTypeConstants.group && message.getReceiverType() === _2.ReceiverTypeConstants.group && message.getReceiverId() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.guid)) {\n      updateMessage(message);\n    } else if (chatWithType === _2.ReceiverTypeConstants.user && message.getReceiverType() === _2.ReceiverTypeConstants.user && loggedInUserRef.current.uid === message.getReceiverId() && message.getSender().uid === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.uid)) {\n      updateMessage(message);\n    } else if (chatWithType === _2.ReceiverTypeConstants.user && message.getReceiverType() === _2.ReceiverTypeConstants.user && loggedInUserRef.current.uid === message.getSender().uid && message.getReceiverId() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.uid)) {\n      updateMessage(message);\n    }\n  };\n  var handleNewGroupActionMessage = function handleNewGroupActionMessage(message) {\n    if (chatWithType === _2.ReceiverTypeConstants.group && message.getReceiverType() === _2.ReceiverTypeConstants.group && message.getReceiverId() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.guid)) {\n      playNotificationSound(message);\n      addMessage(message); // scrollToBottom();\n\n      markMessageAsRead(message);\n      _.CometChatMessageEvents.emit(_.CometChatMessageEvents.onMessageRead, message);\n    }\n  };\n  /**\n   * update message list\n   */\n\n  var prependMessages = function prependMessages(messages) {\n    var messagelist = [].concat((0, _toConsumableArray2.default)(messages), (0, _toConsumableArray2.default)(messageList));\n    setMessageList(messagelist);\n    setMessageCount(messagelist.length);\n  };\n  var messageHandler = function messageHandler(messagelist, scroll, val) {\n    messagelist.forEach(function (message) {\n      var _loggedInUserRef$curr5;\n\n      //if the sender of the message is not the loggedin user, mark the message as read.\n      if ((message === null || message === void 0 ? void 0 : message.getSender().getUid()) !== ((_loggedInUserRef$curr5 = loggedInUserRef.current) === null || _loggedInUserRef$curr5 === void 0 ? void 0 : _loggedInUserRef$curr5.uid) && !(message !== null && message !== void 0 && message.readAt)) {\n        if (message.getReceiverType() === _2.ReceiverTypeConstants.user) {\n          markMessageAsRead(message);\n          _.CometChatMessageEvents.emit(_.CometChatMessageEvents.onMessageRead, message);\n        } else if (message.getReceiverType() === _2.ReceiverTypeConstants.group) {\n          markMessageAsRead(message);\n          _.CometChatMessageEvents.emit(_.CometChatMessageEvents.onMessageRead, message);\n        }\n      }\n    });\n    if (scroll) {\n      var lastScrollPoint = val || 0;\n      scrollToBottom(lastScrollPoint);\n    }\n  };\n  var scrollToBottom = function scrollToBottom() {\n    var scrollHeight = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    setTimeout(function () {\n      if (messageListEndRef) {\n        messageListEndRef.current.scrollTop = messageListEndRef.current.scrollHeight - scrollHeight;\n      }\n    });\n  };\n  var handleScroll = function handleScroll(event) {\n    var scrollTop = event.currentTarget.scrollTop;\n    var scrollHeight = event.currentTarget.scrollHeight;\n    lastScrollTop = scrollHeight - scrollTop;\n    var top = Math.round(scrollTop) === 0;\n    if (top && messageList.length) {\n      (0, _hooks.fetchMessages)(messageListManagerRef === null || messageListManagerRef === void 0 ? void 0 : messageListManagerRef.current).then(function (messagelist) {\n        prependMessages(messagelist);\n        messageHandler(messagelist, true, lastScrollTop);\n      }).catch(function (error) {\n        errorHandler(error);\n        setDecoratorMessage((0, _2.localize)(\"SOMETHING_WRONG\"));\n      });\n    }\n  };\n  /**\n   * Update message as delivered; show double grey tick\n   */\n\n  var updateMessageAsDelivered = function updateMessageAsDelivered(message) {\n    var messagelist = (0, _toConsumableArray2.default)(messageList);\n    var messageKey = messagelist.findIndex(function (m) {\n      return m.id === message.messageId;\n    });\n    if (messageKey > -1) {\n      var messageObject = _objectSpread({}, messageList[messageKey]);\n      messageObject.deliveredAt = message.getDeliveredAt();\n      messagelist === null || messagelist === void 0 ? void 0 : messagelist.splice(messageKey, 1, messageObject);\n      setMessageList(messagelist);\n    }\n  };\n  /**\n   * Upon scrolling to bottom, reload the chat if messages cross the maximum count,\n   * or else render and update (mark them as read) the stored messages\n   */\n\n  var scrolledToBottom = function scrolledToBottom() {\n    if (unreadMessageCount <= 0) {\n      return false;\n    }\n    var totalMessageCount = messageList.length + unreadMessageCount;\n    var message = messageList[messageList.length - 1];\n    if (totalMessageCount > _.messageConstants.maximumNumOfMessages) {\n      reInitializeMessageBuilder();\n    } else {\n      setUnreadMessageCount(0);\n      scrollToBottom();\n      markMessageAsRead(message);\n      _.CometChatMessageEvents.emit(_.CometChatMessageEvents.onMessageRead, message);\n    }\n  };\n  /**\n   * upon scrolling to the bottom, update the unread messagess\n   */\n\n  /**\n   * reset message list\n   */\n\n  var resetChatWindow = function resetChatWindow() {\n    setMessageList([]);\n    setUnreadMessageCount(0);\n    setMessageCount(0);\n    setnewMessage({});\n  };\n  var handlers = {\n    onTextMessageReceived: handleNewMessages,\n    onMediaMessageReceived: handleNewMessages,\n    onCustomMessageReceived: handleNewCustomMessages,\n    onMessagesDelivered: handleMessageDeliveryAndReadReceipt,\n    onMessagesRead: handleMessageDeliveryAndReadReceipt,\n    onMessageDeleted: handleMessageDelete,\n    onMessageEdited: handleMessageEdit,\n    onGroupMemberScopeChanged: handleNewGroupActionMessage,\n    onGroupMemberKicked: handleNewGroupActionMessage,\n    onGroupMemberBanned: handleNewGroupActionMessage,\n    onGroupMemberUnbanned: handleNewGroupActionMessage,\n    onMemberAddedToGroup: handleNewGroupActionMessage,\n    onGroupMemberLeft: handleNewGroupActionMessage,\n    onGroupMemberJoined: handleNewGroupActionMessage\n  };\n  (0, _hooks.Hooks)(limit, user, group, excludeMessageTypes, onlyUnread, hideDeletedMessages, hideMessagesFromBlockedUsers, tags, messageTypes, loggedInUserRef, messageList, setMessageList, setDecoratorMessage, setChatWith, setChatWithType, messageHandler, messageListCallback, handlers, callbackData, messageTypesRef, messageCategoryRef, messageListManagerRef, _2.localize, errorHandler, chatWith, chatWithType, setMessageCount, setnewMessage);\n  /**\n   *\n   * @param {*} message\n   * returns translated text and push it into metadata of message Object\n   */\n\n  var translateMessage = function translateMessage(message) {\n    var messageId = message.id;\n    var messageText = message.text;\n    var translateToLanguage = _2.CometChatLocalize.getLocale();\n    var translateMessage = \"\";\n    _chat.CometChat.callExtension(_2.ExtensionConstants.messageTranslation, \"POST\", _2.ExtensionURLs.translate, {\n      msgId: messageId,\n      text: messageText,\n      languages: [translateToLanguage]\n    }).then(function (result) {\n      if (result !== null && result !== void 0 && result.hasOwnProperty(\"translations\") && result.translations.length) {\n        var messageTranslation = result.translations[0];\n        translateMessage = \"\".concat(messageTranslation[\"message_translated\"]);\n        if (message.hasOwnProperty(\"metadata\")) {\n          Object.assign(message.metadata, {\n            translatedText: translateMessage\n          });\n        } else {\n          Object.assign(message, {\n            metadata: {\n              translatedText: translateMessage\n            }\n          });\n        }\n        updateMessage(message);\n      }\n    }).catch(function (error) {\n      errorHandler(error);\n    });\n  };\n  /**\n   *\n   * @param {*} message\n   * emits edit Message event\n   */\n\n  var editMessage = function editMessage(message) {\n    _.CometChatMessageEvents.emit(_.CometChatMessageEvents.onMessageEdit, {\n      message: message,\n      status: _CometChatMessageConstants.messageStatus.inprogress\n    });\n  };\n  /**\n   *\n   * @param {*} message\n   * copies message text to the clipboard\n   */\n\n  var copyMessage = function copyMessage(message) {\n    navigator.clipboard.writeText(message.text);\n  };\n  /**\n   *\n   * @param {*} message\n   * Deletes the selected message\n   */\n\n  var deleteMessage = function deleteMessage(message) {\n    _chat.CometChat.deleteMessage(message.id).then(function (deletedMessage) {\n      removeMessage(deletedMessage);\n    }).catch(function (error) {\n      errorHandler(error);\n    });\n  };\n  /**\n   *\n   * @param {*} message\n   * @param {*} event\n   * set visibility of Emoji Tray to true\n   */\n\n  var onReactToMessages = function onReactToMessages(message, event, emoji) {\n    // To remove reaction by clicking on the reacted emoji\n    if (emoji) {\n      reactToMessages(message, emoji);\n    } // Open EmojiTray When clicked on Reaction messageOption or Add Reaction button\n    else {\n      setMessageToReact(message);\n      setViewEmojiTray(function (old) {\n        return {\n          emojiTrayPreview: !old.emojiTrayPreview,\n          event: event\n        };\n      });\n    }\n  };\n  /**\n   *\n   * @param {*} emojiObject\n   * triggers reactToMessages function after closing the emojiKeyboard\n   */\n\n  var onReactionSelected = function onReactionSelected(emojiObject) {\n    setViewEmojiTray(function (old) {\n      return {\n        emojiTrayPreview: !old.emojiTrayPreview\n      };\n    });\n    reactToMessages(messageToReact, emojiObject);\n  };\n  /**\n   *\n   * @returns EmojiKeyboard inside tooltip\n   */\n\n  var emojiBoard = function emojiBoard() {\n    if (viewEmojiTray.emojiTrayPreview) {\n      var _viewEmojiTray$event, _viewEmojiTray$event2;\n      return /*#__PURE__*/_react.default.createElement(_2.CometChatPopover, {\n        position: \"top\",\n        x: viewEmojiTray === null || viewEmojiTray === void 0 ? void 0 : (_viewEmojiTray$event = viewEmojiTray.event) === null || _viewEmojiTray$event === void 0 ? void 0 : _viewEmojiTray$event.clientX,\n        y: viewEmojiTray === null || viewEmojiTray === void 0 ? void 0 : (_viewEmojiTray$event2 = viewEmojiTray.event) === null || _viewEmojiTray$event2 === void 0 ? void 0 : _viewEmojiTray$event2.clientY,\n        style: (0, _style.emojiBoardToolTipStyle)(_theme)\n      }, /*#__PURE__*/_react.default.createElement(_2.CometChatEmojiKeyboard, {\n        style: (0, _style.emojiKeyBoardStyle)(_theme),\n        hideSearch: _emojiKeyboardConfiguration.hideSearch,\n        onClick: onReactionSelected.bind(_this) || _emojiKeyboardConfiguration.onClick\n      }));\n    } else {\n      return null;\n    }\n  };\n  /**\n   *\n   * @param {*} message\n   * @param {*} emoji\n   * Calls extension reaction to Messages\n   */\n\n  var reactToMessages = function reactToMessages(message, emoji) {\n    var _loggedInUserRef$curr6, _loggedInUserRef$curr7, _loggedInUserRef$curr8, _loggedInUserRef$curr9;\n    var reactionObject = {};\n    var newMessageObject = {};\n    var messageObject = _objectSpread({}, message);\n    var userObject = {};\n    if (loggedInUserRef !== null && loggedInUserRef !== void 0 && (_loggedInUserRef$curr6 = loggedInUserRef.current) !== null && _loggedInUserRef$curr6 !== void 0 && (_loggedInUserRef$curr7 = _loggedInUserRef$curr6.avatar) !== null && _loggedInUserRef$curr7 !== void 0 && _loggedInUserRef$curr7.length) {\n      userObject[\"avatar\"] = loggedInUserRef.current.avatar;\n    }\n    if (loggedInUserRef !== null && loggedInUserRef !== void 0 && (_loggedInUserRef$curr8 = loggedInUserRef.current) !== null && _loggedInUserRef$curr8 !== void 0 && (_loggedInUserRef$curr9 = _loggedInUserRef$curr8.name) !== null && _loggedInUserRef$curr9 !== void 0 && _loggedInUserRef$curr9.length) {\n      userObject[\"name\"] = loggedInUserRef.current.name;\n    }\n    var emojiObject = (0, _defineProperty2.default)({}, emoji, (0, _defineProperty2.default)({}, loggedInUserRef.current.uid, userObject));\n    var reactionExtensionsData = (0, _2.getExtensionsData)(messageObject, _2.ExtensionConstants.reactions);\n    if (reactionExtensionsData) {\n      if (reactionExtensionsData[emoji]) {\n        //if the reactions metadata has the selected emoji/reaction for the loggedin user\n        if (reactionExtensionsData[emoji][loggedInUserRef.current.uid]) {\n          reactionObject = _objectSpread({}, messageObject[\"metadata\"][\"@injected\"][\"extensions\"][\"reactions\"]);\n          delete reactionObject[emoji][loggedInUserRef.current.uid];\n        } else {\n          reactionObject = _objectSpread(_objectSpread({}, messageObject[\"metadata\"][\"@injected\"][\"extensions\"][\"reactions\"]), {}, (0, _defineProperty2.default)({}, emoji, _objectSpread(_objectSpread({}, messageObject[\"metadata\"][\"@injected\"][\"extensions\"][\"reactions\"][emoji]), {}, (0, _defineProperty2.default)({}, loggedInUserRef.current.uid, userObject))));\n        }\n      } else {\n        reactionObject = _objectSpread(_objectSpread({}, messageObject[\"metadata\"][\"@injected\"][\"extensions\"][\"reactions\"]), emojiObject);\n      }\n    } else {\n      if (!messageObject.hasOwnProperty(\"metadata\")) {\n        messageObject[\"metadata\"] = {};\n      }\n      if (!messageObject[\"metadata\"].hasOwnProperty(\"@injected\")) {\n        messageObject[\"metadata\"][\"@injected\"] = {};\n      }\n      if (!messageObject[\"metadata\"][\"@injected\"].hasOwnProperty(\"extensions\")) {\n        messageObject[\"metadata\"][\"@injected\"][\"extensions\"] = {};\n      }\n      if (!messageObject[\"metadata\"][\"@injected\"][\"extensions\"].hasOwnProperty(\"reactions\")) {\n        messageObject[\"metadata\"][\"@injected\"][\"extensions\"][\"reactions\"] = {};\n      }\n      reactionObject = _objectSpread({}, emojiObject);\n    }\n    var metadataObject = {\n      metadata: _objectSpread(_objectSpread({}, messageObject[\"metadata\"]), {}, {\n        \"@injected\": _objectSpread(_objectSpread({}, messageObject[\"metadata\"][\"@injected\"]), {}, {\n          extensions: _objectSpread(_objectSpread({}, messageObject[\"metadata\"][\"@injected\"][\"extensions\"]), {}, {\n            reactions: _objectSpread({}, reactionObject)\n          })\n        })\n      })\n    };\n    newMessageObject = _objectSpread(_objectSpread({}, messageObject), {}, {\n      data: _objectSpread(_objectSpread({}, messageObject), metadataObject)\n    }, metadataObject);\n    updateMessage(newMessageObject);\n    _chat.CometChat.callExtension(_2.ExtensionConstants.reactions, \"POST\", _2.ExtensionURLs.reaction, {\n      msgId: message.id,\n      emoji: emoji\n    }).catch(function (error) {\n      errorHandler(error);\n      updateMessage(message);\n    });\n  };\n  /**\n   *\n   * @param {*} messageOptions\n   * Sets MessageOptions Onclick function\n   */\n\n  var setOptionsCallbackData = function setOptionsCallbackData(messageOptions) {\n    var optionsList = (0, _toConsumableArray2.default)(messageOptions);\n    optionsList.forEach(function (eachMessageOption) {\n      switch (eachMessageOption.id) {\n        case _2.MessageOptionConstants.deleteMessage:\n          if (eachMessageOption.onClick === null) {\n            eachMessageOption.onClick = deleteMessage.bind(_this);\n          }\n          break;\n        case _2.MessageOptionConstants.editMessage:\n          if (eachMessageOption.onClick === null) {\n            eachMessageOption.onClick = editMessage.bind(_this);\n          }\n          break;\n        case _2.MessageOptionConstants.copyMessage:\n          if (eachMessageOption.onClick === null) {\n            eachMessageOption.onClick = copyMessage.bind(_this);\n          }\n          break;\n        case _2.MessageOptionConstants.reactToMessage:\n          if (eachMessageOption.onClick === null) {\n            eachMessageOption.onClick = onReactToMessages.bind(_this);\n          }\n          break;\n        case _2.MessageOptionConstants.translateMessage:\n          if (eachMessageOption.onClick === null) {\n            eachMessageOption.onClick = translateMessage.bind(_this);\n          }\n          break;\n        default:\n          break;\n      }\n    });\n    return optionsList;\n  };\n  /**\n   *\n   * @param {*} messageObject\n   * @returns messageOptions according to the type of message and sender's identity\n   */\n\n  var filterMessageOptions = function filterMessageOptions(messageObject) {\n    var _messageTypes = messageTypes && messageTypes.length ? messageTypes : (0, _.getDefaultTypes)();\n    var messageOptions = []; // If User sends messageTypes as\n\n    _messageTypes.forEach(function (messageTemplateObject) {\n      // Checking Message types for Template object and message object to set options\n      if (messageTemplateObject.type === messageObject.type) {\n        messageOptions = messageTemplateObject.options.filter(function (option) {\n          var _loggedInUserRef$curr10, _messageObject$sender, _loggedInUserRef$curr11, _messageObject$sender2;\n          return (\n            // Segregating Sender and receiver options.\n            ((_loggedInUserRef$curr10 = loggedInUserRef.current) === null || _loggedInUserRef$curr10 === void 0 ? void 0 : _loggedInUserRef$curr10.uid) === (messageObject === null || messageObject === void 0 ? void 0 : (_messageObject$sender = messageObject.sender) === null || _messageObject$sender === void 0 ? void 0 : _messageObject$sender.uid) && option.optionFor === _2.MessageOptionForConstants.sender || option.optionFor === _2.MessageOptionForConstants.both || ((_loggedInUserRef$curr11 = loggedInUserRef.current) === null || _loggedInUserRef$curr11 === void 0 ? void 0 : _loggedInUserRef$curr11.uid) !== (messageObject === null || messageObject === void 0 ? void 0 : (_messageObject$sender2 = messageObject.sender) === null || _messageObject$sender2 === void 0 ? void 0 : _messageObject$sender2.uid) && option.optionFor === _2.MessageOptionForConstants.receiver || option.optionFor === _2.MessageOptionForConstants.both\n          );\n        });\n      }\n    }); // If user exclude's an option from options list\n\n    if (excludeMessageOptions && excludeMessageOptions.length) {\n      excludeMessageOptions.forEach(function (excludeOption) {\n        messageOptions.forEach(function (option) {\n          if (option.id === excludeOption) {\n            var index = messageOptions.indexOf(option);\n            if (index > -1) {\n              messageOptions.splice(index, 1); // 2nd parameter means remove one item only\n            }\n          }\n        });\n      });\n    } // If user sends in customMessageOptions\n\n    if (customMessageOptions !== null && customMessageOptions !== void 0 && customMessageOptions.length) {\n      customMessageOptions.forEach(function (option) {\n        messageOptions.push(option);\n      });\n    } // Setting callback data for Message Option's onClick\n\n    return setOptionsCallbackData(messageOptions);\n  };\n  /**\n   *\n   * @param {*} message\n   * @returns filtering custom View from message Types sent in by the user\n   */\n\n  var filterCustomView = function filterCustomView(message) {\n    if (messageTypes !== null && messageTypes !== void 0 && messageTypes.length) {\n      var templateObject = messageTypes.filter(function (messageTemplateObject) {\n        return messageTemplateObject.type === message.type && messageTemplateObject.customView;\n      });\n      if (templateObject !== null && templateObject !== void 0 && templateObject.customView) {\n        return templateObject.customView;\n      }\n      return null;\n    }\n  };\n  /**\n   *\n   * @param {*} customView\n   * @returns customView for handling empty,error and loading states\n   */\n\n  var getCustomView = function getCustomView(customView) {\n    return /*#__PURE__*/_react.default.createElement(customView, props);\n  };\n  var getMessageContainer = function getMessageContainer() {\n    var _localize;\n    var messageContainer = null;\n    if (messageList.length === 0 && (decoratorMessage === null || decoratorMessage === void 0 ? void 0 : decoratorMessage.toLowerCase()) === (0, _2.localize)(\"LOADING\").toLowerCase()) {\n      messageContainer = /*#__PURE__*/_react.default.createElement(\"div\", {\n        style: (0, _style.decoratorMsgStyle)(style),\n        className: \"messagelist__decorator-message\"\n      }, customView !== null && customView !== void 0 && customView.loading ? getCustomView(customView.loading, props) : /*#__PURE__*/_react.default.createElement(\"div\", {\n        style: (0, _style.decoratorMsgImgStyle)(style, loadingIconURL, _theme),\n        className: \"decorator-message\"\n      }));\n    } else if (messageList.length === 0 && (decoratorMessage === null || decoratorMessage === void 0 ? void 0 : decoratorMessage.toLowerCase()) === (0, _2.localize)(\"NO_MESSAGES_FOUND\").toLowerCase()) {\n      messageContainer = /*#__PURE__*/_react.default.createElement(\"div\", {\n        style: (0, _style.decoratorMsgStyle)(style),\n        className: \"messagelist__decorator-message\"\n      }, customView !== null && customView !== void 0 && customView.empty ? getCustomView(customView === null || customView === void 0 ? void 0 : customView.empty, props) : /*#__PURE__*/_react.default.createElement(\"p\", {\n        style: (0, _style.decoratorMsgTxtStyle)(style, _2.fontHelper, _theme, decoratorMessage, _2.localize),\n        className: \"decorator-message\"\n      }, emptyText));\n    } else if ((decoratorMessage === null || decoratorMessage === void 0 ? void 0 : decoratorMessage.toLowerCase()) === ((_localize = (0, _2.localize)(\"NO_MESSAGE_TYPE_SET\")) === null || _localize === void 0 ? void 0 : _localize.toLowerCase())) {\n      messageContainer = /*#__PURE__*/_react.default.createElement(\"div\", {\n        style: (0, _style.decoratorMsgStyle)(style),\n        className: \"messagelist__decorator-message\"\n      }, customView !== null && customView !== void 0 && customView.empty ? getCustomView(customView === null || customView === void 0 ? void 0 : customView.empty, props) : /*#__PURE__*/_react.default.createElement(\"p\", {\n        style: (0, _style.decoratorMsgTxtStyle)(style, _2.fontHelper, _theme, decoratorMessage, _2.localize),\n        className: \"decorator-message\"\n      }, decoratorMessage));\n    } else if (!hideError && (decoratorMessage === null || decoratorMessage === void 0 ? void 0 : decoratorMessage.toLowerCase()) === (0, _2.localize)(\"SOMETHING_WRONG\").toLowerCase()) {\n      messageContainer = /*#__PURE__*/_react.default.createElement(\"div\", {\n        style: (0, _style.decoratorMsgStyle)(style),\n        className: \"messagelist__decorator-message\"\n      }, customView !== null && customView !== void 0 && customView.error ? getCustomView(customView.error, props) : /*#__PURE__*/_react.default.createElement(\"p\", {\n        style: (0, _style.decoratorMsgTxtStyle)(style, _2.fontHelper, _theme, decoratorMessage, _2.localize),\n        className: \"decorator-message\"\n      }, errorText));\n    }\n    return messageContainer;\n  };\n  /**\n   * Empty new Message Received State to close Smart reply Preview\n   */\n\n  var onClose = function onClose() {\n    setnewMessage({});\n  };\n  var _smartRepliesConfiguration = smartRepliesConfiguration || new _SmartRepliesConfiguration.SmartRepliesConfiguration({\n    onClose: onClose\n  });\n  /**\n   *\n   * @returns smart suggestions to the user as per the message received\n   */\n\n  var getSmartReplies = function getSmartReplies() {\n    if (Object.keys(newMessage).length) {\n      return /*#__PURE__*/_react.default.createElement(_.CometChatSmartReplies, {\n        messageObject: newMessage,\n        customOutgoingMessageSound: _smartRepliesConfiguration.customOutgoingMessageSound,\n        enableSoundForMessages: _smartRepliesConfiguration.enableSoundForMessages,\n        loggedInUser: loggedInUserRef.current,\n        onClick: _smartRepliesConfiguration.onClick,\n        style: (0, _style.smartReplyStyle)(_theme),\n        onClose: onClose.bind(_this)\n      });\n    }\n  };\n  /**\n   *\n   * @returns new Message Indicator banner\n   */\n\n  var newMessageIndicator = function newMessageIndicator() {\n    if (unreadMessageCount >= 1) {\n      var text = unreadMessageCount > 1 ? \"\".concat(unreadMessageCount, \" \").concat((0, _2.localize)(\"NEW_MESSAGES\")) : \"\".concat(unreadMessageCount, \" \").concat((0, _2.localize)(\"NEW_MESSAGE\"));\n      return /*#__PURE__*/_react.default.createElement(_.CometChatNewMessageIndicator, {\n        text: text,\n        onClick: scrolledToBottom.bind(_this) || _newMessageIndicatorConfiguration.onClick,\n        Icon: _newMessageIndicatorConfiguration.Icon,\n        style: (0, _style.messageIndicatorStyle)(_theme)\n      });\n    }\n    return null;\n  };\n  /**\n   *\n   * @returns Items to render in Message List Component\n   */\n\n  var renderItems = function renderItems() {\n    // to hold date value for first message\n    var previousMessageDate = null;\n    return messageList.map(function (eachMessage) {\n      var _previousMessageDate, _previousMessageDate2, _previousMessageDate3, _dateConfiguration$st, _theme$palette, _theme$palette2, _dateConfiguration$st2, _theme$typography, _loggedInUserRef$curr12, _eachMessage$sender, _loggedInUserRef$curr13, _eachMessage$sender2;\n\n      // date label component\n      var dateSeparator = null; // Converting Unix  timeStamp to readable date format\n\n      var currentMessageDate = new Date(eachMessage.sentAt * 1000);\n      var currentDate = currentMessageDate.getDate() + \"-\" + currentMessageDate.getMonth + \"-\" + currentMessageDate.getFullYear();\n      var previousDate = ((_previousMessageDate = previousMessageDate) === null || _previousMessageDate === void 0 ? void 0 : _previousMessageDate.getDate()) + \"-\" + ((_previousMessageDate2 = previousMessageDate) === null || _previousMessageDate2 === void 0 ? void 0 : _previousMessageDate2.getMonth) + \"-\" + ((_previousMessageDate3 = previousMessageDate) === null || _previousMessageDate3 === void 0 ? void 0 : _previousMessageDate3.getFullYear());\n      var pattern = _dateConfiguration === null || _dateConfiguration === void 0 ? void 0 : _dateConfiguration.pattern;\n      var customPattern = _dateConfiguration === null || _dateConfiguration === void 0 ? void 0 : _dateConfiguration.customPattern;\n      var dateStyle = new _Shared.DateStyles(_objectSpread(_objectSpread({}, _dateConfiguration === null || _dateConfiguration === void 0 ? void 0 : _dateConfiguration.style), {}, {\n        textColor: (_dateConfiguration === null || _dateConfiguration === void 0 ? void 0 : (_dateConfiguration$st = _dateConfiguration.style) === null || _dateConfiguration$st === void 0 ? void 0 : _dateConfiguration$st.textColor) || (_theme === null || _theme === void 0 ? void 0 : (_theme$palette = _theme.palette) === null || _theme$palette === void 0 ? void 0 : _theme$palette.accent500[_theme === null || _theme === void 0 ? void 0 : (_theme$palette2 = _theme.palette) === null || _theme$palette2 === void 0 ? void 0 : _theme$palette2.mode]),\n        textFont: (_dateConfiguration === null || _dateConfiguration === void 0 ? void 0 : (_dateConfiguration$st2 = _dateConfiguration.style) === null || _dateConfiguration$st2 === void 0 ? void 0 : _dateConfiguration$st2.textFont) || (0, _2.fontHelper)(_theme === null || _theme === void 0 ? void 0 : (_theme$typography = _theme.typography) === null || _theme$typography === void 0 ? void 0 : _theme$typography.caption2)\n      })); // Comparing Date, Month, Year of the two dates\n\n      if (previousDate !== currentDate) {\n        dateSeparator = /*#__PURE__*/_react.default.createElement(\"div\", {\n          style: (0, _style.messageDateContainerStyle)(_theme)\n        }, /*#__PURE__*/_react.default.createElement(\"div\", {\n          style: (0, _style.messageDateStyle)(_theme)\n        }, /*#__PURE__*/_react.default.createElement(_Shared.CometChatDate, {\n          timestamp: eachMessage === null || eachMessage === void 0 ? void 0 : eachMessage.sentAt,\n          pattern: pattern,\n          customPattern: customPattern,\n          style: dateStyle\n        })));\n      }\n      previousMessageDate = currentMessageDate;\n      var messageKey = eachMessage.id || eachMessage.muid;\n      var className = \"message__\".concat(eachMessage.type, \" message__kit__background\");\n      var alignmentValue = _2.MessageBubbleAlignmentConstants.left;\n      var background;\n      var messageBubbleData = {};\n      if (alignment === (_2.MessageListAlignmentConstants === null || _2.MessageListAlignmentConstants === void 0 ? void 0 : _2.MessageListAlignmentConstants.standard) && ((_loggedInUserRef$curr12 = loggedInUserRef.current) === null || _loggedInUserRef$curr12 === void 0 ? void 0 : _loggedInUserRef$curr12.uid) === (eachMessage === null || eachMessage === void 0 ? void 0 : (_eachMessage$sender = eachMessage.sender) === null || _eachMessage$sender === void 0 ? void 0 : _eachMessage$sender.uid)) {\n        alignmentValue = _2.MessageBubbleAlignmentConstants.right;\n        background = {\n          background: _theme.palette.primary[_theme.palette.mode]\n        };\n        messageBubbleData = sentMessageInputData;\n      } else if (alignment === (_2.MessageListAlignmentConstants === null || _2.MessageListAlignmentConstants === void 0 ? void 0 : _2.MessageListAlignmentConstants.left) && ((_loggedInUserRef$curr13 = loggedInUserRef.current) === null || _loggedInUserRef$curr13 === void 0 ? void 0 : _loggedInUserRef$curr13.uid) === (eachMessage === null || eachMessage === void 0 ? void 0 : (_eachMessage$sender2 = eachMessage.sender) === null || _eachMessage$sender2 === void 0 ? void 0 : _eachMessage$sender2.uid)) {\n        alignmentValue = _2.MessageBubbleAlignmentConstants.left;\n        background = {\n          background: _theme.palette.secondary[_theme.palette.mode]\n        };\n        messageBubbleData = sentMessageInputData;\n      } else {\n        alignmentValue = _2.MessageBubbleAlignmentConstants.left;\n        background = {\n          background: _theme.palette.secondary[_theme.palette.mode]\n        };\n        messageBubbleData = receivedMessageInputData;\n      }\n      var style = _objectSpread(_objectSpread({\n        width: \"100%\",\n        height: \"100%\",\n        border: \"0 none\",\n        borderRadius: \"12px\",\n        nameTextFont: (0, _2.fontHelper)(_theme.typography.caption1),\n        timestampFont: (0, _2.fontHelper)(_theme.typography.caption2)\n      }, background), {}, {\n        nameTextColor: _theme.palette.accent500[_theme.palette.mode],\n        timestampColor: _theme.palette.accent[_theme.palette.mode]\n      });\n      return !eachMessage.action ? /*#__PURE__*/_react.default.createElement(_react.default.Fragment, {\n        key: messageKey\n      }, dateSeparator, /*#__PURE__*/_react.default.createElement(\"div\", {\n        key: messageKey,\n        className: className,\n        style: (0, _style.messageBubbleStyle)(alignment, loggedInUserRef.current, eachMessage)\n      }, /*#__PURE__*/_react.default.createElement(_.CometChatMessageBubble, {\n        key: messageKey,\n        messageBubbleData: messageBubbleData || _messageBubbleConfiguration.messageBubbleData,\n        alignment: alignmentValue,\n        timeAlignment: _messageBubbleConfiguration.timeAlignment,\n        messageObject: eachMessage,\n        messageOptions: filterMessageOptions(eachMessage),\n        loggedInUser: loggedInUserRef.current,\n        customView: filterCustomView(eachMessage),\n        style: _objectSpread({}, style),\n        theme: _theme,\n        updateReaction: onReactToMessages.bind(_this)\n      }))) : null;\n    });\n  };\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"message__list\",\n    style: (0, _style.chatListStyle)(style, _theme)\n  }, /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"list__wrapper\",\n    style: (0, _style.listWrapperStyle)(style, _theme),\n    ref: messageListEndRef,\n    onScroll: handleScroll\n  }, getMessageContainer(), newMessageIndicator(), emojiBoard(), renderItems()), getSmartReplies());\n});\nexports.CometChatMessageList = CometChatMessageList;\nCometChatMessageList.defaultProps = {\n  limit: 30,\n  user: null,\n  group: null,\n  alignment: \"standard\",\n  messageTypes: null,\n  excludeMessageTypes: null,\n  excludeMessageOptions: null,\n  customMessageOptions: null,\n  onlyUnread: false,\n  hideMessagesFromBlockedUsers: false,\n  hideDeletedMessages: false,\n  tags: null,\n  loadingIconURL: _spinner.default,\n  customView: {\n    loading: \"\",\n    empty: \"\",\n    error: \"\"\n  },\n  emptyText: \"No messages here yet...\",\n  errorText: \"Something went wrong\",\n  hideError: false,\n  customIncomingMessageSound: \"\",\n  enableSoundForMessages: true,\n  sentMessageInputData: {\n    thumbnail: true,\n    title: true,\n    timestamp: true,\n    readReceipt: true\n  },\n  receivedMessageInputData: {\n    thumbnail: true,\n    title: true,\n    timestamp: true,\n    readReceipt: false\n  },\n  style: {\n    width: \"100%\",\n    height: \"100%\",\n    border: \"\",\n    borderRadius: \"8px\",\n    background: \"\",\n    textFont: \"400 12px Inter, sans-serif\",\n    textColor: \"rgb(20,20,20)\"\n  },\n  messageBubbleConfiguration: null,\n  emojiKeyboardConfiguration: null,\n  smartRepliesConfiguration: null,\n  newMessageIndicatorConfiguration: null,\n  dateConfiguration: null\n};\nCometChatMessageList.propTypes = {\n  limit: _propTypes.default.number,\n  user: _propTypes.default.object,\n  group: _propTypes.default.object,\n  alignment: _propTypes.default.string,\n  messageTypes: _propTypes.default.array,\n  excludeMessageTypes: _propTypes.default.array,\n  excludeMessageOptions: _propTypes.default.array,\n  customMessageOptions: _propTypes.default.array,\n  onlyUnread: _propTypes.default.bool,\n  hideMessagesFromBlockedUsers: _propTypes.default.bool,\n  hideDeletedMessages: _propTypes.default.bool,\n  tags: _propTypes.default.array,\n  loadingIconURL: _propTypes.default.string,\n  customView: _propTypes.default.object,\n  emptyText: _propTypes.default.string,\n  errorText: _propTypes.default.string,\n  hideError: _propTypes.default.bool,\n  customIncomingMessageSound: _propTypes.default.string,\n  enableSoundForMessages: _propTypes.default.bool,\n  sentMessageInputData: _propTypes.default.object,\n  receivedMessageInputData: _propTypes.default.object,\n  style: _propTypes.default.object,\n  messageBubbleConfiguration: _propTypes.default.object,\n  emojiKeyboardConfiguration: _propTypes.default.object,\n  smartRepliesConfiguration: _propTypes.default.object,\n  newMessageIndicatorConfiguration: _propTypes.default.object,\n  dateConfiguration: _propTypes.default.object\n};","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","CometChatMessageList","_defineProperty2","_toConsumableArray2","_slicedToArray2","_react","_propTypes","_chat","_","_2","_spinner","_hooks","_controller","_style","_CometChatMessageConstants","_Shared","_3","_SmartRepliesConfiguration","_NewMessageIndicatorConfiguration","_MessageBubbleConfiguration","_DateConfiguration","_this","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","default","getOwnPropertyDescriptors","defineProperties","forwardRef","props","ref","limit","user","group","alignment","messageTypes","excludeMessageOptions","customMessageOptions","excludeMessageTypes","onlyUnread","hideMessagesFromBlockedUsers","hideDeletedMessages","tags","loadingIconURL","customView","emptyText","errorText","hideError","customIncomingMessageSound","enableSoundForMessages","sentMessageInputData","receivedMessageInputData","style","theme","messageBubbleConfiguration","emojiKeyboardConfiguration","smartRepliesConfiguration","newMessageIndicatorConfiguration","dateConfiguration","lastScrollTop","loggedInUserRef","useRef","_React$useState","useState","_React$useState2","messageCount","setMessageCount","_React$useState3","_React$useState4","messageList","setMessageList","_React$useState5","_React$useState6","unreadMessageCount","setUnreadMessageCount","_React$useState7","_React$useState8","callbackData","setCallbackData","_React$useState9","localize","_React$useState10","decoratorMessage","setDecoratorMessage","_React$useState11","_React$useState12","chatWith","setChatWith","_React$useState13","_React$useState14","chatWithType","setChatWithType","messageTypesRef","messageCategoryRef","messageListManagerRef","messageListEndRef","_React$useState15","_React$useState16","viewEmojiTray","setViewEmojiTray","_React$useState17","_React$useState18","messageToReact","setMessageToReact","_React$useState19","_React$useState20","newMessage","setnewMessage","_theme","CometChatTheme","_messageBubbleConfiguration","MessageBubbleConfiguration","_emojiKeyboardConfiguration","EmojiKeyboardConfiguration","_newMessageIndicatorConfiguration","NewMessageIndicatorConfiguration","_dateConfiguration","DateConfiguration","pattern","useImperativeHandle","addMessage","updateMessage","removeMessage","deleteMessage","scrollToBottom","translateMessage","reactToMessages","messageListCallback","listenerName","_len","args","Array","_key","name","concat","errorHandler","errorCode","CometChatMessageEvents","emit","onMessageError","reInitializeMessageBuilder","resetChatWindow","current","removeListeners","MessageListManager","fetchMessages","then","messagelist","messageHandler","attachListeners","message","updateUnreadMessageCount","playNotificationSound","_message$metadata","category","MessageCategoryConstants","CometChatSoundManager","play","Sound","incomingMessage","metadata","incrementUnreadCount","withMuid","undefined","messageKey","findIndex","m","muid","id","messageObject","splice","updateMessageAsRead","messageId","readAt","getReadAt","messages","markMessageAsRead","CometChat","markAsRead","catch","error","handleNewMessages","messageReceivedHandler","_messageListEndRef$cu","_messageListEndRef$cu2","_messageListEndRef$cu3","scrollHeight","scrollTop","clientHeight","messageConstants","maximumNumOfMessages","onMessageRead","ReceiverTypeConstants","getReceiverType","getReceiverId","guid","_loggedInUserRef$curr","_loggedInUserRef$curr2","getSender","uid","handleNewCustomMessages","_loggedInUserRef$curr3","_loggedInUserRef$curr4","customMessageReceivedHandler","_messageListEndRef$cu4","_messageListEndRef$cu5","_messageListEndRef$cu6","type","CometChatCustomMessageTypes","poll","document","whiteboard","handleMessageDeliveryAndReadReceipt","messageReceipt","getUid","getReceiver","getReceiptType","updateMessageAsDelivered","handleMessageDelete","handleMessageEdit","handleNewGroupActionMessage","prependMessages","scroll","val","_loggedInUserRef$curr5","lastScrollPoint","setTimeout","handleScroll","event","currentTarget","top","Math","round","deliveredAt","getDeliveredAt","scrolledToBottom","totalMessageCount","handlers","onTextMessageReceived","onMediaMessageReceived","onCustomMessageReceived","onMessagesDelivered","onMessagesRead","onMessageDeleted","onMessageEdited","onGroupMemberScopeChanged","onGroupMemberKicked","onGroupMemberBanned","onGroupMemberUnbanned","onMemberAddedToGroup","onGroupMemberLeft","onGroupMemberJoined","Hooks","messageText","text","translateToLanguage","CometChatLocalize","getLocale","callExtension","ExtensionConstants","messageTranslation","ExtensionURLs","translate","msgId","languages","result","hasOwnProperty","translations","assign","translatedText","editMessage","onMessageEdit","status","messageStatus","inprogress","copyMessage","navigator","clipboard","writeText","deletedMessage","onReactToMessages","emoji","old","emojiTrayPreview","onReactionSelected","emojiObject","emojiBoard","_viewEmojiTray$event","_viewEmojiTray$event2","createElement","CometChatPopover","position","x","clientX","y","clientY","emojiBoardToolTipStyle","CometChatEmojiKeyboard","emojiKeyBoardStyle","hideSearch","onClick","bind","_loggedInUserRef$curr6","_loggedInUserRef$curr7","_loggedInUserRef$curr8","_loggedInUserRef$curr9","reactionObject","newMessageObject","userObject","avatar","reactionExtensionsData","getExtensionsData","reactions","metadataObject","extensions","data","reaction","setOptionsCallbackData","messageOptions","optionsList","eachMessageOption","MessageOptionConstants","reactToMessage","filterMessageOptions","_messageTypes","getDefaultTypes","messageTemplateObject","options","option","_loggedInUserRef$curr10","_messageObject$sender","_loggedInUserRef$curr11","_messageObject$sender2","sender","optionFor","MessageOptionForConstants","both","receiver","excludeOption","index","indexOf","filterCustomView","templateObject","getCustomView","getMessageContainer","_localize","messageContainer","toLowerCase","decoratorMsgStyle","className","loading","decoratorMsgImgStyle","empty","decoratorMsgTxtStyle","fontHelper","onClose","_smartRepliesConfiguration","SmartRepliesConfiguration","getSmartReplies","CometChatSmartReplies","customOutgoingMessageSound","loggedInUser","smartReplyStyle","newMessageIndicator","CometChatNewMessageIndicator","Icon","messageIndicatorStyle","renderItems","previousMessageDate","map","eachMessage","_previousMessageDate","_previousMessageDate2","_previousMessageDate3","_dateConfiguration$st","_theme$palette","_theme$palette2","_dateConfiguration$st2","_theme$typography","_loggedInUserRef$curr12","_eachMessage$sender","_loggedInUserRef$curr13","_eachMessage$sender2","dateSeparator","currentMessageDate","Date","sentAt","currentDate","getDate","getMonth","getFullYear","previousDate","customPattern","dateStyle","DateStyles","textColor","palette","accent500","mode","textFont","typography","caption2","messageDateContainerStyle","messageDateStyle","CometChatDate","timestamp","alignmentValue","MessageBubbleAlignmentConstants","left","background","messageBubbleData","MessageListAlignmentConstants","standard","right","primary","secondary","width","height","border","borderRadius","nameTextFont","caption1","timestampFont","nameTextColor","timestampColor","accent","action","Fragment","messageBubbleStyle","CometChatMessageBubble","timeAlignment","updateReaction","chatListStyle","listWrapperStyle","onScroll","defaultProps","thumbnail","title","readReceipt","propTypes","number","string","array","bool"],"sources":["/home/admin1/dev/react/react-sample-guide/sample-react-guides/node_modules/cometchat-react-ui-kit/dist/Messages/CometChatMessageList/index.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CometChatMessageList = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _chat = require(\"@cometchat-pro/chat\");\n\nvar _ = require(\"..\");\n\nvar _2 = require(\"../..\");\n\nvar _spinner = _interopRequireDefault(require(\"./resources/spinner.svg\"));\n\nvar _hooks = require(\"./hooks\");\n\nvar _controller = require(\"./controller\");\n\nvar _style = require(\"./style\");\n\nvar _CometChatMessageConstants = require(\"../CometChatMessageConstants\");\n\nvar _Shared = require(\"../../Shared\");\n\nvar _3 = require(\"../\");\n\nvar _SmartRepliesConfiguration = require(\"../CometChatSmartReplies/SmartRepliesConfiguration\");\n\nvar _NewMessageIndicatorConfiguration = require(\"../CometChatNewMessageIndicator/NewMessageIndicatorConfiguration\");\n\nvar _MessageBubbleConfiguration = require(\"../Bubbles/CometChatMessageBubble/MessageBubbleConfiguration\");\n\nvar _DateConfiguration = require(\"../../Shared/PrimaryComponents/CometChatConfiguration/DateConfiguration\");\n\nvar _this = void 0;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n/**\n *\n * CometChatMessageList component retrieves the latest messages and presents them inside a message bubble, that a CometChat logged-in user has been a part of.\n * The state of the component is communicated via 3 states i.e empty, loading and error\n *\n * @version 1.0.0\n * @author CometChatTeam\n * @copyright Â© 2022 CometChat Inc.\n *\n *\n */\nvar CometChatMessageList = /*#__PURE__*/_react.default.forwardRef(function (props, ref) {\n  /**\n   * Destructuring prop values\n   */\n  var limit = props.limit,\n      user = props.user,\n      group = props.group,\n      alignment = props.alignment,\n      messageTypes = props.messageTypes,\n      excludeMessageOptions = props.excludeMessageOptions,\n      customMessageOptions = props.customMessageOptions,\n      excludeMessageTypes = props.excludeMessageTypes,\n      onlyUnread = props.onlyUnread,\n      hideMessagesFromBlockedUsers = props.hideMessagesFromBlockedUsers,\n      hideDeletedMessages = props.hideDeletedMessages,\n      tags = props.tags,\n      loadingIconURL = props.loadingIconURL,\n      customView = props.customView,\n      emptyText = props.emptyText,\n      errorText = props.errorText,\n      hideError = props.hideError,\n      customIncomingMessageSound = props.customIncomingMessageSound,\n      enableSoundForMessages = props.enableSoundForMessages,\n      sentMessageInputData = props.sentMessageInputData,\n      receivedMessageInputData = props.receivedMessageInputData,\n      style = props.style,\n      theme = props.theme,\n      messageBubbleConfiguration = props.messageBubbleConfiguration,\n      emojiKeyboardConfiguration = props.emojiKeyboardConfiguration,\n      smartRepliesConfiguration = props.smartRepliesConfiguration,\n      newMessageIndicatorConfiguration = props.newMessageIndicatorConfiguration,\n      dateConfiguration = props.dateConfiguration;\n  var lastScrollTop = 0;\n\n  var loggedInUserRef = _react.default.useRef(null);\n\n  var _React$useState = _react.default.useState(0),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      messageCount = _React$useState2[0],\n      setMessageCount = _React$useState2[1];\n\n  var _React$useState3 = _react.default.useState([]),\n      _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),\n      messageList = _React$useState4[0],\n      setMessageList = _React$useState4[1];\n\n  var _React$useState5 = _react.default.useState(0),\n      _React$useState6 = (0, _slicedToArray2.default)(_React$useState5, 2),\n      unreadMessageCount = _React$useState6[0],\n      setUnreadMessageCount = _React$useState6[1];\n\n  var _React$useState7 = _react.default.useState(null),\n      _React$useState8 = (0, _slicedToArray2.default)(_React$useState7, 2),\n      callbackData = _React$useState8[0],\n      setCallbackData = _React$useState8[1];\n\n  var _React$useState9 = _react.default.useState((0, _2.localize)(\"LOADING\")),\n      _React$useState10 = (0, _slicedToArray2.default)(_React$useState9, 2),\n      decoratorMessage = _React$useState10[0],\n      setDecoratorMessage = _React$useState10[1];\n\n  var _React$useState11 = _react.default.useState(null),\n      _React$useState12 = (0, _slicedToArray2.default)(_React$useState11, 2),\n      chatWith = _React$useState12[0],\n      setChatWith = _React$useState12[1];\n\n  var _React$useState13 = _react.default.useState(null),\n      _React$useState14 = (0, _slicedToArray2.default)(_React$useState13, 2),\n      chatWithType = _React$useState14[0],\n      setChatWithType = _React$useState14[1];\n\n  var messageTypesRef = _react.default.useRef(null);\n\n  var messageCategoryRef = _react.default.useRef(null);\n\n  var messageListManagerRef = _react.default.useRef(null);\n\n  var messageListEndRef = _react.default.useRef(null);\n\n  var _React$useState15 = _react.default.useState({}),\n      _React$useState16 = (0, _slicedToArray2.default)(_React$useState15, 2),\n      viewEmojiTray = _React$useState16[0],\n      setViewEmojiTray = _React$useState16[1];\n\n  var _React$useState17 = _react.default.useState(null),\n      _React$useState18 = (0, _slicedToArray2.default)(_React$useState17, 2),\n      messageToReact = _React$useState18[0],\n      setMessageToReact = _React$useState18[1];\n\n  var _React$useState19 = _react.default.useState({}),\n      _React$useState20 = (0, _slicedToArray2.default)(_React$useState19, 2),\n      newMessage = _React$useState20[0],\n      setnewMessage = _React$useState20[1];\n\n  var _theme = new _2.CometChatTheme(theme !== null && theme !== void 0 ? theme : {});\n\n  var _messageBubbleConfiguration = messageBubbleConfiguration || new _MessageBubbleConfiguration.MessageBubbleConfiguration({});\n\n  var _emojiKeyboardConfiguration = emojiKeyboardConfiguration || new _3.EmojiKeyboardConfiguration({});\n\n  var _newMessageIndicatorConfiguration = newMessageIndicatorConfiguration || new _NewMessageIndicatorConfiguration.NewMessageIndicatorConfiguration({});\n\n  var _dateConfiguration = dateConfiguration || new _DateConfiguration.DateConfiguration({\n    pattern: \"dayDateFormat\"\n  });\n  /**\n   * Update messagelist\n   */\n\n\n  _react.default.useImperativeHandle(ref, function () {\n    return {\n      addMessage: addMessage,\n      updateMessage: updateMessage,\n      removeMessage: removeMessage,\n      deleteMessage: deleteMessage,\n      scrollToBottom: scrollToBottom,\n      translateMessage: translateMessage,\n      reactToMessages: reactToMessages\n    };\n  });\n\n  var messageListCallback = function messageListCallback(listenerName) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    setCallbackData({\n      name: listenerName,\n      args: [].concat(args)\n    });\n  };\n\n  var errorHandler = function errorHandler(errorCode) {\n    _.CometChatMessageEvents.emit(_.CometChatMessageEvents.onMessageError, errorCode);\n  };\n\n  var reInitializeMessageBuilder = function reInitializeMessageBuilder() {\n    resetChatWindow();\n    setDecoratorMessage(\"loading\");\n    messageListManagerRef.current.removeListeners();\n    messageListManagerRef.current = new _controller.MessageListManager(limit, user, group, onlyUnread, hideDeletedMessages, hideMessagesFromBlockedUsers, tags, messageTypesRef.current, messageCategoryRef.current);\n    (0, _hooks.fetchMessages)(messageListManagerRef === null || messageListManagerRef === void 0 ? void 0 : messageListManagerRef.current).then(function (messagelist) {\n      messageHandler(messagelist, true);\n      setMessageList(messagelist);\n      messageListManagerRef.current.attachListeners(messageListCallback);\n    });\n  };\n  /**\n   * add new message to the messageList\n   */\n\n\n  var addMessage = function addMessage(message) {\n    var messagelist = (0, _toConsumableArray2.default)(messageList);\n    messagelist.push(message);\n    setMessageList(messagelist); // scrollToBottom()\n  };\n  /**\n   * Set unreadCount when new message is received\n   */\n\n\n  var updateUnreadMessageCount = function updateUnreadMessageCount() {\n    setUnreadMessageCount(unreadMessageCount + 1);\n  };\n  /**\n   *\n   * @param {*} message\n   * Function to play notification sound if sound for messages is enabled.\n   * It checks for custom sound and if not provided plays default sound.\n   */\n\n\n  var playNotificationSound = function playNotificationSound(message) {\n    var _message$metadata;\n\n    if (message.category === _2.MessageCategoryConstants.message) {\n      if (enableSoundForMessages) {\n        if (customIncomingMessageSound) {\n          _2.CometChatSoundManager.play(_2.CometChatSoundManager.Sound.incomingMessage, customIncomingMessageSound);\n        } else {\n          _2.CometChatSoundManager.play(_2.CometChatSoundManager.Sound.incomingMessage);\n        }\n      }\n    } else if (message.category !== _2.MessageCategoryConstants.message && message !== null && message !== void 0 && (_message$metadata = message.metadata) !== null && _message$metadata !== void 0 && _message$metadata.incrementUnreadCount) {\n      if (enableSoundForMessages) {\n        if (customIncomingMessageSound) {\n          _2.CometChatSoundManager.play(customIncomingMessageSound);\n        } else {\n          _2.CometChatSoundManager.play(_2.CometChatSoundManager.Sound.incomingMessage);\n        }\n      }\n    }\n  };\n  /**\n   * Update message\n   */\n\n\n  var updateMessage = function updateMessage(message) {\n    var withMuid = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var messageKey;\n    var messagelist = (0, _toConsumableArray2.default)(messageList);\n\n    if (withMuid) {\n      messageKey = messagelist.findIndex(function (m) {\n        return m.muid === message.muid;\n      });\n    } else {\n      messageKey = messagelist.findIndex(function (m) {\n        return m.id === message.id;\n      });\n    }\n\n    if (messageKey > -1) {\n      var messageObject = _objectSpread(_objectSpread({}, messageList[messageKey]), message);\n\n      messagelist.splice(messageKey, 1, messageObject);\n      setMessageCount(messagelist.length);\n      setMessageList(messagelist);\n    }\n  };\n  /**\n   * Update message as read; show double blue tick\n   */\n\n\n  var updateMessageAsRead = function updateMessageAsRead(message) {\n    var messagelist = (0, _toConsumableArray2.default)(messageList);\n    var messageKey = messagelist.findIndex(function (m) {\n      return m.id === message.messageId;\n    });\n\n    if (messageKey > -1) {\n      var messageObject = _objectSpread({}, messageList[messageKey]);\n\n      messageObject.readAt = message.getReadAt();\n      messagelist.splice(messageKey, 1, messageObject);\n      setMessageList(messagelist);\n    }\n  };\n  /**\n   * Update message as deleted; show deleted message bubble\n   */\n\n\n  var removeMessage = function removeMessage(message) {\n    var messages = (0, _toConsumableArray2.default)(messageList);\n    var messageKey = messages.findIndex(function (m) {\n      return m.id === message.id;\n    });\n\n    if (messageKey > -1) {\n      if (hideDeletedMessages) {\n        messages.splice(messageKey, 1);\n      } else {\n        var messageObject = _objectSpread(_objectSpread({}, messages[messageKey]), message);\n\n        messages.splice(messageKey, 1, messageObject);\n      }\n\n      setMessageList(function () {\n        return messages;\n      });\n    }\n  };\n  /**\n   *\n   * @param {*} message\n   * emits markAsRead Event\n   */\n\n\n  var markMessageAsRead = function markMessageAsRead(message) {\n    if (!(message !== null && message !== void 0 && message.readAt)) {\n      _chat.CometChat.markAsRead(message).catch(function (error) {\n        errorHandler(error);\n      });\n    }\n  };\n\n  var handleNewMessages = function handleNewMessages(message) {\n    //handling dom lag - increment count only for main message list\n    setnewMessage(message);\n\n    var messageReceivedHandler = function messageReceivedHandler(message) {\n      var _messageListEndRef$cu, _messageListEndRef$cu2, _messageListEndRef$cu3;\n\n      //if the user has not scrolled in chat window(scroll is at the bottom of the chat window)\n      setMessageCount(messageCount + 1);\n\n      if ((messageListEndRef === null || messageListEndRef === void 0 ? void 0 : (_messageListEndRef$cu = messageListEndRef.current) === null || _messageListEndRef$cu === void 0 ? void 0 : _messageListEndRef$cu.scrollHeight) - (messageListEndRef === null || messageListEndRef === void 0 ? void 0 : (_messageListEndRef$cu2 = messageListEndRef.current) === null || _messageListEndRef$cu2 === void 0 ? void 0 : _messageListEndRef$cu2.scrollTop) - (messageListEndRef === null || messageListEndRef === void 0 ? void 0 : (_messageListEndRef$cu3 = messageListEndRef.current) === null || _messageListEndRef$cu3 === void 0 ? void 0 : _messageListEndRef$cu3.clientHeight) <= 1) {\n        if (messageCount > _.messageConstants.maximumNumOfMessages) {\n          reInitializeMessageBuilder();\n        } else {\n          playNotificationSound(message);\n          addMessage(message);\n          scrollToBottom();\n          markMessageAsRead(message);\n\n          _.CometChatMessageEvents.emit(_.CometChatMessageEvents.onMessageRead, message);\n        }\n      } else {\n        //if the user has scrolled up in chat window\n        playNotificationSound(message);\n        addMessage(message);\n        updateUnreadMessageCount();\n      }\n    };\n    /**\n     * message receiver is chat window group\n     */\n\n\n    if (chatWithType === _2.ReceiverTypeConstants.group && message.getReceiverType() === _2.ReceiverTypeConstants.group && message.getReceiverId() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.guid)) {\n      messageReceivedHandler(message);\n    } else if (chatWithType === _2.ReceiverTypeConstants.user && message.getReceiverType() === _2.ReceiverTypeConstants.user) {\n      var _loggedInUserRef$curr, _loggedInUserRef$curr2;\n\n      /**\n       * If the message sender is chat window user and message receiver is logged-in user\n       * OR\n       * If the message sender is logged-in user and message receiver is chat window user\n       */\n      if (message.getSender().uid === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.uid) && message.getReceiverId() === (loggedInUserRef === null || loggedInUserRef === void 0 ? void 0 : (_loggedInUserRef$curr = loggedInUserRef.current) === null || _loggedInUserRef$curr === void 0 ? void 0 : _loggedInUserRef$curr.uid) || message.getSender().uid === (loggedInUserRef === null || loggedInUserRef === void 0 ? void 0 : (_loggedInUserRef$curr2 = loggedInUserRef.current) === null || _loggedInUserRef$curr2 === void 0 ? void 0 : _loggedInUserRef$curr2.uid) && message.getReceiverId() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.uid)) {\n        messageReceivedHandler(message);\n      }\n    }\n  };\n\n  var handleNewCustomMessages = function handleNewCustomMessages(message) {\n    var _loggedInUserRef$curr3, _loggedInUserRef$curr4;\n\n    var customMessageReceivedHandler = function customMessageReceivedHandler(message) {\n      var _messageListEndRef$cu4, _messageListEndRef$cu5, _messageListEndRef$cu6;\n\n      setMessageCount(messageCount + 1); //if the user has not scrolled in chat window(scroll is at the bottom of the chat window)\n\n      if ((messageListEndRef === null || messageListEndRef === void 0 ? void 0 : (_messageListEndRef$cu4 = messageListEndRef.current) === null || _messageListEndRef$cu4 === void 0 ? void 0 : _messageListEndRef$cu4.scrollHeight) - (messageListEndRef === null || messageListEndRef === void 0 ? void 0 : (_messageListEndRef$cu5 = messageListEndRef.current) === null || _messageListEndRef$cu5 === void 0 ? void 0 : _messageListEndRef$cu5.scrollTop) - (messageListEndRef === null || messageListEndRef === void 0 ? void 0 : (_messageListEndRef$cu6 = messageListEndRef.current) === null || _messageListEndRef$cu6 === void 0 ? void 0 : _messageListEndRef$cu6.clientHeight) <= 1) {\n        if (messageCount > _.messageConstants.maximumNumOfMessages) {\n          reInitializeMessageBuilder();\n        } else {\n          playNotificationSound(message);\n          addMessage(message); // scrollToBottom();\n\n          markMessageAsRead(message);\n\n          _.CometChatMessageEvents.emit(_.CometChatMessageEvents.onMessageRead, message);\n        }\n      } else {\n        //if the user has scrolled in chat window\n        playNotificationSound(message);\n        addMessage(message);\n        updateUnreadMessageCount();\n      }\n    };\n\n    if (chatWithType === _2.ReceiverTypeConstants.group && message.getReceiverType() === _2.ReceiverTypeConstants.group && ((_loggedInUserRef$curr3 = loggedInUserRef.current) === null || _loggedInUserRef$curr3 === void 0 ? void 0 : _loggedInUserRef$curr3.uid) === message.getSender().uid && message.getReceiverId() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.guid) && (message.type === _.CometChatCustomMessageTypes.poll || message.type === _.CometChatCustomMessageTypes.document || message.type === _.CometChatCustomMessageTypes.whiteboard)) {\n      playNotificationSound();\n      addMessage(message); // scrollToBottom();\n    } else if (chatWithType === _2.ReceiverTypeConstants.group && message.getReceiverType() === _2.ReceiverTypeConstants.group && message.getReceiverId() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.guid)) {\n      customMessageReceivedHandler(message, _2.ReceiverTypeConstants.group);\n    } else if (chatWithType === _2.ReceiverTypeConstants.user && message.getReceiverType() === _2.ReceiverTypeConstants.user && message.getSender().uid === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.uid)) {\n      customMessageReceivedHandler(message, _2.ReceiverTypeConstants.user);\n    } else if (chatWithType === _2.ReceiverTypeConstants.user && message.getReceiverType() === _2.ReceiverTypeConstants.user && ((_loggedInUserRef$curr4 = loggedInUserRef.current) === null || _loggedInUserRef$curr4 === void 0 ? void 0 : _loggedInUserRef$curr4.uid) === message.getSender().uid && message.getReceiverId() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.uid) && (message.type === _.CometChatCustomMessageTypes.poll || message.type === _.CometChatCustomMessageTypes.document || message.type === _.CometChatCustomMessageTypes.whiteboard)) {\n      playNotificationSound(message);\n      addMessage(message); // scrollToBottom();\n    }\n  };\n\n  var handleMessageDeliveryAndReadReceipt = function handleMessageDeliveryAndReadReceipt(messageReceipt) {\n    //read receipts\n    if (messageReceipt.getReceiverType() === _2.ReceiverTypeConstants.user && messageReceipt.getSender().getUid() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.uid) && messageReceipt.getReceiver() === loggedInUserRef.current.uid) {\n      if (messageReceipt.getReceiptType() === \"delivery\") {\n        updateMessageAsDelivered(messageReceipt);\n      } else if (messageReceipt.getReceiptType() === \"read\") {\n        updateMessageAsRead(messageReceipt);\n      }\n    } else if (messageReceipt.getReceiverType() === _2.ReceiverTypeConstants.group && messageReceipt.getReceiver() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.guid)) {}\n  };\n\n  var handleMessageDelete = function handleMessageDelete(message) {\n    if (chatWithType === _2.ReceiverTypeConstants.group && message.getReceiverType() === _2.ReceiverTypeConstants.group && message.getReceiverId() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.guid)) {\n      removeMessage(message);\n    } else if (chatWith === _2.ReceiverTypeConstants.user && message.getReceiverType() === _2.ReceiverTypeConstants.user && message.getSender().uid === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.uid)) {\n      removeMessage(message);\n    }\n  };\n\n  var handleMessageEdit = function handleMessageEdit(message) {\n    if (chatWithType === _2.ReceiverTypeConstants.group && message.getReceiverType() === _2.ReceiverTypeConstants.group && message.getReceiverId() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.guid)) {\n      updateMessage(message);\n    } else if (chatWithType === _2.ReceiverTypeConstants.user && message.getReceiverType() === _2.ReceiverTypeConstants.user && loggedInUserRef.current.uid === message.getReceiverId() && message.getSender().uid === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.uid)) {\n      updateMessage(message);\n    } else if (chatWithType === _2.ReceiverTypeConstants.user && message.getReceiverType() === _2.ReceiverTypeConstants.user && loggedInUserRef.current.uid === message.getSender().uid && message.getReceiverId() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.uid)) {\n      updateMessage(message);\n    }\n  };\n\n  var handleNewGroupActionMessage = function handleNewGroupActionMessage(message) {\n    if (chatWithType === _2.ReceiverTypeConstants.group && message.getReceiverType() === _2.ReceiverTypeConstants.group && message.getReceiverId() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.guid)) {\n      playNotificationSound(message);\n      addMessage(message); // scrollToBottom();\n\n      markMessageAsRead(message);\n\n      _.CometChatMessageEvents.emit(_.CometChatMessageEvents.onMessageRead, message);\n    }\n  };\n  /**\n   * update message list\n   */\n\n\n  var prependMessages = function prependMessages(messages) {\n    var messagelist = [].concat((0, _toConsumableArray2.default)(messages), (0, _toConsumableArray2.default)(messageList));\n    setMessageList(messagelist);\n    setMessageCount(messagelist.length);\n  };\n\n  var messageHandler = function messageHandler(messagelist, scroll, val) {\n    messagelist.forEach(function (message) {\n      var _loggedInUserRef$curr5;\n\n      //if the sender of the message is not the loggedin user, mark the message as read.\n      if ((message === null || message === void 0 ? void 0 : message.getSender().getUid()) !== ((_loggedInUserRef$curr5 = loggedInUserRef.current) === null || _loggedInUserRef$curr5 === void 0 ? void 0 : _loggedInUserRef$curr5.uid) && !(message !== null && message !== void 0 && message.readAt)) {\n        if (message.getReceiverType() === _2.ReceiverTypeConstants.user) {\n          markMessageAsRead(message);\n\n          _.CometChatMessageEvents.emit(_.CometChatMessageEvents.onMessageRead, message);\n        } else if (message.getReceiverType() === _2.ReceiverTypeConstants.group) {\n          markMessageAsRead(message);\n\n          _.CometChatMessageEvents.emit(_.CometChatMessageEvents.onMessageRead, message);\n        }\n      }\n    });\n\n    if (scroll) {\n      var lastScrollPoint = val || 0;\n      scrollToBottom(lastScrollPoint);\n    }\n  };\n\n  var scrollToBottom = function scrollToBottom() {\n    var scrollHeight = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    setTimeout(function () {\n      if (messageListEndRef) {\n        messageListEndRef.current.scrollTop = messageListEndRef.current.scrollHeight - scrollHeight;\n      }\n    });\n  };\n\n  var handleScroll = function handleScroll(event) {\n    var scrollTop = event.currentTarget.scrollTop;\n    var scrollHeight = event.currentTarget.scrollHeight;\n    lastScrollTop = scrollHeight - scrollTop;\n    var top = Math.round(scrollTop) === 0;\n\n    if (top && messageList.length) {\n      (0, _hooks.fetchMessages)(messageListManagerRef === null || messageListManagerRef === void 0 ? void 0 : messageListManagerRef.current).then(function (messagelist) {\n        prependMessages(messagelist);\n        messageHandler(messagelist, true, lastScrollTop);\n      }).catch(function (error) {\n        errorHandler(error);\n        setDecoratorMessage((0, _2.localize)(\"SOMETHING_WRONG\"));\n      });\n    }\n  };\n  /**\n   * Update message as delivered; show double grey tick\n   */\n\n\n  var updateMessageAsDelivered = function updateMessageAsDelivered(message) {\n    var messagelist = (0, _toConsumableArray2.default)(messageList);\n    var messageKey = messagelist.findIndex(function (m) {\n      return m.id === message.messageId;\n    });\n\n    if (messageKey > -1) {\n      var messageObject = _objectSpread({}, messageList[messageKey]);\n\n      messageObject.deliveredAt = message.getDeliveredAt();\n      messagelist === null || messagelist === void 0 ? void 0 : messagelist.splice(messageKey, 1, messageObject);\n      setMessageList(messagelist);\n    }\n  };\n  /**\n   * Upon scrolling to bottom, reload the chat if messages cross the maximum count,\n   * or else render and update (mark them as read) the stored messages\n   */\n\n\n  var scrolledToBottom = function scrolledToBottom() {\n    if (unreadMessageCount <= 0) {\n      return false;\n    }\n\n    var totalMessageCount = messageList.length + unreadMessageCount;\n    var message = messageList[messageList.length - 1];\n\n    if (totalMessageCount > _.messageConstants.maximumNumOfMessages) {\n      reInitializeMessageBuilder();\n    } else {\n      setUnreadMessageCount(0);\n      scrollToBottom();\n      markMessageAsRead(message);\n\n      _.CometChatMessageEvents.emit(_.CometChatMessageEvents.onMessageRead, message);\n    }\n  };\n  /**\n   * upon scrolling to the bottom, update the unread messagess\n   */\n\n  /**\n   * reset message list\n   */\n\n\n  var resetChatWindow = function resetChatWindow() {\n    setMessageList([]);\n    setUnreadMessageCount(0);\n    setMessageCount(0);\n    setnewMessage({});\n  };\n\n  var handlers = {\n    onTextMessageReceived: handleNewMessages,\n    onMediaMessageReceived: handleNewMessages,\n    onCustomMessageReceived: handleNewCustomMessages,\n    onMessagesDelivered: handleMessageDeliveryAndReadReceipt,\n    onMessagesRead: handleMessageDeliveryAndReadReceipt,\n    onMessageDeleted: handleMessageDelete,\n    onMessageEdited: handleMessageEdit,\n    onGroupMemberScopeChanged: handleNewGroupActionMessage,\n    onGroupMemberKicked: handleNewGroupActionMessage,\n    onGroupMemberBanned: handleNewGroupActionMessage,\n    onGroupMemberUnbanned: handleNewGroupActionMessage,\n    onMemberAddedToGroup: handleNewGroupActionMessage,\n    onGroupMemberLeft: handleNewGroupActionMessage,\n    onGroupMemberJoined: handleNewGroupActionMessage\n  };\n  (0, _hooks.Hooks)(limit, user, group, excludeMessageTypes, onlyUnread, hideDeletedMessages, hideMessagesFromBlockedUsers, tags, messageTypes, loggedInUserRef, messageList, setMessageList, setDecoratorMessage, setChatWith, setChatWithType, messageHandler, messageListCallback, handlers, callbackData, messageTypesRef, messageCategoryRef, messageListManagerRef, _2.localize, errorHandler, chatWith, chatWithType, setMessageCount, setnewMessage);\n  /**\n   *\n   * @param {*} message\n   * returns translated text and push it into metadata of message Object\n   */\n\n  var translateMessage = function translateMessage(message) {\n    var messageId = message.id;\n    var messageText = message.text;\n\n    var translateToLanguage = _2.CometChatLocalize.getLocale();\n\n    var translateMessage = \"\";\n\n    _chat.CometChat.callExtension(_2.ExtensionConstants.messageTranslation, \"POST\", _2.ExtensionURLs.translate, {\n      msgId: messageId,\n      text: messageText,\n      languages: [translateToLanguage]\n    }).then(function (result) {\n      if (result !== null && result !== void 0 && result.hasOwnProperty(\"translations\") && result.translations.length) {\n        var messageTranslation = result.translations[0];\n        translateMessage = \"\".concat(messageTranslation[\"message_translated\"]);\n\n        if (message.hasOwnProperty(\"metadata\")) {\n          Object.assign(message.metadata, {\n            translatedText: translateMessage\n          });\n        } else {\n          Object.assign(message, {\n            metadata: {\n              translatedText: translateMessage\n            }\n          });\n        }\n\n        updateMessage(message);\n      }\n    }).catch(function (error) {\n      errorHandler(error);\n    });\n  };\n  /**\n   *\n   * @param {*} message\n   * emits edit Message event\n   */\n\n\n  var editMessage = function editMessage(message) {\n    _.CometChatMessageEvents.emit(_.CometChatMessageEvents.onMessageEdit, {\n      message: message,\n      status: _CometChatMessageConstants.messageStatus.inprogress\n    });\n  };\n  /**\n   *\n   * @param {*} message\n   * copies message text to the clipboard\n   */\n\n\n  var copyMessage = function copyMessage(message) {\n    navigator.clipboard.writeText(message.text);\n  };\n  /**\n   *\n   * @param {*} message\n   * Deletes the selected message\n   */\n\n\n  var deleteMessage = function deleteMessage(message) {\n    _chat.CometChat.deleteMessage(message.id).then(function (deletedMessage) {\n      removeMessage(deletedMessage);\n    }).catch(function (error) {\n      errorHandler(error);\n    });\n  };\n  /**\n   *\n   * @param {*} message\n   * @param {*} event\n   * set visibility of Emoji Tray to true\n   */\n\n\n  var onReactToMessages = function onReactToMessages(message, event, emoji) {\n    // To remove reaction by clicking on the reacted emoji\n    if (emoji) {\n      reactToMessages(message, emoji);\n    } // Open EmojiTray When clicked on Reaction messageOption or Add Reaction button\n    else {\n      setMessageToReact(message);\n      setViewEmojiTray(function (old) {\n        return {\n          emojiTrayPreview: !old.emojiTrayPreview,\n          event: event\n        };\n      });\n    }\n  };\n  /**\n   *\n   * @param {*} emojiObject\n   * triggers reactToMessages function after closing the emojiKeyboard\n   */\n\n\n  var onReactionSelected = function onReactionSelected(emojiObject) {\n    setViewEmojiTray(function (old) {\n      return {\n        emojiTrayPreview: !old.emojiTrayPreview\n      };\n    });\n    reactToMessages(messageToReact, emojiObject);\n  };\n  /**\n   *\n   * @returns EmojiKeyboard inside tooltip\n   */\n\n\n  var emojiBoard = function emojiBoard() {\n    if (viewEmojiTray.emojiTrayPreview) {\n      var _viewEmojiTray$event, _viewEmojiTray$event2;\n\n      return /*#__PURE__*/_react.default.createElement(_2.CometChatPopover, {\n        position: \"top\",\n        x: viewEmojiTray === null || viewEmojiTray === void 0 ? void 0 : (_viewEmojiTray$event = viewEmojiTray.event) === null || _viewEmojiTray$event === void 0 ? void 0 : _viewEmojiTray$event.clientX,\n        y: viewEmojiTray === null || viewEmojiTray === void 0 ? void 0 : (_viewEmojiTray$event2 = viewEmojiTray.event) === null || _viewEmojiTray$event2 === void 0 ? void 0 : _viewEmojiTray$event2.clientY,\n        style: (0, _style.emojiBoardToolTipStyle)(_theme)\n      }, /*#__PURE__*/_react.default.createElement(_2.CometChatEmojiKeyboard, {\n        style: (0, _style.emojiKeyBoardStyle)(_theme),\n        hideSearch: _emojiKeyboardConfiguration.hideSearch,\n        onClick: onReactionSelected.bind(_this) || _emojiKeyboardConfiguration.onClick\n      }));\n    } else {\n      return null;\n    }\n  };\n  /**\n   *\n   * @param {*} message\n   * @param {*} emoji\n   * Calls extension reaction to Messages\n   */\n\n\n  var reactToMessages = function reactToMessages(message, emoji) {\n    var _loggedInUserRef$curr6, _loggedInUserRef$curr7, _loggedInUserRef$curr8, _loggedInUserRef$curr9;\n\n    var reactionObject = {};\n    var newMessageObject = {};\n\n    var messageObject = _objectSpread({}, message);\n\n    var userObject = {};\n\n    if (loggedInUserRef !== null && loggedInUserRef !== void 0 && (_loggedInUserRef$curr6 = loggedInUserRef.current) !== null && _loggedInUserRef$curr6 !== void 0 && (_loggedInUserRef$curr7 = _loggedInUserRef$curr6.avatar) !== null && _loggedInUserRef$curr7 !== void 0 && _loggedInUserRef$curr7.length) {\n      userObject[\"avatar\"] = loggedInUserRef.current.avatar;\n    }\n\n    if (loggedInUserRef !== null && loggedInUserRef !== void 0 && (_loggedInUserRef$curr8 = loggedInUserRef.current) !== null && _loggedInUserRef$curr8 !== void 0 && (_loggedInUserRef$curr9 = _loggedInUserRef$curr8.name) !== null && _loggedInUserRef$curr9 !== void 0 && _loggedInUserRef$curr9.length) {\n      userObject[\"name\"] = loggedInUserRef.current.name;\n    }\n\n    var emojiObject = (0, _defineProperty2.default)({}, emoji, (0, _defineProperty2.default)({}, loggedInUserRef.current.uid, userObject));\n    var reactionExtensionsData = (0, _2.getExtensionsData)(messageObject, _2.ExtensionConstants.reactions);\n\n    if (reactionExtensionsData) {\n      if (reactionExtensionsData[emoji]) {\n        //if the reactions metadata has the selected emoji/reaction for the loggedin user\n        if (reactionExtensionsData[emoji][loggedInUserRef.current.uid]) {\n          reactionObject = _objectSpread({}, messageObject[\"metadata\"][\"@injected\"][\"extensions\"][\"reactions\"]);\n          delete reactionObject[emoji][loggedInUserRef.current.uid];\n        } else {\n          reactionObject = _objectSpread(_objectSpread({}, messageObject[\"metadata\"][\"@injected\"][\"extensions\"][\"reactions\"]), {}, (0, _defineProperty2.default)({}, emoji, _objectSpread(_objectSpread({}, messageObject[\"metadata\"][\"@injected\"][\"extensions\"][\"reactions\"][emoji]), {}, (0, _defineProperty2.default)({}, loggedInUserRef.current.uid, userObject))));\n        }\n      } else {\n        reactionObject = _objectSpread(_objectSpread({}, messageObject[\"metadata\"][\"@injected\"][\"extensions\"][\"reactions\"]), emojiObject);\n      }\n    } else {\n      if (!messageObject.hasOwnProperty(\"metadata\")) {\n        messageObject[\"metadata\"] = {};\n      }\n\n      if (!messageObject[\"metadata\"].hasOwnProperty(\"@injected\")) {\n        messageObject[\"metadata\"][\"@injected\"] = {};\n      }\n\n      if (!messageObject[\"metadata\"][\"@injected\"].hasOwnProperty(\"extensions\")) {\n        messageObject[\"metadata\"][\"@injected\"][\"extensions\"] = {};\n      }\n\n      if (!messageObject[\"metadata\"][\"@injected\"][\"extensions\"].hasOwnProperty(\"reactions\")) {\n        messageObject[\"metadata\"][\"@injected\"][\"extensions\"][\"reactions\"] = {};\n      }\n\n      reactionObject = _objectSpread({}, emojiObject);\n    }\n\n    var metadataObject = {\n      metadata: _objectSpread(_objectSpread({}, messageObject[\"metadata\"]), {}, {\n        \"@injected\": _objectSpread(_objectSpread({}, messageObject[\"metadata\"][\"@injected\"]), {}, {\n          extensions: _objectSpread(_objectSpread({}, messageObject[\"metadata\"][\"@injected\"][\"extensions\"]), {}, {\n            reactions: _objectSpread({}, reactionObject)\n          })\n        })\n      })\n    };\n    newMessageObject = _objectSpread(_objectSpread({}, messageObject), {}, {\n      data: _objectSpread(_objectSpread({}, messageObject), metadataObject)\n    }, metadataObject);\n    updateMessage(newMessageObject);\n\n    _chat.CometChat.callExtension(_2.ExtensionConstants.reactions, \"POST\", _2.ExtensionURLs.reaction, {\n      msgId: message.id,\n      emoji: emoji\n    }).catch(function (error) {\n      errorHandler(error);\n      updateMessage(message);\n    });\n  };\n  /**\n   *\n   * @param {*} messageOptions\n   * Sets MessageOptions Onclick function\n   */\n\n\n  var setOptionsCallbackData = function setOptionsCallbackData(messageOptions) {\n    var optionsList = (0, _toConsumableArray2.default)(messageOptions);\n    optionsList.forEach(function (eachMessageOption) {\n      switch (eachMessageOption.id) {\n        case _2.MessageOptionConstants.deleteMessage:\n          if (eachMessageOption.onClick === null) {\n            eachMessageOption.onClick = deleteMessage.bind(_this);\n          }\n\n          break;\n\n        case _2.MessageOptionConstants.editMessage:\n          if (eachMessageOption.onClick === null) {\n            eachMessageOption.onClick = editMessage.bind(_this);\n          }\n\n          break;\n\n        case _2.MessageOptionConstants.copyMessage:\n          if (eachMessageOption.onClick === null) {\n            eachMessageOption.onClick = copyMessage.bind(_this);\n          }\n\n          break;\n\n        case _2.MessageOptionConstants.reactToMessage:\n          if (eachMessageOption.onClick === null) {\n            eachMessageOption.onClick = onReactToMessages.bind(_this);\n          }\n\n          break;\n\n        case _2.MessageOptionConstants.translateMessage:\n          if (eachMessageOption.onClick === null) {\n            eachMessageOption.onClick = translateMessage.bind(_this);\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    });\n    return optionsList;\n  };\n  /**\n   *\n   * @param {*} messageObject\n   * @returns messageOptions according to the type of message and sender's identity\n   */\n\n\n  var filterMessageOptions = function filterMessageOptions(messageObject) {\n    var _messageTypes = messageTypes && messageTypes.length ? messageTypes : (0, _.getDefaultTypes)();\n\n    var messageOptions = []; // If User sends messageTypes as\n\n    _messageTypes.forEach(function (messageTemplateObject) {\n      // Checking Message types for Template object and message object to set options\n      if (messageTemplateObject.type === messageObject.type) {\n        messageOptions = messageTemplateObject.options.filter(function (option) {\n          var _loggedInUserRef$curr10, _messageObject$sender, _loggedInUserRef$curr11, _messageObject$sender2;\n\n          return (// Segregating Sender and receiver options.\n            ((_loggedInUserRef$curr10 = loggedInUserRef.current) === null || _loggedInUserRef$curr10 === void 0 ? void 0 : _loggedInUserRef$curr10.uid) === (messageObject === null || messageObject === void 0 ? void 0 : (_messageObject$sender = messageObject.sender) === null || _messageObject$sender === void 0 ? void 0 : _messageObject$sender.uid) && option.optionFor === _2.MessageOptionForConstants.sender || option.optionFor === _2.MessageOptionForConstants.both || ((_loggedInUserRef$curr11 = loggedInUserRef.current) === null || _loggedInUserRef$curr11 === void 0 ? void 0 : _loggedInUserRef$curr11.uid) !== (messageObject === null || messageObject === void 0 ? void 0 : (_messageObject$sender2 = messageObject.sender) === null || _messageObject$sender2 === void 0 ? void 0 : _messageObject$sender2.uid) && option.optionFor === _2.MessageOptionForConstants.receiver || option.optionFor === _2.MessageOptionForConstants.both\n          );\n        });\n      }\n    }); // If user exclude's an option from options list\n\n\n    if (excludeMessageOptions && excludeMessageOptions.length) {\n      excludeMessageOptions.forEach(function (excludeOption) {\n        messageOptions.forEach(function (option) {\n          if (option.id === excludeOption) {\n            var index = messageOptions.indexOf(option);\n\n            if (index > -1) {\n              messageOptions.splice(index, 1); // 2nd parameter means remove one item only\n            }\n          }\n        });\n      });\n    } // If user sends in customMessageOptions\n\n\n    if (customMessageOptions !== null && customMessageOptions !== void 0 && customMessageOptions.length) {\n      customMessageOptions.forEach(function (option) {\n        messageOptions.push(option);\n      });\n    } // Setting callback data for Message Option's onClick\n\n\n    return setOptionsCallbackData(messageOptions);\n  };\n  /**\n   *\n   * @param {*} message\n   * @returns filtering custom View from message Types sent in by the user\n   */\n\n\n  var filterCustomView = function filterCustomView(message) {\n    if (messageTypes !== null && messageTypes !== void 0 && messageTypes.length) {\n      var templateObject = messageTypes.filter(function (messageTemplateObject) {\n        return messageTemplateObject.type === message.type && messageTemplateObject.customView;\n      });\n\n      if (templateObject !== null && templateObject !== void 0 && templateObject.customView) {\n        return templateObject.customView;\n      }\n\n      return null;\n    }\n  };\n  /**\n   *\n   * @param {*} customView\n   * @returns customView for handling empty,error and loading states\n   */\n\n\n  var getCustomView = function getCustomView(customView) {\n    return /*#__PURE__*/_react.default.createElement(customView, props);\n  };\n\n  var getMessageContainer = function getMessageContainer() {\n    var _localize;\n\n    var messageContainer = null;\n\n    if (messageList.length === 0 && (decoratorMessage === null || decoratorMessage === void 0 ? void 0 : decoratorMessage.toLowerCase()) === (0, _2.localize)(\"LOADING\").toLowerCase()) {\n      messageContainer = /*#__PURE__*/_react.default.createElement(\"div\", {\n        style: (0, _style.decoratorMsgStyle)(style),\n        className: \"messagelist__decorator-message\"\n      }, customView !== null && customView !== void 0 && customView.loading ? getCustomView(customView.loading, props) : /*#__PURE__*/_react.default.createElement(\"div\", {\n        style: (0, _style.decoratorMsgImgStyle)(style, loadingIconURL, _theme),\n        className: \"decorator-message\"\n      }));\n    } else if (messageList.length === 0 && (decoratorMessage === null || decoratorMessage === void 0 ? void 0 : decoratorMessage.toLowerCase()) === (0, _2.localize)(\"NO_MESSAGES_FOUND\").toLowerCase()) {\n      messageContainer = /*#__PURE__*/_react.default.createElement(\"div\", {\n        style: (0, _style.decoratorMsgStyle)(style),\n        className: \"messagelist__decorator-message\"\n      }, customView !== null && customView !== void 0 && customView.empty ? getCustomView(customView === null || customView === void 0 ? void 0 : customView.empty, props) : /*#__PURE__*/_react.default.createElement(\"p\", {\n        style: (0, _style.decoratorMsgTxtStyle)(style, _2.fontHelper, _theme, decoratorMessage, _2.localize),\n        className: \"decorator-message\"\n      }, emptyText));\n    } else if ((decoratorMessage === null || decoratorMessage === void 0 ? void 0 : decoratorMessage.toLowerCase()) === ((_localize = (0, _2.localize)(\"NO_MESSAGE_TYPE_SET\")) === null || _localize === void 0 ? void 0 : _localize.toLowerCase())) {\n      messageContainer = /*#__PURE__*/_react.default.createElement(\"div\", {\n        style: (0, _style.decoratorMsgStyle)(style),\n        className: \"messagelist__decorator-message\"\n      }, customView !== null && customView !== void 0 && customView.empty ? getCustomView(customView === null || customView === void 0 ? void 0 : customView.empty, props) : /*#__PURE__*/_react.default.createElement(\"p\", {\n        style: (0, _style.decoratorMsgTxtStyle)(style, _2.fontHelper, _theme, decoratorMessage, _2.localize),\n        className: \"decorator-message\"\n      }, decoratorMessage));\n    } else if (!hideError && (decoratorMessage === null || decoratorMessage === void 0 ? void 0 : decoratorMessage.toLowerCase()) === (0, _2.localize)(\"SOMETHING_WRONG\").toLowerCase()) {\n      messageContainer = /*#__PURE__*/_react.default.createElement(\"div\", {\n        style: (0, _style.decoratorMsgStyle)(style),\n        className: \"messagelist__decorator-message\"\n      }, customView !== null && customView !== void 0 && customView.error ? getCustomView(customView.error, props) : /*#__PURE__*/_react.default.createElement(\"p\", {\n        style: (0, _style.decoratorMsgTxtStyle)(style, _2.fontHelper, _theme, decoratorMessage, _2.localize),\n        className: \"decorator-message\"\n      }, errorText));\n    }\n\n    return messageContainer;\n  };\n  /**\n   * Empty new Message Received State to close Smart reply Preview\n   */\n\n\n  var onClose = function onClose() {\n    setnewMessage({});\n  };\n\n  var _smartRepliesConfiguration = smartRepliesConfiguration || new _SmartRepliesConfiguration.SmartRepliesConfiguration({\n    onClose: onClose\n  });\n  /**\n   *\n   * @returns smart suggestions to the user as per the message received\n   */\n\n\n  var getSmartReplies = function getSmartReplies() {\n    if (Object.keys(newMessage).length) {\n      return /*#__PURE__*/_react.default.createElement(_.CometChatSmartReplies, {\n        messageObject: newMessage,\n        customOutgoingMessageSound: _smartRepliesConfiguration.customOutgoingMessageSound,\n        enableSoundForMessages: _smartRepliesConfiguration.enableSoundForMessages,\n        loggedInUser: loggedInUserRef.current,\n        onClick: _smartRepliesConfiguration.onClick,\n        style: (0, _style.smartReplyStyle)(_theme),\n        onClose: onClose.bind(_this)\n      });\n    }\n  };\n  /**\n   *\n   * @returns new Message Indicator banner\n   */\n\n\n  var newMessageIndicator = function newMessageIndicator() {\n    if (unreadMessageCount >= 1) {\n      var text = unreadMessageCount > 1 ? \"\".concat(unreadMessageCount, \" \").concat((0, _2.localize)(\"NEW_MESSAGES\")) : \"\".concat(unreadMessageCount, \" \").concat((0, _2.localize)(\"NEW_MESSAGE\"));\n      return /*#__PURE__*/_react.default.createElement(_.CometChatNewMessageIndicator, {\n        text: text,\n        onClick: scrolledToBottom.bind(_this) || _newMessageIndicatorConfiguration.onClick,\n        Icon: _newMessageIndicatorConfiguration.Icon,\n        style: (0, _style.messageIndicatorStyle)(_theme)\n      });\n    }\n\n    return null;\n  };\n  /**\n   *\n   * @returns Items to render in Message List Component\n   */\n\n\n  var renderItems = function renderItems() {\n    // to hold date value for first message\n    var previousMessageDate = null;\n    return messageList.map(function (eachMessage) {\n      var _previousMessageDate, _previousMessageDate2, _previousMessageDate3, _dateConfiguration$st, _theme$palette, _theme$palette2, _dateConfiguration$st2, _theme$typography, _loggedInUserRef$curr12, _eachMessage$sender, _loggedInUserRef$curr13, _eachMessage$sender2;\n\n      // date label component\n      var dateSeparator = null; // Converting Unix  timeStamp to readable date format\n\n      var currentMessageDate = new Date(eachMessage.sentAt * 1000);\n      var currentDate = currentMessageDate.getDate() + \"-\" + currentMessageDate.getMonth + \"-\" + currentMessageDate.getFullYear();\n      var previousDate = ((_previousMessageDate = previousMessageDate) === null || _previousMessageDate === void 0 ? void 0 : _previousMessageDate.getDate()) + \"-\" + ((_previousMessageDate2 = previousMessageDate) === null || _previousMessageDate2 === void 0 ? void 0 : _previousMessageDate2.getMonth) + \"-\" + ((_previousMessageDate3 = previousMessageDate) === null || _previousMessageDate3 === void 0 ? void 0 : _previousMessageDate3.getFullYear());\n      var pattern = _dateConfiguration === null || _dateConfiguration === void 0 ? void 0 : _dateConfiguration.pattern;\n      var customPattern = _dateConfiguration === null || _dateConfiguration === void 0 ? void 0 : _dateConfiguration.customPattern;\n      var dateStyle = new _Shared.DateStyles(_objectSpread(_objectSpread({}, _dateConfiguration === null || _dateConfiguration === void 0 ? void 0 : _dateConfiguration.style), {}, {\n        textColor: (_dateConfiguration === null || _dateConfiguration === void 0 ? void 0 : (_dateConfiguration$st = _dateConfiguration.style) === null || _dateConfiguration$st === void 0 ? void 0 : _dateConfiguration$st.textColor) || (_theme === null || _theme === void 0 ? void 0 : (_theme$palette = _theme.palette) === null || _theme$palette === void 0 ? void 0 : _theme$palette.accent500[_theme === null || _theme === void 0 ? void 0 : (_theme$palette2 = _theme.palette) === null || _theme$palette2 === void 0 ? void 0 : _theme$palette2.mode]),\n        textFont: (_dateConfiguration === null || _dateConfiguration === void 0 ? void 0 : (_dateConfiguration$st2 = _dateConfiguration.style) === null || _dateConfiguration$st2 === void 0 ? void 0 : _dateConfiguration$st2.textFont) || (0, _2.fontHelper)(_theme === null || _theme === void 0 ? void 0 : (_theme$typography = _theme.typography) === null || _theme$typography === void 0 ? void 0 : _theme$typography.caption2)\n      })); // Comparing Date, Month, Year of the two dates\n\n      if (previousDate !== currentDate) {\n        dateSeparator = /*#__PURE__*/_react.default.createElement(\"div\", {\n          style: (0, _style.messageDateContainerStyle)(_theme)\n        }, /*#__PURE__*/_react.default.createElement(\"div\", {\n          style: (0, _style.messageDateStyle)(_theme)\n        }, /*#__PURE__*/_react.default.createElement(_Shared.CometChatDate, {\n          timestamp: eachMessage === null || eachMessage === void 0 ? void 0 : eachMessage.sentAt,\n          pattern: pattern,\n          customPattern: customPattern,\n          style: dateStyle\n        })));\n      }\n\n      previousMessageDate = currentMessageDate;\n      var messageKey = eachMessage.id || eachMessage.muid;\n      var className = \"message__\".concat(eachMessage.type, \" message__kit__background\");\n      var alignmentValue = _2.MessageBubbleAlignmentConstants.left;\n      var background;\n      var messageBubbleData = {};\n\n      if (alignment === (_2.MessageListAlignmentConstants === null || _2.MessageListAlignmentConstants === void 0 ? void 0 : _2.MessageListAlignmentConstants.standard) && ((_loggedInUserRef$curr12 = loggedInUserRef.current) === null || _loggedInUserRef$curr12 === void 0 ? void 0 : _loggedInUserRef$curr12.uid) === (eachMessage === null || eachMessage === void 0 ? void 0 : (_eachMessage$sender = eachMessage.sender) === null || _eachMessage$sender === void 0 ? void 0 : _eachMessage$sender.uid)) {\n        alignmentValue = _2.MessageBubbleAlignmentConstants.right;\n        background = {\n          background: _theme.palette.primary[_theme.palette.mode]\n        };\n        messageBubbleData = sentMessageInputData;\n      } else if (alignment === (_2.MessageListAlignmentConstants === null || _2.MessageListAlignmentConstants === void 0 ? void 0 : _2.MessageListAlignmentConstants.left) && ((_loggedInUserRef$curr13 = loggedInUserRef.current) === null || _loggedInUserRef$curr13 === void 0 ? void 0 : _loggedInUserRef$curr13.uid) === (eachMessage === null || eachMessage === void 0 ? void 0 : (_eachMessage$sender2 = eachMessage.sender) === null || _eachMessage$sender2 === void 0 ? void 0 : _eachMessage$sender2.uid)) {\n        alignmentValue = _2.MessageBubbleAlignmentConstants.left;\n        background = {\n          background: _theme.palette.secondary[_theme.palette.mode]\n        };\n        messageBubbleData = sentMessageInputData;\n      } else {\n        alignmentValue = _2.MessageBubbleAlignmentConstants.left;\n        background = {\n          background: _theme.palette.secondary[_theme.palette.mode]\n        };\n        messageBubbleData = receivedMessageInputData;\n      }\n\n      var style = _objectSpread(_objectSpread({\n        width: \"100%\",\n        height: \"100%\",\n        border: \"0 none\",\n        borderRadius: \"12px\",\n        nameTextFont: (0, _2.fontHelper)(_theme.typography.caption1),\n        timestampFont: (0, _2.fontHelper)(_theme.typography.caption2)\n      }, background), {}, {\n        nameTextColor: _theme.palette.accent500[_theme.palette.mode],\n        timestampColor: _theme.palette.accent[_theme.palette.mode]\n      });\n\n      return !eachMessage.action ? /*#__PURE__*/_react.default.createElement(_react.default.Fragment, {\n        key: messageKey\n      }, dateSeparator, /*#__PURE__*/_react.default.createElement(\"div\", {\n        key: messageKey,\n        className: className,\n        style: (0, _style.messageBubbleStyle)(alignment, loggedInUserRef.current, eachMessage)\n      }, /*#__PURE__*/_react.default.createElement(_.CometChatMessageBubble, {\n        key: messageKey,\n        messageBubbleData: messageBubbleData || _messageBubbleConfiguration.messageBubbleData,\n        alignment: alignmentValue,\n        timeAlignment: _messageBubbleConfiguration.timeAlignment,\n        messageObject: eachMessage,\n        messageOptions: filterMessageOptions(eachMessage),\n        loggedInUser: loggedInUserRef.current,\n        customView: filterCustomView(eachMessage),\n        style: _objectSpread({}, style),\n        theme: _theme,\n        updateReaction: onReactToMessages.bind(_this)\n      }))) : null;\n    });\n  };\n\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"message__list\",\n    style: (0, _style.chatListStyle)(style, _theme)\n  }, /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"list__wrapper\",\n    style: (0, _style.listWrapperStyle)(style, _theme),\n    ref: messageListEndRef,\n    onScroll: handleScroll\n  }, getMessageContainer(), newMessageIndicator(), emojiBoard(), renderItems()), getSmartReplies());\n});\n\nexports.CometChatMessageList = CometChatMessageList;\nCometChatMessageList.defaultProps = {\n  limit: 30,\n  user: null,\n  group: null,\n  alignment: \"standard\",\n  messageTypes: null,\n  excludeMessageTypes: null,\n  excludeMessageOptions: null,\n  customMessageOptions: null,\n  onlyUnread: false,\n  hideMessagesFromBlockedUsers: false,\n  hideDeletedMessages: false,\n  tags: null,\n  loadingIconURL: _spinner.default,\n  customView: {\n    loading: \"\",\n    empty: \"\",\n    error: \"\"\n  },\n  emptyText: \"No messages here yet...\",\n  errorText: \"Something went wrong\",\n  hideError: false,\n  customIncomingMessageSound: \"\",\n  enableSoundForMessages: true,\n  sentMessageInputData: {\n    thumbnail: true,\n    title: true,\n    timestamp: true,\n    readReceipt: true\n  },\n  receivedMessageInputData: {\n    thumbnail: true,\n    title: true,\n    timestamp: true,\n    readReceipt: false\n  },\n  style: {\n    width: \"100%\",\n    height: \"100%\",\n    border: \"\",\n    borderRadius: \"8px\",\n    background: \"\",\n    textFont: \"400 12px Inter, sans-serif\",\n    textColor: \"rgb(20,20,20)\"\n  },\n  messageBubbleConfiguration: null,\n  emojiKeyboardConfiguration: null,\n  smartRepliesConfiguration: null,\n  newMessageIndicatorConfiguration: null,\n  dateConfiguration: null\n};\nCometChatMessageList.propTypes = {\n  limit: _propTypes.default.number,\n  user: _propTypes.default.object,\n  group: _propTypes.default.object,\n  alignment: _propTypes.default.string,\n  messageTypes: _propTypes.default.array,\n  excludeMessageTypes: _propTypes.default.array,\n  excludeMessageOptions: _propTypes.default.array,\n  customMessageOptions: _propTypes.default.array,\n  onlyUnread: _propTypes.default.bool,\n  hideMessagesFromBlockedUsers: _propTypes.default.bool,\n  hideDeletedMessages: _propTypes.default.bool,\n  tags: _propTypes.default.array,\n  loadingIconURL: _propTypes.default.string,\n  customView: _propTypes.default.object,\n  emptyText: _propTypes.default.string,\n  errorText: _propTypes.default.string,\n  hideError: _propTypes.default.bool,\n  customIncomingMessageSound: _propTypes.default.string,\n  enableSoundForMessages: _propTypes.default.bool,\n  sentMessageInputData: _propTypes.default.object,\n  receivedMessageInputData: _propTypes.default.object,\n  style: _propTypes.default.object,\n  messageBubbleConfiguration: _propTypes.default.object,\n  emojiKeyboardConfiguration: _propTypes.default.object,\n  smartRepliesConfiguration: _propTypes.default.object,\n  newMessageIndicatorConfiguration: _propTypes.default.object,\n  dateConfiguration: _propTypes.default.object\n};"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}