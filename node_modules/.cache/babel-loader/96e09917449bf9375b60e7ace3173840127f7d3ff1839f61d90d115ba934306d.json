{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CometChatMessageList = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _chat = require(\"@cometchat-pro/chat\");\nvar _ = require(\"..\");\nvar _2 = require(\"../..\");\nvar _spinner = _interopRequireDefault(require(\"./resources/spinner.svg\"));\nvar _hooks = require(\"./hooks\");\nvar _controller = require(\"./controller\");\nvar _style = require(\"./style\");\nvar _CometChatMessageConstants = require(\"../CometChatMessageConstants\");\nvar _Shared = require(\"../../Shared\");\nvar _3 = require(\"../\");\nvar _SmartRepliesConfiguration = require(\"../CometChatSmartReplies/SmartRepliesConfiguration\");\nvar _NewMessageIndicatorConfiguration = require(\"../CometChatNewMessageIndicator/NewMessageIndicatorConfiguration\");\nvar _MessageBubbleConfiguration = require(\"../Bubbles/CometChatMessageBubble/MessageBubbleConfiguration\");\nvar _DateConfiguration = require(\"../../Shared/PrimaryComponents/CometChatConfiguration/DateConfiguration\");\nvar _this = void 0;\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2[\"default\"])(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\n/**\n *\n * CometChatMessageList component retrieves the latest messages and presents them inside a message bubble, that a CometChat logged-in user has been a part of.\n * The state of the component is communicated via 3 states i.e empty, loading and error\n *\n * @version 1.0.0\n * @author CometChatTeam\n * @copyright Â© 2022 CometChat Inc.\n *\n *\n */\n\nvar CometChatMessageList = /*#__PURE__*/_react[\"default\"].forwardRef(function (props, ref) {\n  /**\n   * Destructuring prop values\n   */\n  var limit = props.limit,\n    user = props.user,\n    group = props.group,\n    alignment = props.alignment,\n    messageTypes = props.messageTypes,\n    excludeMessageOptions = props.excludeMessageOptions,\n    customMessageOptions = props.customMessageOptions,\n    excludeMessageTypes = props.excludeMessageTypes,\n    onlyUnread = props.onlyUnread,\n    hideMessagesFromBlockedUsers = props.hideMessagesFromBlockedUsers,\n    hideDeletedMessages = props.hideDeletedMessages,\n    tags = props.tags,\n    loadingIconURL = props.loadingIconURL,\n    customView = props.customView,\n    emptyText = props.emptyText,\n    errorText = props.errorText,\n    hideError = props.hideError,\n    customIncomingMessageSound = props.customIncomingMessageSound,\n    enableSoundForMessages = props.enableSoundForMessages,\n    sentMessageInputData = props.sentMessageInputData,\n    receivedMessageInputData = props.receivedMessageInputData,\n    style = props.style,\n    theme = props.theme,\n    messageBubbleConfiguration = props.messageBubbleConfiguration,\n    emojiKeyboardConfiguration = props.emojiKeyboardConfiguration,\n    smartRepliesConfiguration = props.smartRepliesConfiguration,\n    newMessageIndicatorConfiguration = props.newMessageIndicatorConfiguration,\n    dateConfiguration = props.dateConfiguration;\n  var lastScrollTop = 0;\n  var loggedInUserRef = _react[\"default\"].useRef(null);\n  var _React$useState = _react[\"default\"].useState(0),\n    _React$useState2 = (0, _slicedToArray2[\"default\"])(_React$useState, 2),\n    messageCount = _React$useState2[0],\n    setMessageCount = _React$useState2[1];\n  var _React$useState3 = _react[\"default\"].useState([]),\n    _React$useState4 = (0, _slicedToArray2[\"default\"])(_React$useState3, 2),\n    messageList = _React$useState4[0],\n    setMessageList = _React$useState4[1];\n  var _React$useState5 = _react[\"default\"].useState(0),\n    _React$useState6 = (0, _slicedToArray2[\"default\"])(_React$useState5, 2),\n    unreadMessageCount = _React$useState6[0],\n    setUnreadMessageCount = _React$useState6[1];\n  var _React$useState7 = _react[\"default\"].useState(null),\n    _React$useState8 = (0, _slicedToArray2[\"default\"])(_React$useState7, 2),\n    callbackData = _React$useState8[0],\n    setCallbackData = _React$useState8[1];\n  var _React$useState9 = _react[\"default\"].useState((0, _2.localize)(\"LOADING\")),\n    _React$useState10 = (0, _slicedToArray2[\"default\"])(_React$useState9, 2),\n    decoratorMessage = _React$useState10[0],\n    setDecoratorMessage = _React$useState10[1];\n  var _React$useState11 = _react[\"default\"].useState(null),\n    _React$useState12 = (0, _slicedToArray2[\"default\"])(_React$useState11, 2),\n    chatWith = _React$useState12[0],\n    setChatWith = _React$useState12[1];\n  var _React$useState13 = _react[\"default\"].useState(null),\n    _React$useState14 = (0, _slicedToArray2[\"default\"])(_React$useState13, 2),\n    chatWithType = _React$useState14[0],\n    setChatWithType = _React$useState14[1];\n  var messageTypesRef = _react[\"default\"].useRef(null);\n  var messageCategoryRef = _react[\"default\"].useRef(null);\n  var messageListManagerRef = _react[\"default\"].useRef(null);\n  var messageListEndRef = _react[\"default\"].useRef(null);\n  var _React$useState15 = _react[\"default\"].useState({}),\n    _React$useState16 = (0, _slicedToArray2[\"default\"])(_React$useState15, 2),\n    viewEmojiTray = _React$useState16[0],\n    setViewEmojiTray = _React$useState16[1];\n  var _React$useState17 = _react[\"default\"].useState(null),\n    _React$useState18 = (0, _slicedToArray2[\"default\"])(_React$useState17, 2),\n    messageToReact = _React$useState18[0],\n    setMessageToReact = _React$useState18[1];\n  var _React$useState19 = _react[\"default\"].useState({}),\n    _React$useState20 = (0, _slicedToArray2[\"default\"])(_React$useState19, 2),\n    newMessage = _React$useState20[0],\n    setnewMessage = _React$useState20[1];\n  var _theme = new _2.CometChatTheme(theme !== null && theme !== void 0 ? theme : {});\n  var _messageBubbleConfiguration = messageBubbleConfiguration || new _MessageBubbleConfiguration.MessageBubbleConfiguration({});\n  var _emojiKeyboardConfiguration = emojiKeyboardConfiguration || new _3.EmojiKeyboardConfiguration({});\n  var _newMessageIndicatorConfiguration = newMessageIndicatorConfiguration || new _NewMessageIndicatorConfiguration.NewMessageIndicatorConfiguration({});\n  var _dateConfiguration = dateConfiguration || new _DateConfiguration.DateConfiguration({\n    pattern: \"dayDateFormat\"\n  });\n\n  /**\n   * Update messagelist\n   */\n  _react[\"default\"].useImperativeHandle(ref, function () {\n    return {\n      addMessage: addMessage,\n      updateMessage: updateMessage,\n      removeMessage: removeMessage,\n      deleteMessage: deleteMessage,\n      scrollToBottom: scrollToBottom,\n      translateMessage: translateMessage,\n      reactToMessages: reactToMessages\n    };\n  });\n  var messageListCallback = function messageListCallback(listenerName) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    setCallbackData({\n      name: listenerName,\n      args: [].concat(args)\n    });\n  };\n  var errorHandler = function errorHandler(errorCode) {\n    _.CometChatMessageEvents.emit(_.CometChatMessageEvents.onMessageError, errorCode);\n  };\n  var reInitializeMessageBuilder = function reInitializeMessageBuilder() {\n    resetChatWindow();\n    setDecoratorMessage(\"loading\");\n    messageListManagerRef.current.removeListeners();\n    messageListManagerRef.current = new _controller.MessageListManager(limit, user, group, onlyUnread, hideDeletedMessages, hideMessagesFromBlockedUsers, tags, messageTypesRef.current, messageCategoryRef.current);\n    (0, _hooks.fetchMessages)(messageListManagerRef === null || messageListManagerRef === void 0 ? void 0 : messageListManagerRef.current).then(function (messagelist) {\n      messageHandler(messagelist, true);\n      setMessageList(messagelist);\n      messageListManagerRef.current.attachListeners(messageListCallback);\n    });\n  };\n\n  /**\n   * add new message to the messageList\n   */\n  var addMessage = function addMessage(message) {\n    var messagelist = (0, _toConsumableArray2[\"default\"])(messageList);\n    messagelist.push(message);\n    setMessageList(messagelist);\n\n    // scrollToBottom()\n  };\n\n  /**\n   * Set unreadCount when new message is received\n   */\n  var updateUnreadMessageCount = function updateUnreadMessageCount() {\n    setUnreadMessageCount(unreadMessageCount + 1);\n  };\n\n  /**\n   *\n   * @param {*} message\n   * Function to play notification sound if sound for messages is enabled.\n   * It checks for custom sound and if not provided plays default sound.\n   */\n  var playNotificationSound = function playNotificationSound(message) {\n    var _message$metadata;\n    if ((message === null || message === void 0 ? void 0 : message.category) === _2.MessageCategoryConstants.message) {\n      if (enableSoundForMessages) {\n        if (customIncomingMessageSound) {\n          _2.CometChatSoundManager.play(_2.CometChatSoundManager.Sound.incomingMessage, customIncomingMessageSound);\n        } else {\n          _2.CometChatSoundManager.play(_2.CometChatSoundManager.Sound.incomingMessage);\n        }\n      }\n    } else if ((message === null || message === void 0 ? void 0 : message.category) !== _2.MessageCategoryConstants.message && message !== null && message !== void 0 && (_message$metadata = message.metadata) !== null && _message$metadata !== void 0 && _message$metadata.incrementUnreadCount) {\n      if (enableSoundForMessages) {\n        if (customIncomingMessageSound) {\n          _2.CometChatSoundManager.play(customIncomingMessageSound);\n        } else {\n          _2.CometChatSoundManager.play(_2.CometChatSoundManager.Sound.incomingMessage);\n        }\n      }\n    }\n  };\n\n  /**\n   * Update message\n   */\n  var updateMessage = function updateMessage(message) {\n    var withMuid = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var messageKey;\n    var messagelist = (0, _toConsumableArray2[\"default\"])(messageList);\n    if (withMuid) {\n      messageKey = messagelist.findIndex(function (m) {\n        return m.muid === message.muid;\n      });\n    } else {\n      messageKey = messagelist.findIndex(function (m) {\n        return m.id === message.id;\n      });\n    }\n    if (messageKey > -1) {\n      var messageObject = _objectSpread(_objectSpread({}, messageList[messageKey]), message);\n      messagelist.splice(messageKey, 1, messageObject);\n      setMessageCount(messagelist.length);\n      setMessageList(messagelist);\n    }\n  };\n\n  /**\n   * Update message as read; show double blue tick\n   */\n  var updateMessageAsRead = function updateMessageAsRead(message) {\n    var messagelist = (0, _toConsumableArray2[\"default\"])(messageList);\n    var messageKey = messagelist.findIndex(function (m) {\n      return m.id === message.messageId;\n    });\n    if (messageKey > -1) {\n      var messageObject = _objectSpread({}, messageList[messageKey]);\n      messageObject.readAt = message.getReadAt();\n      messagelist.splice(messageKey, 1, messageObject);\n      setMessageList(messagelist);\n    }\n  };\n\n  /**\n   * Update message as deleted; show deleted message bubble\n   */\n  var removeMessage = function removeMessage(message) {\n    var messages = (0, _toConsumableArray2[\"default\"])(messageList);\n    var messageKey = messages.findIndex(function (m) {\n      return m.id === message.id;\n    });\n    if (messageKey > -1) {\n      if (hideDeletedMessages) {\n        messages.splice(messageKey, 1);\n      } else {\n        var messageObject = _objectSpread(_objectSpread({}, messages[messageKey]), message);\n        messages.splice(messageKey, 1, messageObject);\n      }\n      setMessageList(function () {\n        return messages;\n      });\n    }\n  };\n\n  /**\n   *\n   * @param {*} message\n   * emits markAsRead Event\n   */\n  var markMessageAsRead = function markMessageAsRead(message) {\n    if (!(message !== null && message !== void 0 && message.readAt)) {\n      _chat.CometChat.markAsRead(message)[\"catch\"](function (error) {\n        errorHandler(error);\n      });\n    }\n  };\n  var handleNewMessages = function handleNewMessages(message) {\n    //handling dom lag - increment count only for main message list\n\n    setnewMessage(message);\n    var messageReceivedHandler = function messageReceivedHandler(message) {\n      //if the user has not scrolled in chat window(scroll is at the bottom of the chat window)\n      setMessageCount(messageCount + 1);\n      if (messageListEndRef.current.scrollHeight - messageListEndRef.current.scrollTop - messageListEndRef.current.clientHeight <= 1) {\n        if (messageCount > _.messageConstants.maximumNumOfMessages) {\n          reInitializeMessageBuilder();\n        } else {\n          playNotificationSound(message);\n          addMessage(message);\n          scrollToBottom();\n          markMessageAsRead(message);\n          _.CometChatMessageEvents.emit(_.CometChatMessageEvents.onMessageRead, message);\n        }\n      } else {\n        //if the user has scrolled up in chat window\n        playNotificationSound(message);\n        addMessage(message);\n        updateUnreadMessageCount();\n      }\n    };\n\n    /**\n     * message receiver is chat window group\n     */\n    if (chatWithType === _2.ReceiverTypeConstants.group && message.getReceiverType() === _2.ReceiverTypeConstants.group && message.getReceiverId() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.guid)) {\n      messageReceivedHandler(message);\n    } else if (chatWithType === _2.ReceiverTypeConstants.user && message.getReceiverType() === _2.ReceiverTypeConstants.user) {\n      var _loggedInUserRef$curr, _loggedInUserRef$curr2;\n      /**\n       * If the message sender is chat window user and message receiver is logged-in user\n       * OR\n       * If the message sender is logged-in user and message receiver is chat window user\n       */\n      if (message.getSender().uid === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.uid) && message.getReceiverId() === (loggedInUserRef === null || loggedInUserRef === void 0 ? void 0 : (_loggedInUserRef$curr = loggedInUserRef.current) === null || _loggedInUserRef$curr === void 0 ? void 0 : _loggedInUserRef$curr.uid) || message.getSender().uid === (loggedInUserRef === null || loggedInUserRef === void 0 ? void 0 : (_loggedInUserRef$curr2 = loggedInUserRef.current) === null || _loggedInUserRef$curr2 === void 0 ? void 0 : _loggedInUserRef$curr2.uid) && message.getReceiverId() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.uid)) {\n        messageReceivedHandler(message);\n      }\n    }\n  };\n  var handleNewCustomMessages = function handleNewCustomMessages(message) {\n    var _loggedInUserRef$curr3, _loggedInUserRef$curr4;\n    var customMessageReceivedHandler = function customMessageReceivedHandler(message) {\n      setMessageCount(messageCount + 1);\n      //if the user has not scrolled in chat window(scroll is at the bottom of the chat window)\n      if (messageListEndRef.current.scrollHeight - messageListEndRef.current.scrollTop - messageListEndRef.current.clientHeight <= 1) {\n        if (messageCount > _.messageConstants.maximumNumOfMessages) {\n          reInitializeMessageBuilder();\n        } else {\n          playNotificationSound(message);\n          addMessage(message);\n          scrollToBottom();\n          markMessageAsRead(message);\n          _.CometChatMessageEvents.emit(_.CometChatMessageEvents.onMessageRead, message);\n        }\n      } else {\n        //if the user has scrolled in chat window\n        playNotificationSound(message);\n        addMessage(message);\n        updateUnreadMessageCount();\n      }\n    };\n    if (chatWithType === _2.ReceiverTypeConstants.group && message.getReceiverType() === _2.ReceiverTypeConstants.group && ((_loggedInUserRef$curr3 = loggedInUserRef.current) === null || _loggedInUserRef$curr3 === void 0 ? void 0 : _loggedInUserRef$curr3.uid) === message.getSender().uid && message.getReceiverId() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.guid) && (message.type === _.CometChatCustomMessageTypes.poll || message.type === _.CometChatCustomMessageTypes.document || message.type === _.CometChatCustomMessageTypes.whiteboard)) {\n      playNotificationSound();\n      addMessage(message);\n      scrollToBottom();\n    } else if (chatWithType === _2.ReceiverTypeConstants.group && message.getReceiverType() === _2.ReceiverTypeConstants.group && message.getReceiverId() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.guid)) {\n      customMessageReceivedHandler(message, _2.ReceiverTypeConstants.group);\n    } else if (chatWithType === _2.ReceiverTypeConstants.user && message.getReceiverType() === _2.ReceiverTypeConstants.user && message.getSender().uid === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.uid)) {\n      customMessageReceivedHandler(message, _2.ReceiverTypeConstants.user);\n    } else if (chatWithType === _2.ReceiverTypeConstants.user && message.getReceiverType() === _2.ReceiverTypeConstants.user && ((_loggedInUserRef$curr4 = loggedInUserRef.current) === null || _loggedInUserRef$curr4 === void 0 ? void 0 : _loggedInUserRef$curr4.uid) === message.getSender().uid && message.getReceiverId() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.uid) && (message.type === _.CometChatCustomMessageTypes.poll || message.type === _.CometChatCustomMessageTypes.document || message.type === _.CometChatCustomMessageTypes.whiteboard)) {\n      playNotificationSound(message);\n      addMessage(message);\n      scrollToBottom();\n    }\n  };\n  var handleMessageDeliveryAndReadReceipt = function handleMessageDeliveryAndReadReceipt(messageReceipt) {\n    var _messageReceipt$getSe;\n    //read receipts\n    if ((messageReceipt === null || messageReceipt === void 0 ? void 0 : messageReceipt.getReceiverType()) === _2.ReceiverTypeConstants.user && (messageReceipt === null || messageReceipt === void 0 ? void 0 : (_messageReceipt$getSe = messageReceipt.getSender()) === null || _messageReceipt$getSe === void 0 ? void 0 : _messageReceipt$getSe.getUid()) === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.uid) && (messageReceipt === null || messageReceipt === void 0 ? void 0 : messageReceipt.getReceiver()) === loggedInUserRef.current.uid) {\n      if ((messageReceipt === null || messageReceipt === void 0 ? void 0 : messageReceipt.getReceiptType()) === \"delivery\") {\n        updateMessageAsDelivered(messageReceipt);\n      } else if ((messageReceipt === null || messageReceipt === void 0 ? void 0 : messageReceipt.getReceiptType()) === \"read\") {\n        updateMessageAsRead(messageReceipt);\n      }\n    } else if ((messageReceipt === null || messageReceipt === void 0 ? void 0 : messageReceipt.getReceiverType()) === _2.ReceiverTypeConstants.group && (messageReceipt === null || messageReceipt === void 0 ? void 0 : messageReceipt.getReceiver()) === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.guid)) {}\n  };\n  var handleMessageDelete = function handleMessageDelete(message) {\n    if (chatWithType === _2.ReceiverTypeConstants.group && message.getReceiverType() === _2.ReceiverTypeConstants.group && message.getReceiverId() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.guid)) {\n      removeMessage(message);\n    } else if (chatWith === _2.ReceiverTypeConstants.user && message.getReceiverType() === _2.ReceiverTypeConstants.user && message.getSender().uid === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.uid)) {\n      removeMessage(message);\n    }\n  };\n  var handleMessageEdit = function handleMessageEdit(message) {\n    if (chatWithType === _2.ReceiverTypeConstants.group && message.getReceiverType() === _2.ReceiverTypeConstants.group && message.getReceiverId() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.guid)) {\n      updateMessage(message);\n    } else if (chatWithType === _2.ReceiverTypeConstants.user && message.getReceiverType() === _2.ReceiverTypeConstants.user && loggedInUserRef.current.uid === message.getReceiverId() && message.getSender().uid === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.uid)) {\n      updateMessage(message);\n    } else if (chatWithType === _2.ReceiverTypeConstants.user && message.getReceiverType() === _2.ReceiverTypeConstants.user && loggedInUserRef.current.uid === message.getSender().uid && message.getReceiverId() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.uid)) {\n      updateMessage(message);\n    }\n  };\n  var handleNewGroupActionMessage = function handleNewGroupActionMessage(message) {\n    if (chatWithType === _2.ReceiverTypeConstants.group && message.getReceiverType() === _2.ReceiverTypeConstants.group && message.getReceiverId() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.guid)) {\n      playNotificationSound(message);\n      addMessage(message);\n      // scrollToBottom();\n      markMessageAsRead(message);\n      _.CometChatMessageEvents.emit(_.CometChatMessageEvents.onMessageRead, message);\n    }\n  };\n\n  /**\n   * update message list\n   */\n  var prependMessages = function prependMessages(messages) {\n    var messagelist = [].concat((0, _toConsumableArray2[\"default\"])(messages), (0, _toConsumableArray2[\"default\"])(messageList));\n    setMessageList(messagelist);\n    setMessageCount(messagelist.length);\n  };\n  var messageHandler = function messageHandler(messagelist, scroll, val) {\n    messagelist.forEach(function (message) {\n      var _message$getSender, _loggedInUserRef$curr5;\n      //if the sender of the message is not the loggedin user, mark the message as read.\n      if ((message === null || message === void 0 ? void 0 : (_message$getSender = message.getSender()) === null || _message$getSender === void 0 ? void 0 : _message$getSender.getUid()) !== ((_loggedInUserRef$curr5 = loggedInUserRef.current) === null || _loggedInUserRef$curr5 === void 0 ? void 0 : _loggedInUserRef$curr5.uid) && !(message !== null && message !== void 0 && message.readAt)) {\n        if (message.getReceiverType() === _2.ReceiverTypeConstants.user) {\n          markMessageAsRead(message);\n          _.CometChatMessageEvents.emit(_.CometChatMessageEvents.onMessageRead, message);\n        } else if (message.getReceiverType() === _2.ReceiverTypeConstants.group) {\n          markMessageAsRead(message);\n          _.CometChatMessageEvents.emit(_.CometChatMessageEvents.onMessageRead, message);\n        }\n      }\n    });\n    if (scroll) {\n      var lastScrollPoint = val || 0;\n      scrollToBottom(lastScrollPoint);\n    }\n  };\n  var scrollToBottom = function scrollToBottom() {\n    var scrollHeight = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    setTimeout(function () {\n      if (messageListEndRef) {\n        messageListEndRef.current.scrollTop = messageListEndRef.current.scrollHeight - scrollHeight;\n      }\n    });\n  };\n  var handleScroll = function handleScroll(event) {\n    var scrollTop = event.currentTarget.scrollTop;\n    var scrollHeight = event.currentTarget.scrollHeight;\n    lastScrollTop = scrollHeight - scrollTop;\n    var top = Math.round(scrollTop) === 0;\n    if (top && messageList.length) {\n      (0, _hooks.fetchMessages)(messageListManagerRef === null || messageListManagerRef === void 0 ? void 0 : messageListManagerRef.current).then(function (messagelist) {\n        prependMessages(messagelist);\n        messageHandler(messagelist, true, lastScrollTop);\n      })[\"catch\"](function (error) {\n        errorHandler(error);\n        setDecoratorMessage((0, _2.localize)(\"SOMETHING_WRONG\"));\n      });\n    }\n  };\n\n  /**\n   * Update message as delivered; show double grey tick\n   */\n  var updateMessageAsDelivered = function updateMessageAsDelivered(message) {\n    var messagelist = (0, _toConsumableArray2[\"default\"])(messageList);\n    var messageKey = messagelist.findIndex(function (m) {\n      return m.id === message.messageId;\n    });\n    if (messageKey > -1) {\n      var messageObject = _objectSpread({}, messageList[messageKey]);\n      messageObject.deliveredAt = message.getDeliveredAt();\n      messagelist === null || messagelist === void 0 ? void 0 : messagelist.splice(messageKey, 1, messageObject);\n      setMessageList(messagelist);\n    }\n  };\n\n  /**\n   * Upon scrolling to bottom, reload the chat if messages cross the maximum count,\n   * or else render and update (mark them as read) the stored messages\n   */\n  var scrolledToBottom = function scrolledToBottom() {\n    if (unreadMessageCount <= 0) {\n      return false;\n    }\n    var totalMessageCount = messageList.length + unreadMessageCount;\n    var message = messageList[messageList.length - 1];\n    if (totalMessageCount > _.messageConstants.maximumNumOfMessages) {\n      reInitializeMessageBuilder();\n    } else {\n      setUnreadMessageCount(0);\n      scrollToBottom();\n      markMessageAsRead(message);\n      _.CometChatMessageEvents.emit(_.CometChatMessageEvents.onMessageRead, message);\n    }\n  };\n\n  /**\n   * upon scrolling to the bottom, update the unread messagess\n   */\n\n  /**\n   * reset message list\n   */\n  var resetChatWindow = function resetChatWindow() {\n    setMessageList([]);\n    setUnreadMessageCount(0);\n    setMessageCount(0);\n    setnewMessage({});\n  };\n  var handlers = {\n    onTextMessageReceived: handleNewMessages,\n    onMediaMessageReceived: handleNewMessages,\n    onCustomMessageReceived: handleNewCustomMessages,\n    onMessagesDelivered: handleMessageDeliveryAndReadReceipt,\n    onMessagesRead: handleMessageDeliveryAndReadReceipt,\n    onMessageDeleted: handleMessageDelete,\n    onMessageEdited: handleMessageEdit,\n    onGroupMemberScopeChanged: handleNewGroupActionMessage,\n    onGroupMemberKicked: handleNewGroupActionMessage,\n    onGroupMemberBanned: handleNewGroupActionMessage,\n    onGroupMemberUnbanned: handleNewGroupActionMessage,\n    onMemberAddedToGroup: handleNewGroupActionMessage,\n    onGroupMemberLeft: handleNewGroupActionMessage,\n    onGroupMemberJoined: handleNewGroupActionMessage\n  };\n  (0, _hooks.Hooks)(limit, user, group, excludeMessageTypes, onlyUnread, hideDeletedMessages, hideMessagesFromBlockedUsers, tags, messageTypes, loggedInUserRef, messageList, setMessageList, setDecoratorMessage, setChatWith, setChatWithType, messageHandler, messageListCallback, handlers, callbackData, messageTypesRef, messageCategoryRef, messageListManagerRef, _2.localize, errorHandler, chatWith, chatWithType, setMessageCount, setnewMessage);\n\n  /**\n   *\n   * @param {*} message\n   * returns translated text and push it into metadata of message Object\n   */\n  var translateMessage = function translateMessage(message) {\n    var messageId = message.id;\n    var messageText = message.text;\n    var translateToLanguage = _2.CometChatLocalize.getLocale();\n    var translateMessage = \"\";\n    _chat.CometChat.callExtension(_2.ExtensionConstants.messageTranslation, \"POST\", _2.ExtensionURLs.translate, {\n      msgId: messageId,\n      text: messageText,\n      languages: [translateToLanguage]\n    }).then(function (result) {\n      if (result !== null && result !== void 0 && result.hasOwnProperty(\"translations\") && result.translations.length) {\n        var messageTranslation = result.translations[0];\n        translateMessage = \"\".concat(messageTranslation[\"message_translated\"]);\n        if (message.hasOwnProperty(\"metadata\")) {\n          Object.assign(message.metadata, {\n            translatedText: translateMessage\n          });\n        } else {\n          Object.assign(message, {\n            metadata: {\n              translatedText: translateMessage\n            }\n          });\n        }\n        updateMessage(message);\n      }\n    })[\"catch\"](function (error) {\n      errorHandler(error);\n    });\n  };\n\n  /**\n   *\n   * @param {*} message\n   * emits edit Message event\n   */\n  var editMessage = function editMessage(message) {\n    _.CometChatMessageEvents.emit(_.CometChatMessageEvents.onMessageEdit, {\n      message: message,\n      status: _CometChatMessageConstants.messageStatus.inprogress\n    });\n  };\n\n  /**\n   *\n   * @param {*} message\n   * copies message text to the clipboard\n   */\n  var copyMessage = function copyMessage(message) {\n    navigator.clipboard.writeText(message.text);\n  };\n\n  /**\n   *\n   * @param {*} message\n   * Deletes the selected message\n   */\n  var deleteMessage = function deleteMessage(message) {\n    _chat.CometChat.deleteMessage(message.id).then(function (deletedMessage) {\n      removeMessage(deletedMessage);\n    })[\"catch\"](function (error) {\n      errorHandler(error);\n    });\n  };\n\n  /**\n   *\n   * @param {*} message\n   * @param {*} event\n   * set visibility of Emoji Tray to true\n   */\n  var onReactToMessages = function onReactToMessages(message, event, emoji) {\n    // To remove reaction by clicking on the reacted emoji\n    if (emoji) {\n      reactToMessages(message, emoji);\n    }\n    // Open EmojiTray When clicked on Reaction messageOption or Add Reaction button\n    else {\n      setMessageToReact(message);\n      setViewEmojiTray(function (old) {\n        return {\n          emojiTrayPreview: !old.emojiTrayPreview,\n          event: event\n        };\n      });\n    }\n  };\n\n  /**\n   *\n   * @param {*} emojiObject\n   * triggers reactToMessages function after closing the emojiKeyboard\n   */\n  var onReactionSelected = function onReactionSelected(emojiObject) {\n    setViewEmojiTray(function (old) {\n      return {\n        emojiTrayPreview: !old.emojiTrayPreview\n      };\n    });\n    reactToMessages(messageToReact, emojiObject);\n  };\n\n  /**\n   *\n   * @returns EmojiKeyboard inside tooltip\n   */\n  var emojiBoard = function emojiBoard() {\n    if (viewEmojiTray.emojiTrayPreview) {\n      var _viewEmojiTray$event, _viewEmojiTray$event2;\n      return /*#__PURE__*/_react[\"default\"].createElement(_2.CometChatPopover, {\n        position: \"top\",\n        x: viewEmojiTray === null || viewEmojiTray === void 0 ? void 0 : (_viewEmojiTray$event = viewEmojiTray.event) === null || _viewEmojiTray$event === void 0 ? void 0 : _viewEmojiTray$event.clientX,\n        y: viewEmojiTray === null || viewEmojiTray === void 0 ? void 0 : (_viewEmojiTray$event2 = viewEmojiTray.event) === null || _viewEmojiTray$event2 === void 0 ? void 0 : _viewEmojiTray$event2.clientY,\n        style: (0, _style.emojiBoardToolTipStyle)(_theme)\n      }, /*#__PURE__*/_react[\"default\"].createElement(_2.CometChatEmojiKeyboard, {\n        style: (0, _style.emojiKeyBoardStyle)(_theme),\n        hideSearch: _emojiKeyboardConfiguration.hideSearch,\n        theme: _theme,\n        onClick: onReactionSelected.bind(_this) || _emojiKeyboardConfiguration.onClick\n      }));\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   *\n   * @param {*} message\n   * @param {*} emoji\n   * Calls extension reaction to Messages\n   */\n  var reactToMessages = function reactToMessages(message, emoji) {\n    var _loggedInUserRef$curr6, _loggedInUserRef$curr7, _loggedInUserRef$curr8, _loggedInUserRef$curr9;\n    var reactionObject = {};\n    var newMessageObject = {};\n    var messageObject = _objectSpread({}, message);\n    var userObject = {};\n    if (loggedInUserRef !== null && loggedInUserRef !== void 0 && (_loggedInUserRef$curr6 = loggedInUserRef.current) !== null && _loggedInUserRef$curr6 !== void 0 && (_loggedInUserRef$curr7 = _loggedInUserRef$curr6.avatar) !== null && _loggedInUserRef$curr7 !== void 0 && _loggedInUserRef$curr7.length) {\n      userObject[\"avatar\"] = loggedInUserRef.current.avatar;\n    }\n    if (loggedInUserRef !== null && loggedInUserRef !== void 0 && (_loggedInUserRef$curr8 = loggedInUserRef.current) !== null && _loggedInUserRef$curr8 !== void 0 && (_loggedInUserRef$curr9 = _loggedInUserRef$curr8.name) !== null && _loggedInUserRef$curr9 !== void 0 && _loggedInUserRef$curr9.length) {\n      userObject[\"name\"] = loggedInUserRef.current.name;\n    }\n    var emojiObject = (0, _defineProperty2[\"default\"])({}, emoji, (0, _defineProperty2[\"default\"])({}, loggedInUserRef.current.uid, userObject));\n    var reactionExtensionsData = (0, _2.getExtensionsData)(messageObject, _2.ExtensionConstants.reactions);\n    if (reactionExtensionsData) {\n      if (reactionExtensionsData[emoji]) {\n        //if the reactions metadata has the selected emoji/reaction for the loggedin user\n        if (reactionExtensionsData[emoji][loggedInUserRef.current.uid]) {\n          reactionObject = _objectSpread({}, messageObject[\"metadata\"][\"@injected\"][\"extensions\"][\"reactions\"]);\n          delete reactionObject[emoji][loggedInUserRef.current.uid];\n        } else {\n          reactionObject = _objectSpread(_objectSpread({}, messageObject[\"metadata\"][\"@injected\"][\"extensions\"][\"reactions\"]), {}, (0, _defineProperty2[\"default\"])({}, emoji, _objectSpread(_objectSpread({}, messageObject[\"metadata\"][\"@injected\"][\"extensions\"][\"reactions\"][emoji]), {}, (0, _defineProperty2[\"default\"])({}, loggedInUserRef.current.uid, userObject))));\n        }\n      } else {\n        reactionObject = _objectSpread(_objectSpread({}, messageObject[\"metadata\"][\"@injected\"][\"extensions\"][\"reactions\"]), emojiObject);\n      }\n    } else {\n      if (!messageObject.hasOwnProperty(\"metadata\")) {\n        messageObject[\"metadata\"] = {};\n      }\n      if (!messageObject[\"metadata\"].hasOwnProperty(\"@injected\")) {\n        messageObject[\"metadata\"][\"@injected\"] = {};\n      }\n      if (!messageObject[\"metadata\"][\"@injected\"].hasOwnProperty(\"extensions\")) {\n        messageObject[\"metadata\"][\"@injected\"][\"extensions\"] = {};\n      }\n      if (!messageObject[\"metadata\"][\"@injected\"][\"extensions\"].hasOwnProperty(\"reactions\")) {\n        messageObject[\"metadata\"][\"@injected\"][\"extensions\"][\"reactions\"] = {};\n      }\n      reactionObject = _objectSpread({}, emojiObject);\n    }\n    var metadataObject = {\n      metadata: _objectSpread(_objectSpread({}, messageObject[\"metadata\"]), {}, {\n        \"@injected\": _objectSpread(_objectSpread({}, messageObject[\"metadata\"][\"@injected\"]), {}, {\n          extensions: _objectSpread(_objectSpread({}, messageObject[\"metadata\"][\"@injected\"][\"extensions\"]), {}, {\n            reactions: _objectSpread({}, reactionObject)\n          })\n        })\n      })\n    };\n    newMessageObject = _objectSpread(_objectSpread({}, messageObject), {}, {\n      data: _objectSpread(_objectSpread({}, messageObject), metadataObject)\n    }, metadataObject);\n    updateMessage(newMessageObject);\n    _chat.CometChat.callExtension(_2.ExtensionConstants.reactions, \"POST\", _2.ExtensionURLs.reaction, {\n      msgId: message.id,\n      emoji: emoji\n    })[\"catch\"](function (error) {\n      errorHandler(error);\n      updateMessage(message);\n    });\n  };\n\n  /**\n   *\n   * @param {*} messageOptions\n   * Sets MessageOptions Onclick function\n   */\n  var setOptionsCallbackData = function setOptionsCallbackData(messageOptions) {\n    var optionsList = (0, _toConsumableArray2[\"default\"])(messageOptions);\n    optionsList.forEach(function (eachMessageOption) {\n      switch (eachMessageOption.id) {\n        case _2.MessageOptionConstants.deleteMessage:\n          if (eachMessageOption.onClick === null) {\n            eachMessageOption.onClick = deleteMessage.bind(_this);\n          }\n          break;\n        case _2.MessageOptionConstants.editMessage:\n          if (eachMessageOption.onClick === null) {\n            eachMessageOption.onClick = editMessage.bind(_this);\n          }\n          break;\n        case _2.MessageOptionConstants.copyMessage:\n          if (eachMessageOption.onClick === null) {\n            eachMessageOption.onClick = copyMessage.bind(_this);\n          }\n          break;\n        case _2.MessageOptionConstants.reactToMessage:\n          if (eachMessageOption.onClick === null) {\n            eachMessageOption.onClick = onReactToMessages.bind(_this);\n          }\n          break;\n        case _2.MessageOptionConstants.translateMessage:\n          if (eachMessageOption.onClick === null) {\n            eachMessageOption.onClick = translateMessage.bind(_this);\n          }\n          break;\n        default:\n          break;\n      }\n    });\n    return optionsList;\n  };\n\n  /**\n   *\n   * @param {*} messageObject\n   * @returns messageOptions according to the type of message and sender's identity\n   */\n  var filterMessageOptions = function filterMessageOptions(messageObject) {\n    var _messageTypes = messageTypes && messageTypes.length ? messageTypes : (0, _.getDefaultTypes)();\n    var messageOptions = [];\n    // If User sends messageTypes as\n    _messageTypes.forEach(function (messageTemplateObject) {\n      // Checking Message types for Template object and message object to set options\n      if (messageTemplateObject.type === messageObject.type) {\n        messageOptions = messageTemplateObject.options.filter(function (option) {\n          var _loggedInUserRef$curr10, _messageObject$sender, _loggedInUserRef$curr11, _messageObject$sender2;\n          return (\n            // Segregating Sender and receiver options.\n\n            ((_loggedInUserRef$curr10 = loggedInUserRef.current) === null || _loggedInUserRef$curr10 === void 0 ? void 0 : _loggedInUserRef$curr10.uid) === (messageObject === null || messageObject === void 0 ? void 0 : (_messageObject$sender = messageObject.sender) === null || _messageObject$sender === void 0 ? void 0 : _messageObject$sender.uid) && option.optionFor === _2.MessageOptionForConstants.sender || option.optionFor === _2.MessageOptionForConstants.both || ((_loggedInUserRef$curr11 = loggedInUserRef.current) === null || _loggedInUserRef$curr11 === void 0 ? void 0 : _loggedInUserRef$curr11.uid) !== (messageObject === null || messageObject === void 0 ? void 0 : (_messageObject$sender2 = messageObject.sender) === null || _messageObject$sender2 === void 0 ? void 0 : _messageObject$sender2.uid) && option.optionFor === _2.MessageOptionForConstants.receiver || option.optionFor === _2.MessageOptionForConstants.both\n          );\n        });\n      }\n    });\n\n    // If user exclude's an option from options list\n    if (excludeMessageOptions && excludeMessageOptions.length) {\n      excludeMessageOptions.forEach(function (excludeOption) {\n        messageOptions.forEach(function (option) {\n          if (option.id === excludeOption) {\n            var index = messageOptions.indexOf(option);\n            if (index > -1) {\n              messageOptions.splice(index, 1); // 2nd parameter means remove one item only\n            }\n          }\n        });\n      });\n    }\n\n    // If user sends in customMessageOptions\n    if (customMessageOptions !== null && customMessageOptions !== void 0 && customMessageOptions.length) {\n      customMessageOptions.forEach(function (option) {\n        messageOptions.push(option);\n      });\n    }\n\n    // Setting callback data for Message Option's onClick\n    return setOptionsCallbackData(messageOptions);\n  };\n\n  /**\n   *\n   * @param {*} message\n   * @returns filtering custom View from message Types sent in by the user\n   */\n  var filterCustomView = function filterCustomView(message) {\n    if (messageTypes !== null && messageTypes !== void 0 && messageTypes.length) {\n      var templateObject = messageTypes.filter(function (messageTemplateObject) {\n        return messageTemplateObject.type === message.type && messageTemplateObject.customView;\n      });\n      if (templateObject !== null && templateObject !== void 0 && templateObject.customView) {\n        return templateObject.customView;\n      }\n      return null;\n    }\n  };\n\n  /**\n   *\n   * @param {*} customView\n   * @returns customView for handling empty,error and loading states\n   */\n  var getCustomView = function getCustomView(customView) {\n    return /*#__PURE__*/_react[\"default\"].createElement(customView, props);\n  };\n  var getMessageContainer = function getMessageContainer() {\n    var _localize;\n    var messageContainer = null;\n    if (messageList.length === 0 && (decoratorMessage === null || decoratorMessage === void 0 ? void 0 : decoratorMessage.toLowerCase()) === (0, _2.localize)(\"LOADING\").toLowerCase()) {\n      messageContainer = /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        style: (0, _style.decoratorMsgStyle)(style),\n        className: \"messagelist__decorator-message\"\n      }, customView !== null && customView !== void 0 && customView.loading ? getCustomView(customView.loading, props) : /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        style: (0, _style.decoratorMsgImgStyle)(style, loadingIconURL, _theme),\n        className: \"decorator-message\"\n      }));\n    } else if (messageList.length === 0 && (decoratorMessage === null || decoratorMessage === void 0 ? void 0 : decoratorMessage.toLowerCase()) === (0, _2.localize)(\"NO_MESSAGES_FOUND\").toLowerCase()) {\n      messageContainer = /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        style: (0, _style.decoratorMsgStyle)(style),\n        className: \"messagelist__decorator-message\"\n      }, customView !== null && customView !== void 0 && customView.empty ? getCustomView(customView === null || customView === void 0 ? void 0 : customView.empty, props) : /*#__PURE__*/_react[\"default\"].createElement(\"p\", {\n        style: (0, _style.decoratorMsgTxtStyle)(style, _2.fontHelper, _theme, decoratorMessage, _2.localize),\n        className: \"decorator-message\"\n      }, emptyText));\n    } else if ((decoratorMessage === null || decoratorMessage === void 0 ? void 0 : decoratorMessage.toLowerCase()) === ((_localize = (0, _2.localize)(\"NO_MESSAGE_TYPE_SET\")) === null || _localize === void 0 ? void 0 : _localize.toLowerCase())) {\n      messageContainer = /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        style: (0, _style.decoratorMsgStyle)(style),\n        className: \"messagelist__decorator-message\"\n      }, customView !== null && customView !== void 0 && customView.empty ? getCustomView(customView === null || customView === void 0 ? void 0 : customView.empty, props) : /*#__PURE__*/_react[\"default\"].createElement(\"p\", {\n        style: (0, _style.decoratorMsgTxtStyle)(style, _2.fontHelper, _theme, decoratorMessage, _2.localize),\n        className: \"decorator-message\"\n      }, decoratorMessage));\n    } else if (!hideError && (decoratorMessage === null || decoratorMessage === void 0 ? void 0 : decoratorMessage.toLowerCase()) === (0, _2.localize)(\"SOMETHING_WRONG\").toLowerCase()) {\n      messageContainer = /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        style: (0, _style.decoratorMsgStyle)(style),\n        className: \"messagelist__decorator-message\"\n      }, customView !== null && customView !== void 0 && customView.error ? getCustomView(customView.error, props) : /*#__PURE__*/_react[\"default\"].createElement(\"p\", {\n        style: (0, _style.decoratorMsgTxtStyle)(style, _2.fontHelper, _theme, decoratorMessage, _2.localize),\n        className: \"decorator-message\"\n      }, errorText));\n    }\n    return messageContainer;\n  };\n\n  /**\n   * Empty new Message Received State to close Smart reply Preview\n   */\n  var onClose = function onClose() {\n    setnewMessage({});\n  };\n  var _smartRepliesConfiguration = smartRepliesConfiguration || new _SmartRepliesConfiguration.SmartRepliesConfiguration({\n    onClose: onClose\n  });\n  /**\n   *\n   * @returns smart suggestions to the user as per the message received\n   */\n  var getSmartReplies = function getSmartReplies() {\n    if (Object.keys(newMessage).length) {\n      return /*#__PURE__*/_react[\"default\"].createElement(_.CometChatSmartReplies, {\n        messageObject: newMessage,\n        customOutgoingMessageSound: _smartRepliesConfiguration.customOutgoingMessageSound,\n        enableSoundForMessages: _smartRepliesConfiguration.enableSoundForMessages,\n        loggedInUser: loggedInUserRef.current,\n        onClick: _smartRepliesConfiguration.onClick,\n        style: (0, _style.smartReplyStyle)(_theme),\n        onClose: onClose.bind(_this)\n      });\n    }\n  };\n\n  /**\n   *\n   * @returns new Message Indicator banner\n   */\n  var newMessageIndicator = function newMessageIndicator() {\n    if (unreadMessageCount >= 1) {\n      var text = unreadMessageCount > 1 ? \"\".concat(unreadMessageCount, \" \").concat((0, _2.localize)(\"NEW_MESSAGES\")) : \"\".concat(unreadMessageCount, \" \").concat((0, _2.localize)(\"NEW_MESSAGE\"));\n      return /*#__PURE__*/_react[\"default\"].createElement(_.CometChatNewMessageIndicator, {\n        text: text,\n        onClick: scrolledToBottom.bind(_this) || _newMessageIndicatorConfiguration.onClick,\n        Icon: _newMessageIndicatorConfiguration.Icon,\n        style: (0, _style.messageIndicatorStyle)(_theme)\n      });\n    }\n    return null;\n  };\n\n  /**\n   *\n   * @returns Items to render in Message List Component\n   */\n  var renderItems = function renderItems() {\n    // to hold date value for first message\n    var previousMessageDate = null;\n    return messageList.map(function (eachMessage) {\n      var _previousMessageDate, _previousMessageDate2, _previousMessageDate3, _dateConfiguration$st, _theme$palette, _theme$palette2, _dateConfiguration$st2, _theme$typography, _loggedInUserRef$curr12, _eachMessage$sender, _loggedInUserRef$curr13, _eachMessage$sender2;\n      // date label component\n      var dateSeparator = null;\n\n      // Converting Unix  timeStamp to readable date format\n      var currentMessageDate = new Date(eachMessage.sentAt * 1000);\n      var currentDate = currentMessageDate.getDate() + \"-\" + currentMessageDate.getMonth + \"-\" + currentMessageDate.getFullYear();\n      var previousDate = ((_previousMessageDate = previousMessageDate) === null || _previousMessageDate === void 0 ? void 0 : _previousMessageDate.getDate()) + \"-\" + ((_previousMessageDate2 = previousMessageDate) === null || _previousMessageDate2 === void 0 ? void 0 : _previousMessageDate2.getMonth) + \"-\" + ((_previousMessageDate3 = previousMessageDate) === null || _previousMessageDate3 === void 0 ? void 0 : _previousMessageDate3.getFullYear());\n      var pattern = _dateConfiguration === null || _dateConfiguration === void 0 ? void 0 : _dateConfiguration.pattern;\n      var customPattern = _dateConfiguration === null || _dateConfiguration === void 0 ? void 0 : _dateConfiguration.customPattern;\n      var dateStyle = new _Shared.DateStyles(_objectSpread(_objectSpread({}, _dateConfiguration === null || _dateConfiguration === void 0 ? void 0 : _dateConfiguration.style), {}, {\n        textColor: (_dateConfiguration === null || _dateConfiguration === void 0 ? void 0 : (_dateConfiguration$st = _dateConfiguration.style) === null || _dateConfiguration$st === void 0 ? void 0 : _dateConfiguration$st.textColor) || (_theme === null || _theme === void 0 ? void 0 : (_theme$palette = _theme.palette) === null || _theme$palette === void 0 ? void 0 : _theme$palette.accent500[_theme === null || _theme === void 0 ? void 0 : (_theme$palette2 = _theme.palette) === null || _theme$palette2 === void 0 ? void 0 : _theme$palette2.mode]),\n        textFont: (_dateConfiguration === null || _dateConfiguration === void 0 ? void 0 : (_dateConfiguration$st2 = _dateConfiguration.style) === null || _dateConfiguration$st2 === void 0 ? void 0 : _dateConfiguration$st2.textFont) || (0, _2.fontHelper)(_theme === null || _theme === void 0 ? void 0 : (_theme$typography = _theme.typography) === null || _theme$typography === void 0 ? void 0 : _theme$typography.caption2)\n      }));\n\n      // Comparing Date, Month, Year of the two dates\n      if (previousDate !== currentDate) {\n        dateSeparator = /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n          style: (0, _style.messageDateContainerStyle)(_theme)\n        }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n          style: (0, _style.messageDateStyle)(_theme)\n        }, /*#__PURE__*/_react[\"default\"].createElement(_Shared.CometChatDate, {\n          timestamp: eachMessage === null || eachMessage === void 0 ? void 0 : eachMessage.sentAt,\n          pattern: pattern,\n          customPattern: customPattern,\n          style: dateStyle\n        })));\n      }\n      previousMessageDate = currentMessageDate;\n      var messageKey = eachMessage.id || eachMessage.muid;\n      var className = \"message__\".concat(eachMessage.type, \" message__kit__background\");\n      var alignmentValue = _2.MessageBubbleAlignmentConstants.left;\n      var background;\n      var messageBubbleData = {};\n      if (alignment === (_2.MessageListAlignmentConstants === null || _2.MessageListAlignmentConstants === void 0 ? void 0 : _2.MessageListAlignmentConstants.standard) && ((_loggedInUserRef$curr12 = loggedInUserRef.current) === null || _loggedInUserRef$curr12 === void 0 ? void 0 : _loggedInUserRef$curr12.uid) === (eachMessage === null || eachMessage === void 0 ? void 0 : (_eachMessage$sender = eachMessage.sender) === null || _eachMessage$sender === void 0 ? void 0 : _eachMessage$sender.uid)) {\n        alignmentValue = _2.MessageBubbleAlignmentConstants.right;\n        background = {\n          background: _theme.palette.primary[_theme.palette.mode]\n        };\n        messageBubbleData = sentMessageInputData;\n      } else if (alignment === (_2.MessageListAlignmentConstants === null || _2.MessageListAlignmentConstants === void 0 ? void 0 : _2.MessageListAlignmentConstants.left) && ((_loggedInUserRef$curr13 = loggedInUserRef.current) === null || _loggedInUserRef$curr13 === void 0 ? void 0 : _loggedInUserRef$curr13.uid) === (eachMessage === null || eachMessage === void 0 ? void 0 : (_eachMessage$sender2 = eachMessage.sender) === null || _eachMessage$sender2 === void 0 ? void 0 : _eachMessage$sender2.uid)) {\n        alignmentValue = _2.MessageBubbleAlignmentConstants.left;\n        background = {\n          background: _theme.palette.secondary[_theme.palette.mode]\n        };\n        messageBubbleData = sentMessageInputData;\n      } else {\n        alignmentValue = _2.MessageBubbleAlignmentConstants.left;\n        background = {\n          background: _theme.palette.secondary[_theme.palette.mode]\n        };\n        messageBubbleData = receivedMessageInputData;\n      }\n      var style = _objectSpread(_objectSpread({\n        width: \"100%\",\n        height: \"100%\",\n        border: \"0 none\",\n        borderRadius: \"12px\",\n        nameTextFont: (0, _2.fontHelper)(_theme.typography.caption1),\n        timestampFont: (0, _2.fontHelper)(_theme.typography.caption2)\n      }, background), {}, {\n        nameTextColor: _theme.palette.accent500[_theme.palette.mode],\n        timestampColor: _theme.palette.accent[_theme.palette.mode]\n      });\n      return !eachMessage.action ? /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, {\n        key: messageKey\n      }, dateSeparator, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        key: messageKey,\n        className: className,\n        style: (0, _style.messageBubbleStyle)(alignment, loggedInUserRef.current, eachMessage)\n      }, /*#__PURE__*/_react[\"default\"].createElement(_.CometChatMessageBubble, {\n        key: messageKey,\n        messageBubbleData: messageBubbleData || _messageBubbleConfiguration.messageBubbleData,\n        alignment: alignmentValue,\n        timeAlignment: _messageBubbleConfiguration.timeAlignment,\n        messageObject: eachMessage,\n        messageOptions: filterMessageOptions(eachMessage),\n        loggedInUser: loggedInUserRef.current,\n        customView: filterCustomView(eachMessage),\n        style: _objectSpread({}, style),\n        theme: _theme,\n        updateReaction: onReactToMessages.bind(_this)\n      }))) : null;\n    });\n  };\n  return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"message__list\",\n    style: (0, _style.chatListStyle)(style, _theme)\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"list__wrapper\",\n    style: (0, _style.listWrapperStyle)(style, _theme),\n    ref: messageListEndRef,\n    onScroll: handleScroll\n  }, getMessageContainer(), newMessageIndicator(), emojiBoard(), renderItems()), getSmartReplies());\n});\nexports.CometChatMessageList = CometChatMessageList;\nCometChatMessageList.defaultProps = {\n  limit: 30,\n  user: null,\n  group: null,\n  alignment: \"standard\",\n  messageTypes: null,\n  excludeMessageTypes: null,\n  excludeMessageOptions: null,\n  customMessageOptions: null,\n  onlyUnread: false,\n  hideMessagesFromBlockedUsers: false,\n  hideDeletedMessages: false,\n  tags: null,\n  loadingIconURL: _spinner[\"default\"],\n  customView: {\n    loading: \"\",\n    empty: \"\",\n    error: \"\"\n  },\n  emptyText: \"No messages here yet...\",\n  errorText: \"Something went wrong\",\n  hideError: false,\n  customIncomingMessageSound: \"\",\n  enableSoundForMessages: true,\n  sentMessageInputData: {\n    thumbnail: true,\n    title: true,\n    timestamp: true,\n    readReceipt: true\n  },\n  receivedMessageInputData: {\n    thumbnail: true,\n    title: true,\n    timestamp: true,\n    readReceipt: false\n  },\n  style: {\n    width: \"100%\",\n    height: \"100%\",\n    border: \"\",\n    borderRadius: \"8px\",\n    background: \"\",\n    textFont: \"400 12px Inter, sans-serif\",\n    textColor: \"rgb(20,20,20)\"\n  },\n  messageBubbleConfiguration: null,\n  emojiKeyboardConfiguration: null,\n  smartRepliesConfiguration: null,\n  newMessageIndicatorConfiguration: null,\n  dateConfiguration: null\n};\nCometChatMessageList.propTypes = {\n  limit: _propTypes[\"default\"].number,\n  user: _propTypes[\"default\"].object,\n  group: _propTypes[\"default\"].object,\n  alignment: _propTypes[\"default\"].string,\n  messageTypes: _propTypes[\"default\"].array,\n  excludeMessageTypes: _propTypes[\"default\"].array,\n  excludeMessageOptions: _propTypes[\"default\"].array,\n  customMessageOptions: _propTypes[\"default\"].array,\n  onlyUnread: _propTypes[\"default\"].bool,\n  hideMessagesFromBlockedUsers: _propTypes[\"default\"].bool,\n  hideDeletedMessages: _propTypes[\"default\"].bool,\n  tags: _propTypes[\"default\"].array,\n  loadingIconURL: _propTypes[\"default\"].string,\n  customView: _propTypes[\"default\"].object,\n  emptyText: _propTypes[\"default\"].string,\n  errorText: _propTypes[\"default\"].string,\n  hideError: _propTypes[\"default\"].bool,\n  customIncomingMessageSound: _propTypes[\"default\"].string,\n  enableSoundForMessages: _propTypes[\"default\"].bool,\n  sentMessageInputData: _propTypes[\"default\"].object,\n  receivedMessageInputData: _propTypes[\"default\"].object,\n  style: _propTypes[\"default\"].object,\n  messageBubbleConfiguration: _propTypes[\"default\"].object,\n  emojiKeyboardConfiguration: _propTypes[\"default\"].object,\n  smartRepliesConfiguration: _propTypes[\"default\"].object,\n  newMessageIndicatorConfiguration: _propTypes[\"default\"].object,\n  dateConfiguration: _propTypes[\"default\"].object\n};","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","CometChatMessageList","_defineProperty2","_toConsumableArray2","_slicedToArray2","_react","_propTypes","_chat","_","_2","_spinner","_hooks","_controller","_style","_CometChatMessageConstants","_Shared","_3","_SmartRepliesConfiguration","_NewMessageIndicatorConfiguration","_MessageBubbleConfiguration","_DateConfiguration","_this","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","forwardRef","props","ref","limit","user","group","alignment","messageTypes","excludeMessageOptions","customMessageOptions","excludeMessageTypes","onlyUnread","hideMessagesFromBlockedUsers","hideDeletedMessages","tags","loadingIconURL","customView","emptyText","errorText","hideError","customIncomingMessageSound","enableSoundForMessages","sentMessageInputData","receivedMessageInputData","style","theme","messageBubbleConfiguration","emojiKeyboardConfiguration","smartRepliesConfiguration","newMessageIndicatorConfiguration","dateConfiguration","lastScrollTop","loggedInUserRef","useRef","_React$useState","useState","_React$useState2","messageCount","setMessageCount","_React$useState3","_React$useState4","messageList","setMessageList","_React$useState5","_React$useState6","unreadMessageCount","setUnreadMessageCount","_React$useState7","_React$useState8","callbackData","setCallbackData","_React$useState9","localize","_React$useState10","decoratorMessage","setDecoratorMessage","_React$useState11","_React$useState12","chatWith","setChatWith","_React$useState13","_React$useState14","chatWithType","setChatWithType","messageTypesRef","messageCategoryRef","messageListManagerRef","messageListEndRef","_React$useState15","_React$useState16","viewEmojiTray","setViewEmojiTray","_React$useState17","_React$useState18","messageToReact","setMessageToReact","_React$useState19","_React$useState20","newMessage","setnewMessage","_theme","CometChatTheme","_messageBubbleConfiguration","MessageBubbleConfiguration","_emojiKeyboardConfiguration","EmojiKeyboardConfiguration","_newMessageIndicatorConfiguration","NewMessageIndicatorConfiguration","_dateConfiguration","DateConfiguration","pattern","useImperativeHandle","addMessage","updateMessage","removeMessage","deleteMessage","scrollToBottom","translateMessage","reactToMessages","messageListCallback","listenerName","_len","args","Array","_key","name","concat","errorHandler","errorCode","CometChatMessageEvents","emit","onMessageError","reInitializeMessageBuilder","resetChatWindow","current","removeListeners","MessageListManager","fetchMessages","then","messagelist","messageHandler","attachListeners","message","updateUnreadMessageCount","playNotificationSound","_message$metadata","category","MessageCategoryConstants","CometChatSoundManager","play","Sound","incomingMessage","metadata","incrementUnreadCount","withMuid","undefined","messageKey","findIndex","m","muid","id","messageObject","splice","updateMessageAsRead","messageId","readAt","getReadAt","messages","markMessageAsRead","CometChat","markAsRead","error","handleNewMessages","messageReceivedHandler","scrollHeight","scrollTop","clientHeight","messageConstants","maximumNumOfMessages","onMessageRead","ReceiverTypeConstants","getReceiverType","getReceiverId","guid","_loggedInUserRef$curr","_loggedInUserRef$curr2","getSender","uid","handleNewCustomMessages","_loggedInUserRef$curr3","_loggedInUserRef$curr4","customMessageReceivedHandler","type","CometChatCustomMessageTypes","poll","document","whiteboard","handleMessageDeliveryAndReadReceipt","messageReceipt","_messageReceipt$getSe","getUid","getReceiver","getReceiptType","updateMessageAsDelivered","handleMessageDelete","handleMessageEdit","handleNewGroupActionMessage","prependMessages","scroll","val","_message$getSender","_loggedInUserRef$curr5","lastScrollPoint","setTimeout","handleScroll","event","currentTarget","top","Math","round","deliveredAt","getDeliveredAt","scrolledToBottom","totalMessageCount","handlers","onTextMessageReceived","onMediaMessageReceived","onCustomMessageReceived","onMessagesDelivered","onMessagesRead","onMessageDeleted","onMessageEdited","onGroupMemberScopeChanged","onGroupMemberKicked","onGroupMemberBanned","onGroupMemberUnbanned","onMemberAddedToGroup","onGroupMemberLeft","onGroupMemberJoined","Hooks","messageText","text","translateToLanguage","CometChatLocalize","getLocale","callExtension","ExtensionConstants","messageTranslation","ExtensionURLs","translate","msgId","languages","result","hasOwnProperty","translations","assign","translatedText","editMessage","onMessageEdit","status","messageStatus","inprogress","copyMessage","navigator","clipboard","writeText","deletedMessage","onReactToMessages","emoji","old","emojiTrayPreview","onReactionSelected","emojiObject","emojiBoard","_viewEmojiTray$event","_viewEmojiTray$event2","createElement","CometChatPopover","position","x","clientX","y","clientY","emojiBoardToolTipStyle","CometChatEmojiKeyboard","emojiKeyBoardStyle","hideSearch","onClick","bind","_loggedInUserRef$curr6","_loggedInUserRef$curr7","_loggedInUserRef$curr8","_loggedInUserRef$curr9","reactionObject","newMessageObject","userObject","avatar","reactionExtensionsData","getExtensionsData","reactions","metadataObject","extensions","data","reaction","setOptionsCallbackData","messageOptions","optionsList","eachMessageOption","MessageOptionConstants","reactToMessage","filterMessageOptions","_messageTypes","getDefaultTypes","messageTemplateObject","options","option","_loggedInUserRef$curr10","_messageObject$sender","_loggedInUserRef$curr11","_messageObject$sender2","sender","optionFor","MessageOptionForConstants","both","receiver","excludeOption","index","indexOf","filterCustomView","templateObject","getCustomView","getMessageContainer","_localize","messageContainer","toLowerCase","decoratorMsgStyle","className","loading","decoratorMsgImgStyle","empty","decoratorMsgTxtStyle","fontHelper","onClose","_smartRepliesConfiguration","SmartRepliesConfiguration","getSmartReplies","CometChatSmartReplies","customOutgoingMessageSound","loggedInUser","smartReplyStyle","newMessageIndicator","CometChatNewMessageIndicator","Icon","messageIndicatorStyle","renderItems","previousMessageDate","map","eachMessage","_previousMessageDate","_previousMessageDate2","_previousMessageDate3","_dateConfiguration$st","_theme$palette","_theme$palette2","_dateConfiguration$st2","_theme$typography","_loggedInUserRef$curr12","_eachMessage$sender","_loggedInUserRef$curr13","_eachMessage$sender2","dateSeparator","currentMessageDate","Date","sentAt","currentDate","getDate","getMonth","getFullYear","previousDate","customPattern","dateStyle","DateStyles","textColor","palette","accent500","mode","textFont","typography","caption2","messageDateContainerStyle","messageDateStyle","CometChatDate","timestamp","alignmentValue","MessageBubbleAlignmentConstants","left","background","messageBubbleData","MessageListAlignmentConstants","standard","right","primary","secondary","width","height","border","borderRadius","nameTextFont","caption1","timestampFont","nameTextColor","timestampColor","accent","action","Fragment","messageBubbleStyle","CometChatMessageBubble","timeAlignment","updateReaction","chatListStyle","listWrapperStyle","onScroll","defaultProps","thumbnail","title","readReceipt","propTypes","number","string","array","bool"],"sources":["/home/admin1/dev/react/sample-react-guides/node_modules/@cometchat-pro/react-ui-kit/dist/Messages/CometChatMessageList/index.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CometChatMessageList = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _chat = require(\"@cometchat-pro/chat\");\nvar _ = require(\"..\");\nvar _2 = require(\"../..\");\nvar _spinner = _interopRequireDefault(require(\"./resources/spinner.svg\"));\nvar _hooks = require(\"./hooks\");\nvar _controller = require(\"./controller\");\nvar _style = require(\"./style\");\nvar _CometChatMessageConstants = require(\"../CometChatMessageConstants\");\nvar _Shared = require(\"../../Shared\");\nvar _3 = require(\"../\");\nvar _SmartRepliesConfiguration = require(\"../CometChatSmartReplies/SmartRepliesConfiguration\");\nvar _NewMessageIndicatorConfiguration = require(\"../CometChatNewMessageIndicator/NewMessageIndicatorConfiguration\");\nvar _MessageBubbleConfiguration = require(\"../Bubbles/CometChatMessageBubble/MessageBubbleConfiguration\");\nvar _DateConfiguration = require(\"../../Shared/PrimaryComponents/CometChatConfiguration/DateConfiguration\");\nvar _this = void 0;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n/**\n *\n * CometChatMessageList component retrieves the latest messages and presents them inside a message bubble, that a CometChat logged-in user has been a part of.\n * The state of the component is communicated via 3 states i.e empty, loading and error\n *\n * @version 1.0.0\n * @author CometChatTeam\n * @copyright Â© 2022 CometChat Inc.\n *\n *\n */\n\nvar CometChatMessageList = /*#__PURE__*/_react[\"default\"].forwardRef(function (props, ref) {\n  /**\n   * Destructuring prop values\n   */\n  var limit = props.limit,\n    user = props.user,\n    group = props.group,\n    alignment = props.alignment,\n    messageTypes = props.messageTypes,\n    excludeMessageOptions = props.excludeMessageOptions,\n    customMessageOptions = props.customMessageOptions,\n    excludeMessageTypes = props.excludeMessageTypes,\n    onlyUnread = props.onlyUnread,\n    hideMessagesFromBlockedUsers = props.hideMessagesFromBlockedUsers,\n    hideDeletedMessages = props.hideDeletedMessages,\n    tags = props.tags,\n    loadingIconURL = props.loadingIconURL,\n    customView = props.customView,\n    emptyText = props.emptyText,\n    errorText = props.errorText,\n    hideError = props.hideError,\n    customIncomingMessageSound = props.customIncomingMessageSound,\n    enableSoundForMessages = props.enableSoundForMessages,\n    sentMessageInputData = props.sentMessageInputData,\n    receivedMessageInputData = props.receivedMessageInputData,\n    style = props.style,\n    theme = props.theme,\n    messageBubbleConfiguration = props.messageBubbleConfiguration,\n    emojiKeyboardConfiguration = props.emojiKeyboardConfiguration,\n    smartRepliesConfiguration = props.smartRepliesConfiguration,\n    newMessageIndicatorConfiguration = props.newMessageIndicatorConfiguration,\n    dateConfiguration = props.dateConfiguration;\n  var lastScrollTop = 0;\n  var loggedInUserRef = _react[\"default\"].useRef(null);\n  var _React$useState = _react[\"default\"].useState(0),\n    _React$useState2 = (0, _slicedToArray2[\"default\"])(_React$useState, 2),\n    messageCount = _React$useState2[0],\n    setMessageCount = _React$useState2[1];\n  var _React$useState3 = _react[\"default\"].useState([]),\n    _React$useState4 = (0, _slicedToArray2[\"default\"])(_React$useState3, 2),\n    messageList = _React$useState4[0],\n    setMessageList = _React$useState4[1];\n  var _React$useState5 = _react[\"default\"].useState(0),\n    _React$useState6 = (0, _slicedToArray2[\"default\"])(_React$useState5, 2),\n    unreadMessageCount = _React$useState6[0],\n    setUnreadMessageCount = _React$useState6[1];\n  var _React$useState7 = _react[\"default\"].useState(null),\n    _React$useState8 = (0, _slicedToArray2[\"default\"])(_React$useState7, 2),\n    callbackData = _React$useState8[0],\n    setCallbackData = _React$useState8[1];\n  var _React$useState9 = _react[\"default\"].useState((0, _2.localize)(\"LOADING\")),\n    _React$useState10 = (0, _slicedToArray2[\"default\"])(_React$useState9, 2),\n    decoratorMessage = _React$useState10[0],\n    setDecoratorMessage = _React$useState10[1];\n  var _React$useState11 = _react[\"default\"].useState(null),\n    _React$useState12 = (0, _slicedToArray2[\"default\"])(_React$useState11, 2),\n    chatWith = _React$useState12[0],\n    setChatWith = _React$useState12[1];\n  var _React$useState13 = _react[\"default\"].useState(null),\n    _React$useState14 = (0, _slicedToArray2[\"default\"])(_React$useState13, 2),\n    chatWithType = _React$useState14[0],\n    setChatWithType = _React$useState14[1];\n  var messageTypesRef = _react[\"default\"].useRef(null);\n  var messageCategoryRef = _react[\"default\"].useRef(null);\n  var messageListManagerRef = _react[\"default\"].useRef(null);\n  var messageListEndRef = _react[\"default\"].useRef(null);\n  var _React$useState15 = _react[\"default\"].useState({}),\n    _React$useState16 = (0, _slicedToArray2[\"default\"])(_React$useState15, 2),\n    viewEmojiTray = _React$useState16[0],\n    setViewEmojiTray = _React$useState16[1];\n  var _React$useState17 = _react[\"default\"].useState(null),\n    _React$useState18 = (0, _slicedToArray2[\"default\"])(_React$useState17, 2),\n    messageToReact = _React$useState18[0],\n    setMessageToReact = _React$useState18[1];\n  var _React$useState19 = _react[\"default\"].useState({}),\n    _React$useState20 = (0, _slicedToArray2[\"default\"])(_React$useState19, 2),\n    newMessage = _React$useState20[0],\n    setnewMessage = _React$useState20[1];\n  var _theme = new _2.CometChatTheme(theme !== null && theme !== void 0 ? theme : {});\n  var _messageBubbleConfiguration = messageBubbleConfiguration || new _MessageBubbleConfiguration.MessageBubbleConfiguration({});\n  var _emojiKeyboardConfiguration = emojiKeyboardConfiguration || new _3.EmojiKeyboardConfiguration({});\n  var _newMessageIndicatorConfiguration = newMessageIndicatorConfiguration || new _NewMessageIndicatorConfiguration.NewMessageIndicatorConfiguration({});\n  var _dateConfiguration = dateConfiguration || new _DateConfiguration.DateConfiguration({\n    pattern: \"dayDateFormat\"\n  });\n\n  /**\n   * Update messagelist\n   */\n  _react[\"default\"].useImperativeHandle(ref, function () {\n    return {\n      addMessage: addMessage,\n      updateMessage: updateMessage,\n      removeMessage: removeMessage,\n      deleteMessage: deleteMessage,\n      scrollToBottom: scrollToBottom,\n      translateMessage: translateMessage,\n      reactToMessages: reactToMessages\n    };\n  });\n  var messageListCallback = function messageListCallback(listenerName) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    setCallbackData({\n      name: listenerName,\n      args: [].concat(args)\n    });\n  };\n  var errorHandler = function errorHandler(errorCode) {\n    _.CometChatMessageEvents.emit(_.CometChatMessageEvents.onMessageError, errorCode);\n  };\n  var reInitializeMessageBuilder = function reInitializeMessageBuilder() {\n    resetChatWindow();\n    setDecoratorMessage(\"loading\");\n    messageListManagerRef.current.removeListeners();\n    messageListManagerRef.current = new _controller.MessageListManager(limit, user, group, onlyUnread, hideDeletedMessages, hideMessagesFromBlockedUsers, tags, messageTypesRef.current, messageCategoryRef.current);\n    (0, _hooks.fetchMessages)(messageListManagerRef === null || messageListManagerRef === void 0 ? void 0 : messageListManagerRef.current).then(function (messagelist) {\n      messageHandler(messagelist, true);\n      setMessageList(messagelist);\n      messageListManagerRef.current.attachListeners(messageListCallback);\n    });\n  };\n\n  /**\n   * add new message to the messageList\n   */\n  var addMessage = function addMessage(message) {\n    var messagelist = (0, _toConsumableArray2[\"default\"])(messageList);\n    messagelist.push(message);\n    setMessageList(messagelist);\n\n    // scrollToBottom()\n  };\n\n  /**\n   * Set unreadCount when new message is received\n   */\n  var updateUnreadMessageCount = function updateUnreadMessageCount() {\n    setUnreadMessageCount(unreadMessageCount + 1);\n  };\n\n  /**\n   *\n   * @param {*} message\n   * Function to play notification sound if sound for messages is enabled.\n   * It checks for custom sound and if not provided plays default sound.\n   */\n  var playNotificationSound = function playNotificationSound(message) {\n    var _message$metadata;\n    if ((message === null || message === void 0 ? void 0 : message.category) === _2.MessageCategoryConstants.message) {\n      if (enableSoundForMessages) {\n        if (customIncomingMessageSound) {\n          _2.CometChatSoundManager.play(_2.CometChatSoundManager.Sound.incomingMessage, customIncomingMessageSound);\n        } else {\n          _2.CometChatSoundManager.play(_2.CometChatSoundManager.Sound.incomingMessage);\n        }\n      }\n    } else if ((message === null || message === void 0 ? void 0 : message.category) !== _2.MessageCategoryConstants.message && message !== null && message !== void 0 && (_message$metadata = message.metadata) !== null && _message$metadata !== void 0 && _message$metadata.incrementUnreadCount) {\n      if (enableSoundForMessages) {\n        if (customIncomingMessageSound) {\n          _2.CometChatSoundManager.play(customIncomingMessageSound);\n        } else {\n          _2.CometChatSoundManager.play(_2.CometChatSoundManager.Sound.incomingMessage);\n        }\n      }\n    }\n  };\n\n  /**\n   * Update message\n   */\n  var updateMessage = function updateMessage(message) {\n    var withMuid = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var messageKey;\n    var messagelist = (0, _toConsumableArray2[\"default\"])(messageList);\n    if (withMuid) {\n      messageKey = messagelist.findIndex(function (m) {\n        return m.muid === message.muid;\n      });\n    } else {\n      messageKey = messagelist.findIndex(function (m) {\n        return m.id === message.id;\n      });\n    }\n    if (messageKey > -1) {\n      var messageObject = _objectSpread(_objectSpread({}, messageList[messageKey]), message);\n      messagelist.splice(messageKey, 1, messageObject);\n      setMessageCount(messagelist.length);\n      setMessageList(messagelist);\n    }\n  };\n\n  /**\n   * Update message as read; show double blue tick\n   */\n  var updateMessageAsRead = function updateMessageAsRead(message) {\n    var messagelist = (0, _toConsumableArray2[\"default\"])(messageList);\n    var messageKey = messagelist.findIndex(function (m) {\n      return m.id === message.messageId;\n    });\n    if (messageKey > -1) {\n      var messageObject = _objectSpread({}, messageList[messageKey]);\n      messageObject.readAt = message.getReadAt();\n      messagelist.splice(messageKey, 1, messageObject);\n      setMessageList(messagelist);\n    }\n  };\n\n  /**\n   * Update message as deleted; show deleted message bubble\n   */\n  var removeMessage = function removeMessage(message) {\n    var messages = (0, _toConsumableArray2[\"default\"])(messageList);\n    var messageKey = messages.findIndex(function (m) {\n      return m.id === message.id;\n    });\n    if (messageKey > -1) {\n      if (hideDeletedMessages) {\n        messages.splice(messageKey, 1);\n      } else {\n        var messageObject = _objectSpread(_objectSpread({}, messages[messageKey]), message);\n        messages.splice(messageKey, 1, messageObject);\n      }\n      setMessageList(function () {\n        return messages;\n      });\n    }\n  };\n\n  /**\n   *\n   * @param {*} message\n   * emits markAsRead Event\n   */\n  var markMessageAsRead = function markMessageAsRead(message) {\n    if (!(message !== null && message !== void 0 && message.readAt)) {\n      _chat.CometChat.markAsRead(message)[\"catch\"](function (error) {\n        errorHandler(error);\n      });\n    }\n  };\n  var handleNewMessages = function handleNewMessages(message) {\n    //handling dom lag - increment count only for main message list\n\n    setnewMessage(message);\n    var messageReceivedHandler = function messageReceivedHandler(message) {\n      //if the user has not scrolled in chat window(scroll is at the bottom of the chat window)\n      setMessageCount(messageCount + 1);\n      if (messageListEndRef.current.scrollHeight - messageListEndRef.current.scrollTop - messageListEndRef.current.clientHeight <= 1) {\n        if (messageCount > _.messageConstants.maximumNumOfMessages) {\n          reInitializeMessageBuilder();\n        } else {\n          playNotificationSound(message);\n          addMessage(message);\n          scrollToBottom();\n          markMessageAsRead(message);\n          _.CometChatMessageEvents.emit(_.CometChatMessageEvents.onMessageRead, message);\n        }\n      } else {\n        //if the user has scrolled up in chat window\n        playNotificationSound(message);\n        addMessage(message);\n        updateUnreadMessageCount();\n      }\n    };\n\n    /**\n     * message receiver is chat window group\n     */\n    if (chatWithType === _2.ReceiverTypeConstants.group && message.getReceiverType() === _2.ReceiverTypeConstants.group && message.getReceiverId() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.guid)) {\n      messageReceivedHandler(message);\n    } else if (chatWithType === _2.ReceiverTypeConstants.user && message.getReceiverType() === _2.ReceiverTypeConstants.user) {\n      var _loggedInUserRef$curr, _loggedInUserRef$curr2;\n      /**\n       * If the message sender is chat window user and message receiver is logged-in user\n       * OR\n       * If the message sender is logged-in user and message receiver is chat window user\n       */\n      if (message.getSender().uid === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.uid) && message.getReceiverId() === (loggedInUserRef === null || loggedInUserRef === void 0 ? void 0 : (_loggedInUserRef$curr = loggedInUserRef.current) === null || _loggedInUserRef$curr === void 0 ? void 0 : _loggedInUserRef$curr.uid) || message.getSender().uid === (loggedInUserRef === null || loggedInUserRef === void 0 ? void 0 : (_loggedInUserRef$curr2 = loggedInUserRef.current) === null || _loggedInUserRef$curr2 === void 0 ? void 0 : _loggedInUserRef$curr2.uid) && message.getReceiverId() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.uid)) {\n        messageReceivedHandler(message);\n      }\n    }\n  };\n  var handleNewCustomMessages = function handleNewCustomMessages(message) {\n    var _loggedInUserRef$curr3, _loggedInUserRef$curr4;\n    var customMessageReceivedHandler = function customMessageReceivedHandler(message) {\n      setMessageCount(messageCount + 1);\n      //if the user has not scrolled in chat window(scroll is at the bottom of the chat window)\n      if (messageListEndRef.current.scrollHeight - messageListEndRef.current.scrollTop - messageListEndRef.current.clientHeight <= 1) {\n        if (messageCount > _.messageConstants.maximumNumOfMessages) {\n          reInitializeMessageBuilder();\n        } else {\n          playNotificationSound(message);\n          addMessage(message);\n          scrollToBottom();\n          markMessageAsRead(message);\n          _.CometChatMessageEvents.emit(_.CometChatMessageEvents.onMessageRead, message);\n        }\n      } else {\n        //if the user has scrolled in chat window\n        playNotificationSound(message);\n        addMessage(message);\n        updateUnreadMessageCount();\n      }\n    };\n    if (chatWithType === _2.ReceiverTypeConstants.group && message.getReceiverType() === _2.ReceiverTypeConstants.group && ((_loggedInUserRef$curr3 = loggedInUserRef.current) === null || _loggedInUserRef$curr3 === void 0 ? void 0 : _loggedInUserRef$curr3.uid) === message.getSender().uid && message.getReceiverId() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.guid) && (message.type === _.CometChatCustomMessageTypes.poll || message.type === _.CometChatCustomMessageTypes.document || message.type === _.CometChatCustomMessageTypes.whiteboard)) {\n      playNotificationSound();\n      addMessage(message);\n      scrollToBottom();\n    } else if (chatWithType === _2.ReceiverTypeConstants.group && message.getReceiverType() === _2.ReceiverTypeConstants.group && message.getReceiverId() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.guid)) {\n      customMessageReceivedHandler(message, _2.ReceiverTypeConstants.group);\n    } else if (chatWithType === _2.ReceiverTypeConstants.user && message.getReceiverType() === _2.ReceiverTypeConstants.user && message.getSender().uid === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.uid)) {\n      customMessageReceivedHandler(message, _2.ReceiverTypeConstants.user);\n    } else if (chatWithType === _2.ReceiverTypeConstants.user && message.getReceiverType() === _2.ReceiverTypeConstants.user && ((_loggedInUserRef$curr4 = loggedInUserRef.current) === null || _loggedInUserRef$curr4 === void 0 ? void 0 : _loggedInUserRef$curr4.uid) === message.getSender().uid && message.getReceiverId() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.uid) && (message.type === _.CometChatCustomMessageTypes.poll || message.type === _.CometChatCustomMessageTypes.document || message.type === _.CometChatCustomMessageTypes.whiteboard)) {\n      playNotificationSound(message);\n      addMessage(message);\n      scrollToBottom();\n    }\n  };\n  var handleMessageDeliveryAndReadReceipt = function handleMessageDeliveryAndReadReceipt(messageReceipt) {\n    var _messageReceipt$getSe;\n    //read receipts\n    if ((messageReceipt === null || messageReceipt === void 0 ? void 0 : messageReceipt.getReceiverType()) === _2.ReceiverTypeConstants.user && (messageReceipt === null || messageReceipt === void 0 ? void 0 : (_messageReceipt$getSe = messageReceipt.getSender()) === null || _messageReceipt$getSe === void 0 ? void 0 : _messageReceipt$getSe.getUid()) === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.uid) && (messageReceipt === null || messageReceipt === void 0 ? void 0 : messageReceipt.getReceiver()) === loggedInUserRef.current.uid) {\n      if ((messageReceipt === null || messageReceipt === void 0 ? void 0 : messageReceipt.getReceiptType()) === \"delivery\") {\n        updateMessageAsDelivered(messageReceipt);\n      } else if ((messageReceipt === null || messageReceipt === void 0 ? void 0 : messageReceipt.getReceiptType()) === \"read\") {\n        updateMessageAsRead(messageReceipt);\n      }\n    } else if ((messageReceipt === null || messageReceipt === void 0 ? void 0 : messageReceipt.getReceiverType()) === _2.ReceiverTypeConstants.group && (messageReceipt === null || messageReceipt === void 0 ? void 0 : messageReceipt.getReceiver()) === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.guid)) {}\n  };\n  var handleMessageDelete = function handleMessageDelete(message) {\n    if (chatWithType === _2.ReceiverTypeConstants.group && message.getReceiverType() === _2.ReceiverTypeConstants.group && message.getReceiverId() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.guid)) {\n      removeMessage(message);\n    } else if (chatWith === _2.ReceiverTypeConstants.user && message.getReceiverType() === _2.ReceiverTypeConstants.user && message.getSender().uid === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.uid)) {\n      removeMessage(message);\n    }\n  };\n  var handleMessageEdit = function handleMessageEdit(message) {\n    if (chatWithType === _2.ReceiverTypeConstants.group && message.getReceiverType() === _2.ReceiverTypeConstants.group && message.getReceiverId() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.guid)) {\n      updateMessage(message);\n    } else if (chatWithType === _2.ReceiverTypeConstants.user && message.getReceiverType() === _2.ReceiverTypeConstants.user && loggedInUserRef.current.uid === message.getReceiverId() && message.getSender().uid === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.uid)) {\n      updateMessage(message);\n    } else if (chatWithType === _2.ReceiverTypeConstants.user && message.getReceiverType() === _2.ReceiverTypeConstants.user && loggedInUserRef.current.uid === message.getSender().uid && message.getReceiverId() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.uid)) {\n      updateMessage(message);\n    }\n  };\n  var handleNewGroupActionMessage = function handleNewGroupActionMessage(message) {\n    if (chatWithType === _2.ReceiverTypeConstants.group && message.getReceiverType() === _2.ReceiverTypeConstants.group && message.getReceiverId() === (chatWith === null || chatWith === void 0 ? void 0 : chatWith.guid)) {\n      playNotificationSound(message);\n      addMessage(message);\n      // scrollToBottom();\n      markMessageAsRead(message);\n      _.CometChatMessageEvents.emit(_.CometChatMessageEvents.onMessageRead, message);\n    }\n  };\n\n  /**\n   * update message list\n   */\n  var prependMessages = function prependMessages(messages) {\n    var messagelist = [].concat((0, _toConsumableArray2[\"default\"])(messages), (0, _toConsumableArray2[\"default\"])(messageList));\n    setMessageList(messagelist);\n    setMessageCount(messagelist.length);\n  };\n  var messageHandler = function messageHandler(messagelist, scroll, val) {\n    messagelist.forEach(function (message) {\n      var _message$getSender, _loggedInUserRef$curr5;\n      //if the sender of the message is not the loggedin user, mark the message as read.\n      if ((message === null || message === void 0 ? void 0 : (_message$getSender = message.getSender()) === null || _message$getSender === void 0 ? void 0 : _message$getSender.getUid()) !== ((_loggedInUserRef$curr5 = loggedInUserRef.current) === null || _loggedInUserRef$curr5 === void 0 ? void 0 : _loggedInUserRef$curr5.uid) && !(message !== null && message !== void 0 && message.readAt)) {\n        if (message.getReceiverType() === _2.ReceiverTypeConstants.user) {\n          markMessageAsRead(message);\n          _.CometChatMessageEvents.emit(_.CometChatMessageEvents.onMessageRead, message);\n        } else if (message.getReceiverType() === _2.ReceiverTypeConstants.group) {\n          markMessageAsRead(message);\n          _.CometChatMessageEvents.emit(_.CometChatMessageEvents.onMessageRead, message);\n        }\n      }\n    });\n    if (scroll) {\n      var lastScrollPoint = val || 0;\n      scrollToBottom(lastScrollPoint);\n    }\n  };\n  var scrollToBottom = function scrollToBottom() {\n    var scrollHeight = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    setTimeout(function () {\n      if (messageListEndRef) {\n        messageListEndRef.current.scrollTop = messageListEndRef.current.scrollHeight - scrollHeight;\n      }\n    });\n  };\n  var handleScroll = function handleScroll(event) {\n    var scrollTop = event.currentTarget.scrollTop;\n    var scrollHeight = event.currentTarget.scrollHeight;\n    lastScrollTop = scrollHeight - scrollTop;\n    var top = Math.round(scrollTop) === 0;\n    if (top && messageList.length) {\n      (0, _hooks.fetchMessages)(messageListManagerRef === null || messageListManagerRef === void 0 ? void 0 : messageListManagerRef.current).then(function (messagelist) {\n        prependMessages(messagelist);\n        messageHandler(messagelist, true, lastScrollTop);\n      })[\"catch\"](function (error) {\n        errorHandler(error);\n        setDecoratorMessage((0, _2.localize)(\"SOMETHING_WRONG\"));\n      });\n    }\n  };\n\n  /**\n   * Update message as delivered; show double grey tick\n   */\n  var updateMessageAsDelivered = function updateMessageAsDelivered(message) {\n    var messagelist = (0, _toConsumableArray2[\"default\"])(messageList);\n    var messageKey = messagelist.findIndex(function (m) {\n      return m.id === message.messageId;\n    });\n    if (messageKey > -1) {\n      var messageObject = _objectSpread({}, messageList[messageKey]);\n      messageObject.deliveredAt = message.getDeliveredAt();\n      messagelist === null || messagelist === void 0 ? void 0 : messagelist.splice(messageKey, 1, messageObject);\n      setMessageList(messagelist);\n    }\n  };\n\n  /**\n   * Upon scrolling to bottom, reload the chat if messages cross the maximum count,\n   * or else render and update (mark them as read) the stored messages\n   */\n  var scrolledToBottom = function scrolledToBottom() {\n    if (unreadMessageCount <= 0) {\n      return false;\n    }\n    var totalMessageCount = messageList.length + unreadMessageCount;\n    var message = messageList[messageList.length - 1];\n    if (totalMessageCount > _.messageConstants.maximumNumOfMessages) {\n      reInitializeMessageBuilder();\n    } else {\n      setUnreadMessageCount(0);\n      scrollToBottom();\n      markMessageAsRead(message);\n      _.CometChatMessageEvents.emit(_.CometChatMessageEvents.onMessageRead, message);\n    }\n  };\n\n  /**\n   * upon scrolling to the bottom, update the unread messagess\n   */\n\n  /**\n   * reset message list\n   */\n  var resetChatWindow = function resetChatWindow() {\n    setMessageList([]);\n    setUnreadMessageCount(0);\n    setMessageCount(0);\n    setnewMessage({});\n  };\n  var handlers = {\n    onTextMessageReceived: handleNewMessages,\n    onMediaMessageReceived: handleNewMessages,\n    onCustomMessageReceived: handleNewCustomMessages,\n    onMessagesDelivered: handleMessageDeliveryAndReadReceipt,\n    onMessagesRead: handleMessageDeliveryAndReadReceipt,\n    onMessageDeleted: handleMessageDelete,\n    onMessageEdited: handleMessageEdit,\n    onGroupMemberScopeChanged: handleNewGroupActionMessage,\n    onGroupMemberKicked: handleNewGroupActionMessage,\n    onGroupMemberBanned: handleNewGroupActionMessage,\n    onGroupMemberUnbanned: handleNewGroupActionMessage,\n    onMemberAddedToGroup: handleNewGroupActionMessage,\n    onGroupMemberLeft: handleNewGroupActionMessage,\n    onGroupMemberJoined: handleNewGroupActionMessage\n  };\n  (0, _hooks.Hooks)(limit, user, group, excludeMessageTypes, onlyUnread, hideDeletedMessages, hideMessagesFromBlockedUsers, tags, messageTypes, loggedInUserRef, messageList, setMessageList, setDecoratorMessage, setChatWith, setChatWithType, messageHandler, messageListCallback, handlers, callbackData, messageTypesRef, messageCategoryRef, messageListManagerRef, _2.localize, errorHandler, chatWith, chatWithType, setMessageCount, setnewMessage);\n\n  /**\n   *\n   * @param {*} message\n   * returns translated text and push it into metadata of message Object\n   */\n  var translateMessage = function translateMessage(message) {\n    var messageId = message.id;\n    var messageText = message.text;\n    var translateToLanguage = _2.CometChatLocalize.getLocale();\n    var translateMessage = \"\";\n    _chat.CometChat.callExtension(_2.ExtensionConstants.messageTranslation, \"POST\", _2.ExtensionURLs.translate, {\n      msgId: messageId,\n      text: messageText,\n      languages: [translateToLanguage]\n    }).then(function (result) {\n      if (result !== null && result !== void 0 && result.hasOwnProperty(\"translations\") && result.translations.length) {\n        var messageTranslation = result.translations[0];\n        translateMessage = \"\".concat(messageTranslation[\"message_translated\"]);\n        if (message.hasOwnProperty(\"metadata\")) {\n          Object.assign(message.metadata, {\n            translatedText: translateMessage\n          });\n        } else {\n          Object.assign(message, {\n            metadata: {\n              translatedText: translateMessage\n            }\n          });\n        }\n        updateMessage(message);\n      }\n    })[\"catch\"](function (error) {\n      errorHandler(error);\n    });\n  };\n\n  /**\n   *\n   * @param {*} message\n   * emits edit Message event\n   */\n  var editMessage = function editMessage(message) {\n    _.CometChatMessageEvents.emit(_.CometChatMessageEvents.onMessageEdit, {\n      message: message,\n      status: _CometChatMessageConstants.messageStatus.inprogress\n    });\n  };\n\n  /**\n   *\n   * @param {*} message\n   * copies message text to the clipboard\n   */\n  var copyMessage = function copyMessage(message) {\n    navigator.clipboard.writeText(message.text);\n  };\n\n  /**\n   *\n   * @param {*} message\n   * Deletes the selected message\n   */\n  var deleteMessage = function deleteMessage(message) {\n    _chat.CometChat.deleteMessage(message.id).then(function (deletedMessage) {\n      removeMessage(deletedMessage);\n    })[\"catch\"](function (error) {\n      errorHandler(error);\n    });\n  };\n\n  /**\n   *\n   * @param {*} message\n   * @param {*} event\n   * set visibility of Emoji Tray to true\n   */\n  var onReactToMessages = function onReactToMessages(message, event, emoji) {\n    // To remove reaction by clicking on the reacted emoji\n    if (emoji) {\n      reactToMessages(message, emoji);\n    }\n    // Open EmojiTray When clicked on Reaction messageOption or Add Reaction button\n    else {\n      setMessageToReact(message);\n      setViewEmojiTray(function (old) {\n        return {\n          emojiTrayPreview: !old.emojiTrayPreview,\n          event: event\n        };\n      });\n    }\n  };\n\n  /**\n   *\n   * @param {*} emojiObject\n   * triggers reactToMessages function after closing the emojiKeyboard\n   */\n  var onReactionSelected = function onReactionSelected(emojiObject) {\n    setViewEmojiTray(function (old) {\n      return {\n        emojiTrayPreview: !old.emojiTrayPreview\n      };\n    });\n    reactToMessages(messageToReact, emojiObject);\n  };\n\n  /**\n   *\n   * @returns EmojiKeyboard inside tooltip\n   */\n  var emojiBoard = function emojiBoard() {\n    if (viewEmojiTray.emojiTrayPreview) {\n      var _viewEmojiTray$event, _viewEmojiTray$event2;\n      return /*#__PURE__*/_react[\"default\"].createElement(_2.CometChatPopover, {\n        position: \"top\",\n        x: viewEmojiTray === null || viewEmojiTray === void 0 ? void 0 : (_viewEmojiTray$event = viewEmojiTray.event) === null || _viewEmojiTray$event === void 0 ? void 0 : _viewEmojiTray$event.clientX,\n        y: viewEmojiTray === null || viewEmojiTray === void 0 ? void 0 : (_viewEmojiTray$event2 = viewEmojiTray.event) === null || _viewEmojiTray$event2 === void 0 ? void 0 : _viewEmojiTray$event2.clientY,\n        style: (0, _style.emojiBoardToolTipStyle)(_theme)\n      }, /*#__PURE__*/_react[\"default\"].createElement(_2.CometChatEmojiKeyboard, {\n        style: (0, _style.emojiKeyBoardStyle)(_theme),\n        hideSearch: _emojiKeyboardConfiguration.hideSearch,\n        theme: _theme,\n        onClick: onReactionSelected.bind(_this) || _emojiKeyboardConfiguration.onClick\n      }));\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   *\n   * @param {*} message\n   * @param {*} emoji\n   * Calls extension reaction to Messages\n   */\n  var reactToMessages = function reactToMessages(message, emoji) {\n    var _loggedInUserRef$curr6, _loggedInUserRef$curr7, _loggedInUserRef$curr8, _loggedInUserRef$curr9;\n    var reactionObject = {};\n    var newMessageObject = {};\n    var messageObject = _objectSpread({}, message);\n    var userObject = {};\n    if (loggedInUserRef !== null && loggedInUserRef !== void 0 && (_loggedInUserRef$curr6 = loggedInUserRef.current) !== null && _loggedInUserRef$curr6 !== void 0 && (_loggedInUserRef$curr7 = _loggedInUserRef$curr6.avatar) !== null && _loggedInUserRef$curr7 !== void 0 && _loggedInUserRef$curr7.length) {\n      userObject[\"avatar\"] = loggedInUserRef.current.avatar;\n    }\n    if (loggedInUserRef !== null && loggedInUserRef !== void 0 && (_loggedInUserRef$curr8 = loggedInUserRef.current) !== null && _loggedInUserRef$curr8 !== void 0 && (_loggedInUserRef$curr9 = _loggedInUserRef$curr8.name) !== null && _loggedInUserRef$curr9 !== void 0 && _loggedInUserRef$curr9.length) {\n      userObject[\"name\"] = loggedInUserRef.current.name;\n    }\n    var emojiObject = (0, _defineProperty2[\"default\"])({}, emoji, (0, _defineProperty2[\"default\"])({}, loggedInUserRef.current.uid, userObject));\n    var reactionExtensionsData = (0, _2.getExtensionsData)(messageObject, _2.ExtensionConstants.reactions);\n    if (reactionExtensionsData) {\n      if (reactionExtensionsData[emoji]) {\n        //if the reactions metadata has the selected emoji/reaction for the loggedin user\n        if (reactionExtensionsData[emoji][loggedInUserRef.current.uid]) {\n          reactionObject = _objectSpread({}, messageObject[\"metadata\"][\"@injected\"][\"extensions\"][\"reactions\"]);\n          delete reactionObject[emoji][loggedInUserRef.current.uid];\n        } else {\n          reactionObject = _objectSpread(_objectSpread({}, messageObject[\"metadata\"][\"@injected\"][\"extensions\"][\"reactions\"]), {}, (0, _defineProperty2[\"default\"])({}, emoji, _objectSpread(_objectSpread({}, messageObject[\"metadata\"][\"@injected\"][\"extensions\"][\"reactions\"][emoji]), {}, (0, _defineProperty2[\"default\"])({}, loggedInUserRef.current.uid, userObject))));\n        }\n      } else {\n        reactionObject = _objectSpread(_objectSpread({}, messageObject[\"metadata\"][\"@injected\"][\"extensions\"][\"reactions\"]), emojiObject);\n      }\n    } else {\n      if (!messageObject.hasOwnProperty(\"metadata\")) {\n        messageObject[\"metadata\"] = {};\n      }\n      if (!messageObject[\"metadata\"].hasOwnProperty(\"@injected\")) {\n        messageObject[\"metadata\"][\"@injected\"] = {};\n      }\n      if (!messageObject[\"metadata\"][\"@injected\"].hasOwnProperty(\"extensions\")) {\n        messageObject[\"metadata\"][\"@injected\"][\"extensions\"] = {};\n      }\n      if (!messageObject[\"metadata\"][\"@injected\"][\"extensions\"].hasOwnProperty(\"reactions\")) {\n        messageObject[\"metadata\"][\"@injected\"][\"extensions\"][\"reactions\"] = {};\n      }\n      reactionObject = _objectSpread({}, emojiObject);\n    }\n    var metadataObject = {\n      metadata: _objectSpread(_objectSpread({}, messageObject[\"metadata\"]), {}, {\n        \"@injected\": _objectSpread(_objectSpread({}, messageObject[\"metadata\"][\"@injected\"]), {}, {\n          extensions: _objectSpread(_objectSpread({}, messageObject[\"metadata\"][\"@injected\"][\"extensions\"]), {}, {\n            reactions: _objectSpread({}, reactionObject)\n          })\n        })\n      })\n    };\n    newMessageObject = _objectSpread(_objectSpread({}, messageObject), {}, {\n      data: _objectSpread(_objectSpread({}, messageObject), metadataObject)\n    }, metadataObject);\n    updateMessage(newMessageObject);\n    _chat.CometChat.callExtension(_2.ExtensionConstants.reactions, \"POST\", _2.ExtensionURLs.reaction, {\n      msgId: message.id,\n      emoji: emoji\n    })[\"catch\"](function (error) {\n      errorHandler(error);\n      updateMessage(message);\n    });\n  };\n\n  /**\n   *\n   * @param {*} messageOptions\n   * Sets MessageOptions Onclick function\n   */\n  var setOptionsCallbackData = function setOptionsCallbackData(messageOptions) {\n    var optionsList = (0, _toConsumableArray2[\"default\"])(messageOptions);\n    optionsList.forEach(function (eachMessageOption) {\n      switch (eachMessageOption.id) {\n        case _2.MessageOptionConstants.deleteMessage:\n          if (eachMessageOption.onClick === null) {\n            eachMessageOption.onClick = deleteMessage.bind(_this);\n          }\n          break;\n        case _2.MessageOptionConstants.editMessage:\n          if (eachMessageOption.onClick === null) {\n            eachMessageOption.onClick = editMessage.bind(_this);\n          }\n          break;\n        case _2.MessageOptionConstants.copyMessage:\n          if (eachMessageOption.onClick === null) {\n            eachMessageOption.onClick = copyMessage.bind(_this);\n          }\n          break;\n        case _2.MessageOptionConstants.reactToMessage:\n          if (eachMessageOption.onClick === null) {\n            eachMessageOption.onClick = onReactToMessages.bind(_this);\n          }\n          break;\n        case _2.MessageOptionConstants.translateMessage:\n          if (eachMessageOption.onClick === null) {\n            eachMessageOption.onClick = translateMessage.bind(_this);\n          }\n          break;\n        default:\n          break;\n      }\n    });\n    return optionsList;\n  };\n\n  /**\n   *\n   * @param {*} messageObject\n   * @returns messageOptions according to the type of message and sender's identity\n   */\n  var filterMessageOptions = function filterMessageOptions(messageObject) {\n    var _messageTypes = messageTypes && messageTypes.length ? messageTypes : (0, _.getDefaultTypes)();\n    var messageOptions = [];\n    // If User sends messageTypes as\n    _messageTypes.forEach(function (messageTemplateObject) {\n      // Checking Message types for Template object and message object to set options\n      if (messageTemplateObject.type === messageObject.type) {\n        messageOptions = messageTemplateObject.options.filter(function (option) {\n          var _loggedInUserRef$curr10, _messageObject$sender, _loggedInUserRef$curr11, _messageObject$sender2;\n          return (\n            // Segregating Sender and receiver options.\n\n            ((_loggedInUserRef$curr10 = loggedInUserRef.current) === null || _loggedInUserRef$curr10 === void 0 ? void 0 : _loggedInUserRef$curr10.uid) === (messageObject === null || messageObject === void 0 ? void 0 : (_messageObject$sender = messageObject.sender) === null || _messageObject$sender === void 0 ? void 0 : _messageObject$sender.uid) && option.optionFor === _2.MessageOptionForConstants.sender || option.optionFor === _2.MessageOptionForConstants.both || ((_loggedInUserRef$curr11 = loggedInUserRef.current) === null || _loggedInUserRef$curr11 === void 0 ? void 0 : _loggedInUserRef$curr11.uid) !== (messageObject === null || messageObject === void 0 ? void 0 : (_messageObject$sender2 = messageObject.sender) === null || _messageObject$sender2 === void 0 ? void 0 : _messageObject$sender2.uid) && option.optionFor === _2.MessageOptionForConstants.receiver || option.optionFor === _2.MessageOptionForConstants.both\n          );\n        });\n      }\n    });\n\n    // If user exclude's an option from options list\n    if (excludeMessageOptions && excludeMessageOptions.length) {\n      excludeMessageOptions.forEach(function (excludeOption) {\n        messageOptions.forEach(function (option) {\n          if (option.id === excludeOption) {\n            var index = messageOptions.indexOf(option);\n            if (index > -1) {\n              messageOptions.splice(index, 1); // 2nd parameter means remove one item only\n            }\n          }\n        });\n      });\n    }\n\n    // If user sends in customMessageOptions\n    if (customMessageOptions !== null && customMessageOptions !== void 0 && customMessageOptions.length) {\n      customMessageOptions.forEach(function (option) {\n        messageOptions.push(option);\n      });\n    }\n\n    // Setting callback data for Message Option's onClick\n    return setOptionsCallbackData(messageOptions);\n  };\n\n  /**\n   *\n   * @param {*} message\n   * @returns filtering custom View from message Types sent in by the user\n   */\n  var filterCustomView = function filterCustomView(message) {\n    if (messageTypes !== null && messageTypes !== void 0 && messageTypes.length) {\n      var templateObject = messageTypes.filter(function (messageTemplateObject) {\n        return messageTemplateObject.type === message.type && messageTemplateObject.customView;\n      });\n      if (templateObject !== null && templateObject !== void 0 && templateObject.customView) {\n        return templateObject.customView;\n      }\n      return null;\n    }\n  };\n\n  /**\n   *\n   * @param {*} customView\n   * @returns customView for handling empty,error and loading states\n   */\n  var getCustomView = function getCustomView(customView) {\n    return /*#__PURE__*/_react[\"default\"].createElement(customView, props);\n  };\n  var getMessageContainer = function getMessageContainer() {\n    var _localize;\n    var messageContainer = null;\n    if (messageList.length === 0 && (decoratorMessage === null || decoratorMessage === void 0 ? void 0 : decoratorMessage.toLowerCase()) === (0, _2.localize)(\"LOADING\").toLowerCase()) {\n      messageContainer = /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        style: (0, _style.decoratorMsgStyle)(style),\n        className: \"messagelist__decorator-message\"\n      }, customView !== null && customView !== void 0 && customView.loading ? getCustomView(customView.loading, props) : /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        style: (0, _style.decoratorMsgImgStyle)(style, loadingIconURL, _theme),\n        className: \"decorator-message\"\n      }));\n    } else if (messageList.length === 0 && (decoratorMessage === null || decoratorMessage === void 0 ? void 0 : decoratorMessage.toLowerCase()) === (0, _2.localize)(\"NO_MESSAGES_FOUND\").toLowerCase()) {\n      messageContainer = /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        style: (0, _style.decoratorMsgStyle)(style),\n        className: \"messagelist__decorator-message\"\n      }, customView !== null && customView !== void 0 && customView.empty ? getCustomView(customView === null || customView === void 0 ? void 0 : customView.empty, props) : /*#__PURE__*/_react[\"default\"].createElement(\"p\", {\n        style: (0, _style.decoratorMsgTxtStyle)(style, _2.fontHelper, _theme, decoratorMessage, _2.localize),\n        className: \"decorator-message\"\n      }, emptyText));\n    } else if ((decoratorMessage === null || decoratorMessage === void 0 ? void 0 : decoratorMessage.toLowerCase()) === ((_localize = (0, _2.localize)(\"NO_MESSAGE_TYPE_SET\")) === null || _localize === void 0 ? void 0 : _localize.toLowerCase())) {\n      messageContainer = /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        style: (0, _style.decoratorMsgStyle)(style),\n        className: \"messagelist__decorator-message\"\n      }, customView !== null && customView !== void 0 && customView.empty ? getCustomView(customView === null || customView === void 0 ? void 0 : customView.empty, props) : /*#__PURE__*/_react[\"default\"].createElement(\"p\", {\n        style: (0, _style.decoratorMsgTxtStyle)(style, _2.fontHelper, _theme, decoratorMessage, _2.localize),\n        className: \"decorator-message\"\n      }, decoratorMessage));\n    } else if (!hideError && (decoratorMessage === null || decoratorMessage === void 0 ? void 0 : decoratorMessage.toLowerCase()) === (0, _2.localize)(\"SOMETHING_WRONG\").toLowerCase()) {\n      messageContainer = /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        style: (0, _style.decoratorMsgStyle)(style),\n        className: \"messagelist__decorator-message\"\n      }, customView !== null && customView !== void 0 && customView.error ? getCustomView(customView.error, props) : /*#__PURE__*/_react[\"default\"].createElement(\"p\", {\n        style: (0, _style.decoratorMsgTxtStyle)(style, _2.fontHelper, _theme, decoratorMessage, _2.localize),\n        className: \"decorator-message\"\n      }, errorText));\n    }\n    return messageContainer;\n  };\n\n  /**\n   * Empty new Message Received State to close Smart reply Preview\n   */\n  var onClose = function onClose() {\n    setnewMessage({});\n  };\n  var _smartRepliesConfiguration = smartRepliesConfiguration || new _SmartRepliesConfiguration.SmartRepliesConfiguration({\n    onClose: onClose\n  });\n  /**\n   *\n   * @returns smart suggestions to the user as per the message received\n   */\n  var getSmartReplies = function getSmartReplies() {\n    if (Object.keys(newMessage).length) {\n      return /*#__PURE__*/_react[\"default\"].createElement(_.CometChatSmartReplies, {\n        messageObject: newMessage,\n        customOutgoingMessageSound: _smartRepliesConfiguration.customOutgoingMessageSound,\n        enableSoundForMessages: _smartRepliesConfiguration.enableSoundForMessages,\n        loggedInUser: loggedInUserRef.current,\n        onClick: _smartRepliesConfiguration.onClick,\n        style: (0, _style.smartReplyStyle)(_theme),\n        onClose: onClose.bind(_this)\n      });\n    }\n  };\n\n  /**\n   *\n   * @returns new Message Indicator banner\n   */\n  var newMessageIndicator = function newMessageIndicator() {\n    if (unreadMessageCount >= 1) {\n      var text = unreadMessageCount > 1 ? \"\".concat(unreadMessageCount, \" \").concat((0, _2.localize)(\"NEW_MESSAGES\")) : \"\".concat(unreadMessageCount, \" \").concat((0, _2.localize)(\"NEW_MESSAGE\"));\n      return /*#__PURE__*/_react[\"default\"].createElement(_.CometChatNewMessageIndicator, {\n        text: text,\n        onClick: scrolledToBottom.bind(_this) || _newMessageIndicatorConfiguration.onClick,\n        Icon: _newMessageIndicatorConfiguration.Icon,\n        style: (0, _style.messageIndicatorStyle)(_theme)\n      });\n    }\n    return null;\n  };\n\n  /**\n   *\n   * @returns Items to render in Message List Component\n   */\n  var renderItems = function renderItems() {\n    // to hold date value for first message\n    var previousMessageDate = null;\n    return messageList.map(function (eachMessage) {\n      var _previousMessageDate, _previousMessageDate2, _previousMessageDate3, _dateConfiguration$st, _theme$palette, _theme$palette2, _dateConfiguration$st2, _theme$typography, _loggedInUserRef$curr12, _eachMessage$sender, _loggedInUserRef$curr13, _eachMessage$sender2;\n      // date label component\n      var dateSeparator = null;\n\n      // Converting Unix  timeStamp to readable date format\n      var currentMessageDate = new Date(eachMessage.sentAt * 1000);\n      var currentDate = currentMessageDate.getDate() + \"-\" + currentMessageDate.getMonth + \"-\" + currentMessageDate.getFullYear();\n      var previousDate = ((_previousMessageDate = previousMessageDate) === null || _previousMessageDate === void 0 ? void 0 : _previousMessageDate.getDate()) + \"-\" + ((_previousMessageDate2 = previousMessageDate) === null || _previousMessageDate2 === void 0 ? void 0 : _previousMessageDate2.getMonth) + \"-\" + ((_previousMessageDate3 = previousMessageDate) === null || _previousMessageDate3 === void 0 ? void 0 : _previousMessageDate3.getFullYear());\n      var pattern = _dateConfiguration === null || _dateConfiguration === void 0 ? void 0 : _dateConfiguration.pattern;\n      var customPattern = _dateConfiguration === null || _dateConfiguration === void 0 ? void 0 : _dateConfiguration.customPattern;\n      var dateStyle = new _Shared.DateStyles(_objectSpread(_objectSpread({}, _dateConfiguration === null || _dateConfiguration === void 0 ? void 0 : _dateConfiguration.style), {}, {\n        textColor: (_dateConfiguration === null || _dateConfiguration === void 0 ? void 0 : (_dateConfiguration$st = _dateConfiguration.style) === null || _dateConfiguration$st === void 0 ? void 0 : _dateConfiguration$st.textColor) || (_theme === null || _theme === void 0 ? void 0 : (_theme$palette = _theme.palette) === null || _theme$palette === void 0 ? void 0 : _theme$palette.accent500[_theme === null || _theme === void 0 ? void 0 : (_theme$palette2 = _theme.palette) === null || _theme$palette2 === void 0 ? void 0 : _theme$palette2.mode]),\n        textFont: (_dateConfiguration === null || _dateConfiguration === void 0 ? void 0 : (_dateConfiguration$st2 = _dateConfiguration.style) === null || _dateConfiguration$st2 === void 0 ? void 0 : _dateConfiguration$st2.textFont) || (0, _2.fontHelper)(_theme === null || _theme === void 0 ? void 0 : (_theme$typography = _theme.typography) === null || _theme$typography === void 0 ? void 0 : _theme$typography.caption2)\n      }));\n\n      // Comparing Date, Month, Year of the two dates\n      if (previousDate !== currentDate) {\n        dateSeparator = /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n          style: (0, _style.messageDateContainerStyle)(_theme)\n        }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n          style: (0, _style.messageDateStyle)(_theme)\n        }, /*#__PURE__*/_react[\"default\"].createElement(_Shared.CometChatDate, {\n          timestamp: eachMessage === null || eachMessage === void 0 ? void 0 : eachMessage.sentAt,\n          pattern: pattern,\n          customPattern: customPattern,\n          style: dateStyle\n        })));\n      }\n      previousMessageDate = currentMessageDate;\n      var messageKey = eachMessage.id || eachMessage.muid;\n      var className = \"message__\".concat(eachMessage.type, \" message__kit__background\");\n      var alignmentValue = _2.MessageBubbleAlignmentConstants.left;\n      var background;\n      var messageBubbleData = {};\n      if (alignment === (_2.MessageListAlignmentConstants === null || _2.MessageListAlignmentConstants === void 0 ? void 0 : _2.MessageListAlignmentConstants.standard) && ((_loggedInUserRef$curr12 = loggedInUserRef.current) === null || _loggedInUserRef$curr12 === void 0 ? void 0 : _loggedInUserRef$curr12.uid) === (eachMessage === null || eachMessage === void 0 ? void 0 : (_eachMessage$sender = eachMessage.sender) === null || _eachMessage$sender === void 0 ? void 0 : _eachMessage$sender.uid)) {\n        alignmentValue = _2.MessageBubbleAlignmentConstants.right;\n        background = {\n          background: _theme.palette.primary[_theme.palette.mode]\n        };\n        messageBubbleData = sentMessageInputData;\n      } else if (alignment === (_2.MessageListAlignmentConstants === null || _2.MessageListAlignmentConstants === void 0 ? void 0 : _2.MessageListAlignmentConstants.left) && ((_loggedInUserRef$curr13 = loggedInUserRef.current) === null || _loggedInUserRef$curr13 === void 0 ? void 0 : _loggedInUserRef$curr13.uid) === (eachMessage === null || eachMessage === void 0 ? void 0 : (_eachMessage$sender2 = eachMessage.sender) === null || _eachMessage$sender2 === void 0 ? void 0 : _eachMessage$sender2.uid)) {\n        alignmentValue = _2.MessageBubbleAlignmentConstants.left;\n        background = {\n          background: _theme.palette.secondary[_theme.palette.mode]\n        };\n        messageBubbleData = sentMessageInputData;\n      } else {\n        alignmentValue = _2.MessageBubbleAlignmentConstants.left;\n        background = {\n          background: _theme.palette.secondary[_theme.palette.mode]\n        };\n        messageBubbleData = receivedMessageInputData;\n      }\n      var style = _objectSpread(_objectSpread({\n        width: \"100%\",\n        height: \"100%\",\n        border: \"0 none\",\n        borderRadius: \"12px\",\n        nameTextFont: (0, _2.fontHelper)(_theme.typography.caption1),\n        timestampFont: (0, _2.fontHelper)(_theme.typography.caption2)\n      }, background), {}, {\n        nameTextColor: _theme.palette.accent500[_theme.palette.mode],\n        timestampColor: _theme.palette.accent[_theme.palette.mode]\n      });\n      return !eachMessage.action ? /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, {\n        key: messageKey\n      }, dateSeparator, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        key: messageKey,\n        className: className,\n        style: (0, _style.messageBubbleStyle)(alignment, loggedInUserRef.current, eachMessage)\n      }, /*#__PURE__*/_react[\"default\"].createElement(_.CometChatMessageBubble, {\n        key: messageKey,\n        messageBubbleData: messageBubbleData || _messageBubbleConfiguration.messageBubbleData,\n        alignment: alignmentValue,\n        timeAlignment: _messageBubbleConfiguration.timeAlignment,\n        messageObject: eachMessage,\n        messageOptions: filterMessageOptions(eachMessage),\n        loggedInUser: loggedInUserRef.current,\n        customView: filterCustomView(eachMessage),\n        style: _objectSpread({}, style),\n        theme: _theme,\n        updateReaction: onReactToMessages.bind(_this)\n      }))) : null;\n    });\n  };\n  return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"message__list\",\n    style: (0, _style.chatListStyle)(style, _theme)\n  }, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    className: \"list__wrapper\",\n    style: (0, _style.listWrapperStyle)(style, _theme),\n    ref: messageListEndRef,\n    onScroll: handleScroll\n  }, getMessageContainer(), newMessageIndicator(), emojiBoard(), renderItems()), getSmartReplies());\n});\nexports.CometChatMessageList = CometChatMessageList;\nCometChatMessageList.defaultProps = {\n  limit: 30,\n  user: null,\n  group: null,\n  alignment: \"standard\",\n  messageTypes: null,\n  excludeMessageTypes: null,\n  excludeMessageOptions: null,\n  customMessageOptions: null,\n  onlyUnread: false,\n  hideMessagesFromBlockedUsers: false,\n  hideDeletedMessages: false,\n  tags: null,\n  loadingIconURL: _spinner[\"default\"],\n  customView: {\n    loading: \"\",\n    empty: \"\",\n    error: \"\"\n  },\n  emptyText: \"No messages here yet...\",\n  errorText: \"Something went wrong\",\n  hideError: false,\n  customIncomingMessageSound: \"\",\n  enableSoundForMessages: true,\n  sentMessageInputData: {\n    thumbnail: true,\n    title: true,\n    timestamp: true,\n    readReceipt: true\n  },\n  receivedMessageInputData: {\n    thumbnail: true,\n    title: true,\n    timestamp: true,\n    readReceipt: false\n  },\n  style: {\n    width: \"100%\",\n    height: \"100%\",\n    border: \"\",\n    borderRadius: \"8px\",\n    background: \"\",\n    textFont: \"400 12px Inter, sans-serif\",\n    textColor: \"rgb(20,20,20)\"\n  },\n  messageBubbleConfiguration: null,\n  emojiKeyboardConfiguration: null,\n  smartRepliesConfiguration: null,\n  newMessageIndicatorConfiguration: null,\n  dateConfiguration: null\n};\nCometChatMessageList.propTypes = {\n  limit: _propTypes[\"default\"].number,\n  user: _propTypes[\"default\"].object,\n  group: _propTypes[\"default\"].object,\n  alignment: _propTypes[\"default\"].string,\n  messageTypes: _propTypes[\"default\"].array,\n  excludeMessageTypes: _propTypes[\"default\"].array,\n  excludeMessageOptions: _propTypes[\"default\"].array,\n  customMessageOptions: _propTypes[\"default\"].array,\n  onlyUnread: _propTypes[\"default\"].bool,\n  hideMessagesFromBlockedUsers: _propTypes[\"default\"].bool,\n  hideDeletedMessages: _propTypes[\"default\"].bool,\n  tags: _propTypes[\"default\"].array,\n  loadingIconURL: _propTypes[\"default\"].string,\n  customView: _propTypes[\"default\"].object,\n  emptyText: _propTypes[\"default\"].string,\n  errorText: _propTypes[\"default\"].string,\n  hideError: _propTypes[\"default\"].bool,\n  customIncomingMessageSound: _propTypes[\"default\"].string,\n  enableSoundForMessages: _propTypes[\"default\"].bool,\n  sentMessageInputData: _propTypes[\"default\"].object,\n  receivedMessageInputData: _propTypes[\"default\"].object,\n  style: _propTypes[\"default\"].object,\n  messageBubbleConfiguration: _propTypes[\"default\"].object,\n  emojiKeyboardConfiguration: _propTypes[\"default\"].object,\n  smartRepliesConfiguration: _propTypes[\"default\"].object,\n  newMessageIndicatorConfiguration: _propTypes[\"default\"].object,\n  dateConfiguration: _propTypes[\"default\"].object\n};"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}