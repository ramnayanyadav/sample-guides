{"ast":null,"code":"import { CometChat } from \"@cometchat-pro/chat\";\nexport class UserListManager {\n  constructor(limit, searchKeyword, hideBlockedUsers, roles, friendsOnly, status, uids, tags) {\n    this.usersRequest = null;\n    this.userListenerId = \"userlist_\" + new Date().getTime();\n    this.fetchNextUsers = () => {\n      return this.usersRequest.fetchNext();\n    };\n    this.attachListeners = callback => {\n      CometChat.addUserListener(this.userListenerId, new CometChat.UserListener({\n        onUserOnline: onlineUser => {\n          /* when someuser/friend comes online, user will be received here */\n          callback(onlineUser);\n        },\n        onUserOffline: offlineUser => {\n          /* when someuser/friend went offline, user will be received here */\n          callback(offlineUser);\n        }\n      }));\n    };\n    if (searchKeyword.trim().length) {\n      this.usersRequest = new CometChat.UsersRequestBuilder().setLimit(limit).hideBlockedUsers(hideBlockedUsers).setRoles(roles).friendsOnly(friendsOnly).setSearchKeyword(searchKeyword).setStatus(status).setTags(tags).setUIDs(uids).build();\n    } else {\n      this.usersRequest = new CometChat.UsersRequestBuilder().setLimit(limit).hideBlockedUsers(hideBlockedUsers).setRoles(roles).friendsOnly(friendsOnly).setStatus(status).setTags(tags).setUIDs(uids).build();\n    }\n  }\n  removeListeners() {\n    CometChat.removeUserListener(this.userListenerId);\n  }\n}","map":{"version":3,"names":["CometChat","UserListManager","constructor","limit","searchKeyword","hideBlockedUsers","roles","friendsOnly","status","uids","tags","usersRequest","userListenerId","Date","getTime","fetchNextUsers","fetchNext","attachListeners","callback","addUserListener","UserListener","onUserOnline","onlineUser","onUserOffline","offlineUser","trim","length","UsersRequestBuilder","setLimit","setRoles","setSearchKeyword","setStatus","setTags","setUIDs","build","removeListeners","removeUserListener"],"sources":["/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/cometchat-pro-react-ui-kit/src/components/Users/CometChatUserList/controller.js"],"sourcesContent":["import { CometChat } from \"@cometchat-pro/chat\";\n\nexport class UserListManager {\n\tusersRequest = null;\n\tuserListenerId = \"userlist_\" + new Date().getTime();\n\n\tconstructor(\n\t\tlimit,\n\t\tsearchKeyword,\n\t\thideBlockedUsers,\n\t\troles,\n\t\tfriendsOnly,\n\t\tstatus,\n\t\tuids,\n\t\ttags\n\t) {\n\t\tif (searchKeyword.trim().length) {\n\t\t\tthis.usersRequest = new CometChat.UsersRequestBuilder()\n\t\t\t\t.setLimit(limit)\n\t\t\t\t.hideBlockedUsers(hideBlockedUsers)\n\t\t\t\t.setRoles(roles)\n\t\t\t\t.friendsOnly(friendsOnly)\n\t\t\t\t.setSearchKeyword(searchKeyword)\n\t\t\t\t.setStatus(status)\n\t\t\t\t.setTags(tags)\n\t\t\t\t.setUIDs(uids)\n\t\t\t\t.build();\n\t\t} else {\n\t\t\tthis.usersRequest = new CometChat.UsersRequestBuilder()\n\t\t\t\t.setLimit(limit)\n\t\t\t\t.hideBlockedUsers(hideBlockedUsers)\n\t\t\t\t.setRoles(roles)\n\t\t\t\t.friendsOnly(friendsOnly)\n\t\t\t\t.setStatus(status)\n\t\t\t\t.setTags(tags)\n\t\t\t\t.setUIDs(uids)\n\t\t\t\t.build();\n\t\t}\n\t}\n\n\tfetchNextUsers = () => {\n\t\treturn this.usersRequest.fetchNext();\n\t};\n\n\tattachListeners = (callback) => {\n\t\tCometChat.addUserListener(\n\t\t\tthis.userListenerId,\n\t\t\tnew CometChat.UserListener({\n\t\t\t\tonUserOnline: (onlineUser) => {\n\t\t\t\t\t/* when someuser/friend comes online, user will be received here */\n\t\t\t\t\tcallback(onlineUser);\n\t\t\t\t},\n\t\t\t\tonUserOffline: (offlineUser) => {\n\t\t\t\t\t/* when someuser/friend went offline, user will be received here */\n\t\t\t\t\tcallback(offlineUser);\n\t\t\t\t},\n\t\t\t})\n\t\t);\n\t};\n\n\tremoveListeners() {\n\t\tCometChat.removeUserListener(this.userListenerId);\n\t}\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,qBAAqB;AAE/C,OAAO,MAAMC,eAAe,CAAC;EAI5BC,WAAW,CACVC,KAAK,EACLC,aAAa,EACbC,gBAAgB,EAChBC,KAAK,EACLC,WAAW,EACXC,MAAM,EACNC,IAAI,EACJC,IAAI,EACH;IAAA,KAZFC,YAAY,GAAG,IAAI;IAAA,KACnBC,cAAc,GAAG,WAAW,GAAG,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE;IAAA,KAoCnDC,cAAc,GAAG,MAAM;MACtB,OAAO,IAAI,CAACJ,YAAY,CAACK,SAAS,EAAE;IACrC,CAAC;IAAA,KAEDC,eAAe,GAAIC,QAAQ,IAAK;MAC/BlB,SAAS,CAACmB,eAAe,CACxB,IAAI,CAACP,cAAc,EACnB,IAAIZ,SAAS,CAACoB,YAAY,CAAC;QAC1BC,YAAY,EAAGC,UAAU,IAAK;UAC7B;UACAJ,QAAQ,CAACI,UAAU,CAAC;QACrB,CAAC;QACDC,aAAa,EAAGC,WAAW,IAAK;UAC/B;UACAN,QAAQ,CAACM,WAAW,CAAC;QACtB;MACD,CAAC,CAAC,CACF;IACF,CAAC;IA1CA,IAAIpB,aAAa,CAACqB,IAAI,EAAE,CAACC,MAAM,EAAE;MAChC,IAAI,CAACf,YAAY,GAAG,IAAIX,SAAS,CAAC2B,mBAAmB,EAAE,CACrDC,QAAQ,CAACzB,KAAK,CAAC,CACfE,gBAAgB,CAACA,gBAAgB,CAAC,CAClCwB,QAAQ,CAACvB,KAAK,CAAC,CACfC,WAAW,CAACA,WAAW,CAAC,CACxBuB,gBAAgB,CAAC1B,aAAa,CAAC,CAC/B2B,SAAS,CAACvB,MAAM,CAAC,CACjBwB,OAAO,CAACtB,IAAI,CAAC,CACbuB,OAAO,CAACxB,IAAI,CAAC,CACbyB,KAAK,EAAE;IACV,CAAC,MAAM;MACN,IAAI,CAACvB,YAAY,GAAG,IAAIX,SAAS,CAAC2B,mBAAmB,EAAE,CACrDC,QAAQ,CAACzB,KAAK,CAAC,CACfE,gBAAgB,CAACA,gBAAgB,CAAC,CAClCwB,QAAQ,CAACvB,KAAK,CAAC,CACfC,WAAW,CAACA,WAAW,CAAC,CACxBwB,SAAS,CAACvB,MAAM,CAAC,CACjBwB,OAAO,CAACtB,IAAI,CAAC,CACbuB,OAAO,CAACxB,IAAI,CAAC,CACbyB,KAAK,EAAE;IACV;EACD;EAsBAC,eAAe,GAAG;IACjBnC,SAAS,CAACoC,kBAAkB,CAAC,IAAI,CAACxB,cAAc,CAAC;EAClD;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}