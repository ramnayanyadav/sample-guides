{"ast":null,"code":"var _jsxFileName = \"/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/cometchat-pro-react-ui-kit/src/components/Groups/CometChatCreateGroup/index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { CreateGroupStyles } from \"./CreateGroupStyles\";\nimport PropTypes from \"prop-types\";\nimport { CometChatTheme, GroupTypeConstants, CometChatListItem } from \"../../Shared\";\nimport { GroupsConstants } from \"../../Shared/Constants/UIKitConstants\";\nimport { localize } from \"../../Shared\";\nimport { createGroupWrapperStyle, createGroupHeader, createGroupTitleStyle, closeIconStyle, createGroupBodyStyle, createGroupTabContainerStyle, createGroupTabListStyle, createGroupTabStyle, createGroupInput, createGroupInputName, createGroupInputPassword, nameInputStyle, passwordInputStyle, errorTextStyle, errorIconStyle, errorContainerStyle, createGroupButton, createButtonStyle } from \"./style\";\nimport { CometChatGroupEvents } from \"../CometChatGroupEvents\";\nimport warningIcon from \"./resources/warning.svg\";\nimport closeIconURL from \"./resources/close.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CometChatCreateGroup = props => {\n  _s();\n  /**\n   * Destructuring Props\n   */\n  const {\n    title,\n    namePlaceholderText,\n    passwordPlaceholderText,\n    hideCloseButton,\n    closeButtonIconURL,\n    createGroupButtonText,\n    onClose,\n    onCreateGroup,\n    style,\n    theme\n  } = props;\n\n  /**\n   * Setting Theme\n   */\n  const _theme = new CometChatTheme(theme || {});\n\n  /**\n   * Internal States and properties\n   */\n  const groupTypes = {\n    public: GroupTypeConstants.public,\n    private: GroupTypeConstants.private,\n    password: GroupTypeConstants.password\n  };\n  const [activeTab, setActiveTab] = React.useState(groupTypes.public);\n  const [showPasswordInput, setShowPasswordInput] = React.useState(false);\n  const [error, setError] = React.useState(null);\n  const [groupNameInput, setGroupNameInput] = React.useState(null);\n  const [passwordInput, setPasswordInput] = React.useState(null);\n\n  /**\n   * Reset Create Group form\n   */\n  const resetGroupData = () => {\n    setError(null);\n    setShowPasswordInput(false);\n    setGroupNameInput(null);\n    setPasswordInput(null);\n    setActiveTab(null);\n  };\n\n  /**\n   *\n   * @param {*} errorCode Emits an error event to handle the error occured\n   */\n  const errorHandler = errorCode => {\n    CometChatGroupEvents.emit(CometChatGroupEvents.onGroupError, errorCode);\n  };\n\n  /**\n   *\n   * @param {*} e\n   * set Group Name value\n   */\n  const handleGroupNameChange = e => {\n    setGroupNameInput(e.target.value);\n  };\n\n  /**\n   *\n   * @param {*} e\n   * set Group Password value\n   */\n  const handlePasswordChange = e => {\n    setPasswordInput(e.target.value);\n  };\n\n  /**\n   * When Tab is selected\n   */\n  const onActiveTab = type => {\n    resetGroupData();\n    setActiveTab(type);\n    setShowPasswordInput(type === groupTypes.password ? true : false);\n  };\n\n  /**\n   * Validates all the group details that were entered before creating the group\n   * @param\n   */\n  const validate = () => {\n    if (!groupNameInput) {\n      setError(localize(\"GROUP_NAME_BLANK\"));\n      return false;\n    }\n    if (!activeTab) {\n      setError(localize(\"GROUP_TYPE_BLANK\"));\n      return false;\n    }\n    if (activeTab === groupTypes.password) {\n      if (!passwordInput) {\n        setError(localize(\"GROUP_PASSWORD_BLANK\"));\n        return false;\n      }\n    }\n    return true;\n  };\n\n  /**\n   * Close create group screen\n   */\n  const closeCreateGroupView = () => {\n    if (onClose) {\n      resetGroupData();\n      onClose();\n    }\n  };\n\n  /**\n   *\n   * @returns new group created by user\n   */\n  const createGroup = () => {\n    if (!validate()) {\n      return false;\n    }\n    if (onCreateGroup) {\n      onCreateGroup();\n      return false;\n    }\n    let groupType = activeTab.trim();\n    let password = passwordInput;\n    let guid = GroupsConstants.GROUP_ + new Date().getTime();\n    let name = groupNameInput;\n    let type;\n    switch (groupType) {\n      case groupTypes.public:\n        type = groupTypes.public;\n        break;\n      case groupTypes.private:\n        type = groupTypes.private;\n        break;\n      case groupTypes.password:\n        type = groupTypes.password;\n        break;\n      default:\n        break;\n    }\n    let group = new CometChat.Group(guid, name, type, password);\n    CometChat.createGroup(group).then(group => {\n      closeCreateGroupView();\n      resetGroupData();\n      CometChatGroupEvents.emit(CometChatGroupEvents.onGroupCreate, group);\n    }).catch(error => {\n      errorHandler(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"creategroup__wrapper\",\n    style: createGroupWrapperStyle(style, _theme),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"creategroup__header\",\n      style: createGroupHeader(),\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"creategroup__title\",\n        style: createGroupTitleStyle(style, _theme),\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), !hideCloseButton ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"creategroup__close\",\n        style: closeIconStyle(style, closeButtonIconURL, _theme),\n        onClick: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"creategroup__body\",\n      style: createGroupBodyStyle(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"creategroup__tabcontainer\",\n        style: createGroupTabContainerStyle(style),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"creategroup__tablist\",\n          style: createGroupTabListStyle(style, _theme),\n          children: Object.keys(groupTypes).map(tab => {\n            return /*#__PURE__*/_jsxDEV(CometChatListItem, {\n              className: \"creategroup__tab\",\n              style: createGroupTabStyle(style, _theme, activeTab, tab),\n              text: tab,\n              onItemClick: onActiveTab.bind(this, tab)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"creategroup__input\",\n        style: createGroupInput(style),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"creategroup__input--name\",\n          style: createGroupInputName(),\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleGroupNameChange,\n            value: groupNameInput,\n            type: \"text\",\n            placeholder: namePlaceholderText,\n            style: nameInputStyle(style, _theme)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), showPasswordInput ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"creategroup__input--password\",\n          style: createGroupInputPassword(),\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handlePasswordChange,\n            value: passwordInput,\n            type: \"password\",\n            placeholder: passwordPlaceholderText,\n            style: passwordInputStyle(style, _theme)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"decorator__message--error\",\n          style: errorContainerStyle(style, _theme),\n          children: [/*#__PURE__*/_jsxDEV(CometChatListItem, {\n            iconURL: warningIcon,\n            style: errorIconStyle(_theme)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: errorTextStyle(style, _theme),\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"creategroup__button--create\",\n        style: createGroupButton(style),\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createGroup.bind(this),\n          style: createButtonStyle(style, _theme),\n          children: createGroupButtonText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n};\n_s(CometChatCreateGroup, \"OpdiEE5YatazVn5KWz1vTeX0Aug=\");\n_c = CometChatCreateGroup;\nCometChatCreateGroup.defaultProps = {\n  title: localize(\"NEW__GROUP\"),\n  namePlaceholderText: localize(\"ENTER_GROUP_NAME\"),\n  passwordPlaceholderText: localize(\"ENTER_GROUP_PASSWORD\"),\n  hideCloseButton: false,\n  closeButtonIconURL: closeIconURL,\n  createGroupButtonText: localize(\"CREATE_GROUP\"),\n  onClose: \"\",\n  onCreateGroup: \"\",\n  style: {\n    width: \"100%\",\n    height: \"100%\",\n    background: \"rgb(255,255,255)\",\n    border: \"none\",\n    borderRadius: \"12px\",\n    boxShadow: \"\",\n    closeIconTint: \"#39f\",\n    titleTextFont: \"\",\n    titleTextColor: \"\",\n    errorTextFont: \"\",\n    errorTextBackground: \"\",\n    errorTextBorderRadius: \"\",\n    errorTextBorder: \"\",\n    errorTextColor: \"\",\n    groupTypeTextFont: \"\",\n    groupTypeTextColor: \"\",\n    groupTypeTextBackground: \"\",\n    groupTypeTextActiveBackground: \"\",\n    namePlaceholderTextFont: \"\",\n    namePlaceholderTextColor: \"\",\n    nameInputBackground: \"\",\n    nameInputBorder: \"\",\n    nameInputBorderRadius: \"\",\n    nameInputBoxShadow: \"\",\n    passwordPlaceholderTextFont: \"\",\n    passwordPlaceholderTextColor: \"\",\n    passwordInputBackground: \"\",\n    passwordInputBorder: \"\",\n    passwordInputBorderRadius: \"\",\n    passwordInputBoxShadow: \"\",\n    createGroupButtonTextFont: \"\",\n    createGroupButtonTextColor: \"\",\n    createGroupButtonBackground: \"\",\n    createGroupButtonBorderRadius: \"\"\n  }\n};\nCometChatCreateGroup.propTypes = {\n  title: PropTypes.string,\n  namePlaceholderText: PropTypes.string,\n  passwordPlaceholderText: PropTypes.string,\n  hideCloseButton: PropTypes.bool,\n  closeButtonIconURL: PropTypes.string,\n  createGroupButtonText: PropTypes.string,\n  onClose: PropTypes.func,\n  onCreateGroup: PropTypes.func,\n  style: PropTypes.object\n};\nexport { CometChatCreateGroup };\nvar _c;\n$RefreshReg$(_c, \"CometChatCreateGroup\");","map":{"version":3,"names":["React","CometChat","CreateGroupStyles","PropTypes","CometChatTheme","GroupTypeConstants","CometChatListItem","GroupsConstants","localize","createGroupWrapperStyle","createGroupHeader","createGroupTitleStyle","closeIconStyle","createGroupBodyStyle","createGroupTabContainerStyle","createGroupTabListStyle","createGroupTabStyle","createGroupInput","createGroupInputName","createGroupInputPassword","nameInputStyle","passwordInputStyle","errorTextStyle","errorIconStyle","errorContainerStyle","createGroupButton","createButtonStyle","CometChatGroupEvents","warningIcon","closeIconURL","CometChatCreateGroup","props","title","namePlaceholderText","passwordPlaceholderText","hideCloseButton","closeButtonIconURL","createGroupButtonText","onClose","onCreateGroup","style","theme","_theme","groupTypes","public","private","password","activeTab","setActiveTab","useState","showPasswordInput","setShowPasswordInput","error","setError","groupNameInput","setGroupNameInput","passwordInput","setPasswordInput","resetGroupData","errorHandler","errorCode","emit","onGroupError","handleGroupNameChange","e","target","value","handlePasswordChange","onActiveTab","type","validate","closeCreateGroupView","createGroup","groupType","trim","guid","GROUP_","Date","getTime","name","group","Group","then","onGroupCreate","catch","Object","keys","map","tab","bind","defaultProps","width","height","background","border","borderRadius","boxShadow","closeIconTint","titleTextFont","titleTextColor","errorTextFont","errorTextBackground","errorTextBorderRadius","errorTextBorder","errorTextColor","groupTypeTextFont","groupTypeTextColor","groupTypeTextBackground","groupTypeTextActiveBackground","namePlaceholderTextFont","namePlaceholderTextColor","nameInputBackground","nameInputBorder","nameInputBorderRadius","nameInputBoxShadow","passwordPlaceholderTextFont","passwordPlaceholderTextColor","passwordInputBackground","passwordInputBorder","passwordInputBorderRadius","passwordInputBoxShadow","createGroupButtonTextFont","createGroupButtonTextColor","createGroupButtonBackground","createGroupButtonBorderRadius","propTypes","string","bool","func","object"],"sources":["/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/cometchat-pro-react-ui-kit/src/components/Groups/CometChatCreateGroup/index.js"],"sourcesContent":["import React from \"react\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { CreateGroupStyles } from \"./CreateGroupStyles\";\nimport PropTypes from \"prop-types\";\nimport {\n  CometChatTheme,\n  GroupTypeConstants,\n  CometChatListItem,\n} from \"../../Shared\";\nimport { GroupsConstants } from \"../../Shared/Constants/UIKitConstants\";\nimport { localize } from \"../../Shared\";\nimport {\n  createGroupWrapperStyle,\n  createGroupHeader,\n  createGroupTitleStyle,\n  closeIconStyle,\n  createGroupBodyStyle,\n  createGroupTabContainerStyle,\n  createGroupTabListStyle,\n  createGroupTabStyle,\n  createGroupInput,\n  createGroupInputName,\n  createGroupInputPassword,\n  nameInputStyle,\n  passwordInputStyle,\n  errorTextStyle,\n  errorIconStyle,\n  errorContainerStyle,\n  createGroupButton,\n  createButtonStyle,\n} from \"./style\";\nimport { CometChatGroupEvents } from \"../CometChatGroupEvents\";\n\nimport warningIcon from \"./resources/warning.svg\";\nimport closeIconURL from \"./resources/close.svg\";\n\nconst CometChatCreateGroup = (props) => {\n  /**\n   * Destructuring Props\n   */\n  const {\n    title,\n    namePlaceholderText,\n    passwordPlaceholderText,\n    hideCloseButton,\n    closeButtonIconURL,\n    createGroupButtonText,\n    onClose,\n    onCreateGroup,\n    style,\n    theme,\n  } = props;\n\n  /**\n   * Setting Theme\n   */\n  const _theme = new CometChatTheme(theme || {});\n\n  /**\n   * Internal States and properties\n   */\n  const groupTypes = {\n    public: GroupTypeConstants.public,\n    private: GroupTypeConstants.private,\n    password: GroupTypeConstants.password,\n  };\n  const [activeTab, setActiveTab] = React.useState(groupTypes.public);\n  const [showPasswordInput, setShowPasswordInput] = React.useState(false);\n  const [error, setError] = React.useState(null);\n  const [groupNameInput, setGroupNameInput] = React.useState(null);\n  const [passwordInput, setPasswordInput] = React.useState(null);\n\n  /**\n   * Reset Create Group form\n   */\n  const resetGroupData = () => {\n    setError(null);\n    setShowPasswordInput(false);\n    setGroupNameInput(null);\n    setPasswordInput(null);\n    setActiveTab(null);\n  };\n\n  /**\n   *\n   * @param {*} errorCode Emits an error event to handle the error occured\n   */\n  const errorHandler = (errorCode) => {\n    CometChatGroupEvents.emit(CometChatGroupEvents.onGroupError, errorCode);\n  };\n\n  /**\n   *\n   * @param {*} e\n   * set Group Name value\n   */\n  const handleGroupNameChange = (e) => {\n    setGroupNameInput(e.target.value);\n  };\n\n  /**\n   *\n   * @param {*} e\n   * set Group Password value\n   */\n  const handlePasswordChange = (e) => {\n    setPasswordInput(e.target.value);\n  };\n\n  /**\n   * When Tab is selected\n   */\n  const onActiveTab = (type) => {\n    resetGroupData();\n    setActiveTab(type);\n    setShowPasswordInput(type === groupTypes.password ? true : false);\n  };\n\n  /**\n   * Validates all the group details that were entered before creating the group\n   * @param\n   */\n  const validate = () => {\n    if (!groupNameInput) {\n      setError(localize(\"GROUP_NAME_BLANK\"));\n      return false;\n    }\n    if (!activeTab) {\n      setError(localize(\"GROUP_TYPE_BLANK\"));\n      return false;\n    }\n    if (activeTab === groupTypes.password) {\n      if (!passwordInput) {\n        setError(localize(\"GROUP_PASSWORD_BLANK\"));\n        return false;\n      }\n    }\n    return true;\n  };\n\n  /**\n   * Close create group screen\n   */\n  const closeCreateGroupView = () => {\n    if (onClose) {\n      resetGroupData();\n      onClose();\n    }\n  };\n\n  /**\n   *\n   * @returns new group created by user\n   */\n  const createGroup = () => {\n    if (!validate()) {\n      return false;\n    }\n    if (onCreateGroup) {\n      onCreateGroup();\n      return false;\n    }\n\n    let groupType = activeTab.trim();\n    let password = passwordInput;\n    let guid = GroupsConstants.GROUP_ + new Date().getTime();\n    let name = groupNameInput;\n    let type;\n    switch (groupType) {\n      case groupTypes.public:\n        type = groupTypes.public;\n        break;\n      case groupTypes.private:\n        type = groupTypes.private;\n        break;\n      case groupTypes.password:\n        type = groupTypes.password;\n        break;\n      default:\n        break;\n    }\n    let group = new CometChat.Group(guid, name, type, password);\n    CometChat.createGroup(group)\n      .then((group) => {\n        closeCreateGroupView();\n        resetGroupData();\n        CometChatGroupEvents.emit(CometChatGroupEvents.onGroupCreate, group);\n      })\n      .catch((error) => {\n        errorHandler(error);\n      });\n  };\n\n  return (\n    <div\n      className=\"creategroup__wrapper\"\n      style={createGroupWrapperStyle(style, _theme)}\n    >\n      <div className=\"creategroup__header\" style={createGroupHeader()}>\n        <p\n          className=\"creategroup__title\"\n          style={createGroupTitleStyle(style, _theme)}\n        >\n          {title}\n        </p>\n        {!hideCloseButton ? (\n          <span\n            className=\"creategroup__close\"\n            style={closeIconStyle(style, closeButtonIconURL, _theme)}\n            onClick={onClose}\n          />\n        ) : null}\n      </div>\n      <div className=\"creategroup__body\" style={createGroupBodyStyle()}>\n        <div\n          className=\"creategroup__tabcontainer\"\n          style={createGroupTabContainerStyle(style)}\n        >\n          <div\n            className=\"creategroup__tablist\"\n            style={createGroupTabListStyle(style, _theme)}\n          >\n            {Object.keys(groupTypes).map((tab) => {\n              return (\n                <CometChatListItem\n                  className=\"creategroup__tab\"\n                  style={createGroupTabStyle(style, _theme, activeTab, tab)}\n                  text={tab}\n                  onItemClick={onActiveTab.bind(this, tab)}\n                />\n              );\n            })}\n          </div>\n        </div>\n        <div className=\"creategroup__input\" style={createGroupInput(style)}>\n          <div\n            className=\"creategroup__input--name\"\n            style={createGroupInputName()}\n          >\n            <input\n              onChange={handleGroupNameChange}\n              value={groupNameInput}\n              type=\"text\"\n              placeholder={namePlaceholderText}\n              style={nameInputStyle(style, _theme)}\n            />\n          </div>\n          {showPasswordInput ? (\n            <div\n              className=\"creategroup__input--password\"\n              style={createGroupInputPassword()}\n            >\n              <input\n                onChange={handlePasswordChange}\n                value={passwordInput}\n                type=\"password\"\n                placeholder={passwordPlaceholderText}\n                style={passwordInputStyle(style, _theme)}\n              />\n            </div>\n          ) : null}\n        </div>\n        {error ? (\n          <div>\n            <div\n              className=\"decorator__message--error\"\n              style={errorContainerStyle(style, _theme)}\n            >\n              {\n                <CometChatListItem\n                  iconURL={warningIcon}\n                  style={errorIconStyle(_theme)}\n                />\n              }\n              <div style={errorTextStyle(style, _theme)}>{error}</div>\n            </div>\n          </div>\n        ) : null}\n        <div\n          className=\"creategroup__button--create\"\n          style={createGroupButton(style)}\n        >\n          <button\n            onClick={createGroup.bind(this)}\n            style={createButtonStyle(style, _theme)}\n          >\n            {createGroupButtonText}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nCometChatCreateGroup.defaultProps = {\n  title: localize(\"NEW__GROUP\"),\n  namePlaceholderText: localize(\"ENTER_GROUP_NAME\"),\n  passwordPlaceholderText: localize(\"ENTER_GROUP_PASSWORD\"),\n  hideCloseButton: false,\n  closeButtonIconURL: closeIconURL,\n  createGroupButtonText: localize(\"CREATE_GROUP\"),\n  onClose: \"\",\n  onCreateGroup: \"\",\n  style: {\n    width: \"100%\",\n    height: \"100%\",\n    background: \"rgb(255,255,255)\",\n    border: \"none\",\n    borderRadius: \"12px\",\n    boxShadow: \"\",\n    closeIconTint: \"#39f\",\n    titleTextFont: \"\",\n    titleTextColor: \"\",\n    errorTextFont: \"\",\n    errorTextBackground: \"\",\n    errorTextBorderRadius: \"\",\n    errorTextBorder: \"\",\n    errorTextColor: \"\",\n    groupTypeTextFont: \"\",\n    groupTypeTextColor: \"\",\n    groupTypeTextBackground: \"\",\n    groupTypeTextActiveBackground: \"\",\n    namePlaceholderTextFont: \"\",\n    namePlaceholderTextColor: \"\",\n    nameInputBackground: \"\",\n    nameInputBorder: \"\",\n    nameInputBorderRadius: \"\",\n    nameInputBoxShadow: \"\",\n    passwordPlaceholderTextFont: \"\",\n    passwordPlaceholderTextColor: \"\",\n    passwordInputBackground: \"\",\n    passwordInputBorder: \"\",\n    passwordInputBorderRadius: \"\",\n    passwordInputBoxShadow: \"\",\n    createGroupButtonTextFont: \"\",\n    createGroupButtonTextColor: \"\",\n    createGroupButtonBackground: \"\",\n    createGroupButtonBorderRadius: \"\",\n  },\n};\n\nCometChatCreateGroup.propTypes = {\n  title: PropTypes.string,\n  namePlaceholderText: PropTypes.string,\n  passwordPlaceholderText: PropTypes.string,\n  hideCloseButton: PropTypes.bool,\n  closeButtonIconURL: PropTypes.string,\n  createGroupButtonText: PropTypes.string,\n  onClose: PropTypes.func,\n  onCreateGroup: PropTypes.func,\n  style: PropTypes.object,\n};\n\nexport { CometChatCreateGroup };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}