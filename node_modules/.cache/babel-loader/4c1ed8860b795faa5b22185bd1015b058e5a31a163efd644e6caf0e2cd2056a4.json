{"ast":null,"code":"import { BaseStyles } from \"../../Shared\";\n/**\n * @class MessageComposerStyles\n * @param {String} inputBorderRadius\n * @param {String} inputBackground\n * @param {String} inputTextFont\n * @param {String} inputTextColor\n * @param {String} placeholderTextFont\n * @param {String} placeholderTextColor\n * @param {String} emojiIconTint\n * @param {String} attachmentIconTint\n * @param {String} stickerIconTint\n * @param {String} stickerCloseIconTint\n */\n\nclass MessageComposerStyles extends BaseStyles {\n  constructor(_ref) {\n    let {\n      inputBorderRadius = \"\",\n      inputBackground = \"\",\n      inputTextFont = \"\",\n      inputTextColor = \"\",\n      placeholderTextFont = \"\",\n      placeholderTextColor = \"\",\n      emojiIconTint = \"\",\n      attachmentIconTint = \"\",\n      stickerIconTint = \"\",\n      stickerCloseIconTint = \"\",\n      sendButtonIconTint = \"\",\n      width = \"100%\",\n      height = \"100%\",\n      border = \"none\",\n      borderRadius = \"12px\",\n      background = \"\",\n      activeBackground = \"\"\n    } = _ref;\n    super({\n      width,\n      height,\n      background,\n      activeBackground,\n      border,\n      borderRadius\n    });\n    this.inputBorderRadius = inputBorderRadius;\n    this.inputBackground = inputBackground;\n    this.inputTextFont = inputTextFont;\n    this.inputTextColor = inputTextColor;\n    this.placeholderTextFont = placeholderTextFont;\n    this.placeholderTextColor = placeholderTextColor;\n    this.emojiIconTint = emojiIconTint;\n    this.attachmentIconTint = attachmentIconTint;\n    this.stickerIconTint = stickerIconTint;\n    this.stickerCloseIconTint = stickerCloseIconTint;\n    this.sendButtonIconTint = sendButtonIconTint;\n  }\n}\nexport { MessageComposerStyles };","map":{"version":3,"names":["BaseStyles","MessageComposerStyles","constructor","inputBorderRadius","inputBackground","inputTextFont","inputTextColor","placeholderTextFont","placeholderTextColor","emojiIconTint","attachmentIconTint","stickerIconTint","stickerCloseIconTint","sendButtonIconTint","width","height","border","borderRadius","background","activeBackground"],"sources":["/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/cometchat-pro-react-ui-kit/src/components/Messages/CometChatMessageComposer/MessageComposerStyles.js"],"sourcesContent":["import { BaseStyles } from \"../../Shared\";\n/**\n * @class MessageComposerStyles\n * @param {String} inputBorderRadius\n * @param {String} inputBackground\n * @param {String} inputTextFont\n * @param {String} inputTextColor\n * @param {String} placeholderTextFont\n * @param {String} placeholderTextColor\n * @param {String} emojiIconTint\n * @param {String} attachmentIconTint\n * @param {String} stickerIconTint\n * @param {String} stickerCloseIconTint\n */\n\nclass MessageComposerStyles extends BaseStyles {\n  constructor({\n    inputBorderRadius = \"\",\n    inputBackground = \"\",\n    inputTextFont = \"\",\n    inputTextColor = \"\",\n    placeholderTextFont = \"\",\n    placeholderTextColor = \"\",\n    emojiIconTint = \"\",\n    attachmentIconTint = \"\",\n    stickerIconTint = \"\",\n    stickerCloseIconTint = \"\",\n    sendButtonIconTint = \"\",\n\n    width = \"100%\",\n    height = \"100%\",\n    border = \"none\",\n    borderRadius = \"12px\",\n    background = \"\",\n    activeBackground = \"\",\n  }) {\n    super({\n      width,\n      height,\n      background,\n      activeBackground,\n      border,\n      borderRadius,\n    });\n\n    this.inputBorderRadius = inputBorderRadius;\n    this.inputBackground = inputBackground;\n    this.inputTextFont = inputTextFont;\n    this.inputTextColor = inputTextColor;\n    this.placeholderTextFont = placeholderTextFont;\n    this.placeholderTextColor = placeholderTextColor;\n    this.emojiIconTint = emojiIconTint;\n    this.attachmentIconTint = attachmentIconTint;\n    this.stickerIconTint = stickerIconTint;\n    this.stickerCloseIconTint = stickerCloseIconTint;\n    this.sendButtonIconTint = sendButtonIconTint;\n  }\n}\nexport { MessageComposerStyles };\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,cAAc;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,qBAAqB,SAASD,UAAU,CAAC;EAC7CE,WAAW,OAmBR;IAAA,IAnBS;MACVC,iBAAiB,GAAG,EAAE;MACtBC,eAAe,GAAG,EAAE;MACpBC,aAAa,GAAG,EAAE;MAClBC,cAAc,GAAG,EAAE;MACnBC,mBAAmB,GAAG,EAAE;MACxBC,oBAAoB,GAAG,EAAE;MACzBC,aAAa,GAAG,EAAE;MAClBC,kBAAkB,GAAG,EAAE;MACvBC,eAAe,GAAG,EAAE;MACpBC,oBAAoB,GAAG,EAAE;MACzBC,kBAAkB,GAAG,EAAE;MAEvBC,KAAK,GAAG,MAAM;MACdC,MAAM,GAAG,MAAM;MACfC,MAAM,GAAG,MAAM;MACfC,YAAY,GAAG,MAAM;MACrBC,UAAU,GAAG,EAAE;MACfC,gBAAgB,GAAG;IACrB,CAAC;IACC,KAAK,CAAC;MACJL,KAAK;MACLC,MAAM;MACNG,UAAU;MACVC,gBAAgB;MAChBH,MAAM;MACNC;IACF,CAAC,CAAC;IAEF,IAAI,CAACd,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAACC,eAAe,GAAGA,eAAe;IACtC,IAAI,CAACC,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACC,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,mBAAmB,GAAGA,mBAAmB;IAC9C,IAAI,CAACC,oBAAoB,GAAGA,oBAAoB;IAChD,IAAI,CAACC,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACC,kBAAkB,GAAGA,kBAAkB;IAC5C,IAAI,CAACC,eAAe,GAAGA,eAAe;IACtC,IAAI,CAACC,oBAAoB,GAAGA,oBAAoB;IAChD,IAAI,CAACC,kBAAkB,GAAGA,kBAAkB;EAC9C;AACF;AACA,SAASZ,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}