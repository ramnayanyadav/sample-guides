{"ast":null,"code":"var _jsxFileName = \"/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/cometchat-pro-react-ui-kit/src/components/Messages/CometChatStickerKeyboard/index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CometChatTheme, ExtensionConstants, localize } from \"../../Shared\";\nimport { Hooks } from \"./hooks\";\nimport { stickerWrapperStyle, stickerSectionListStyle, stickerListStyle, sectionListItemStyle, stickerItemStyle, stickerMsgStyle, stickerMsgTxtStyle, stickerImageStyle, stickerCategoryImageStyle } from \"./style\";\n\n/**\n *\n * CometChatStickerKeyboard is a component that fetches stickers from Stickers extension\n * and displays it.\n *\n * @version 1.0.0\n * @author CometChatTeam\n * @copyright Â© 2022 CometChat Inc.\n *\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CometChatStickerKeyboard = props => {\n  _s();\n  const [stickerList, setStickerList] = React.useState([]);\n  const [stickerSet, setStickerSet] = React.useState(null);\n  const [activeStickerList, setActiveStickerList] = React.useState([]);\n  const [activeStickerSetName, setActiveStickerSetName] = React.useState();\n  const [decoratorMessage, setDecoratorMessage] = React.useState(props.loadingText || localize(\"LOADING\"));\n  const theme = new CometChatTheme(props.theme || {});\n  const sendStickerMessage = stickerItem => {\n    props.onClick(stickerItem);\n  };\n  const onStickerSetClicked = sectionItem => {\n    setActiveStickerList(stickerSet[sectionItem]);\n    setActiveStickerSetName(sectionItem);\n  };\n  const getStickerList = () => {\n    let activeStickers = [];\n    if (activeStickerList && activeStickerList !== null && activeStickerList !== void 0 && activeStickerList.length) {\n      const stickerList = [...activeStickerList];\n      activeStickers = stickerList.map((stickerItem, key) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: stickerItemStyle(props),\n          onClick: sendStickerMessage.bind(this, stickerItem),\n          className: \"stickers__listitem\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: stickerItem.stickerUrl,\n            alt: stickerItem.stickerName,\n            style: stickerImageStyle()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this);\n      });\n    }\n    return activeStickers;\n  };\n  const getStickerCategory = () => {\n    let sectionItems = null;\n    if (stickerSet && Object.keys(stickerSet).length) {\n      sectionItems = Object.keys(stickerSet).map((sectionItem, key) => {\n        const stickerSetThumbnail = stickerSet[sectionItem][0][ExtensionConstants.stickerUrl];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stickers__category__item\",\n          style: sectionListItemStyle(),\n          onClick: onStickerSetClicked.bind(this, sectionItem),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: stickerSetThumbnail,\n            alt: sectionItem,\n            title: stickerSet[sectionItem][0][\"stickerSetName\"],\n            style: stickerCategoryImageStyle()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this);\n      });\n    }\n    return sectionItems;\n  };\n  const getDecoratorMessage = () => {\n    let messageContainer = null;\n    if ((activeStickerList === null || activeStickerList === void 0 ? void 0 : activeStickerList.length) === 0) {\n      messageContainer = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: stickerMsgStyle(),\n        className: \"stickers__decorator-message\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: stickerMsgTxtStyle(props, theme),\n          className: \"decorator_message\",\n          children: decoratorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this);\n    }\n    return messageContainer;\n  };\n  Hooks(props, stickerList, stickerSet, activeStickerSetName, setStickerList, setStickerSet, setActiveStickerList, setActiveStickerSetName, setDecoratorMessage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: stickerWrapperStyle(props, theme),\n    className: \"stickers__keyboard\",\n    children: [getDecoratorMessage(), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: stickerListStyle(props),\n      className: \"stickers__list\",\n      children: getStickerList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: stickerSectionListStyle(props, theme),\n      className: \"stickers__category\",\n      children: getStickerCategory()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n\n// Specifies the default values for props:\n_s(CometChatStickerKeyboard, \"fFqLuA2jgdciNKiXjQoTGlFqj1E=\");\n_c = CometChatStickerKeyboard;\nCometChatStickerKeyboard.defaultProps = {\n  emptyText: localize(\"NO_STICKERS_FOUND\"),\n  errorText: localize(\"SOMETHING_WRONG\"),\n  loadingText: localize(\"LOADING\"),\n  style: {\n    width: \"100%\",\n    height: \"auto\",\n    border: \"none\",\n    background: \"RGB(245, 245, 245)\",\n    borderRadius: \"8px\",\n    categoryBackground: \"rgb(255,255,255)\",\n    emptyTextFont: \"500 15px Inter,sans-serif\",\n    emptyTextColor: \"rgba(20,20,20, 0.58)\",\n    errorTextFont: \"500 15px Inter,sans-serif\",\n    errorTextColor: \"rgba(20,20,20, 0.58)\",\n    loadingTextFont: \"500 15px Inter,sans-serif\",\n    loadingTextColor: \"rgba(20,20,20, 0.58)\"\n  },\n  onClick: () => {}\n};\nCometChatStickerKeyboard.propTypes = {\n  emptyText: PropTypes.string,\n  errorText: PropTypes.string,\n  loadingText: PropTypes.string,\n  style: PropTypes.object,\n  onClick: PropTypes.func\n};\nexport { CometChatStickerKeyboard };\nvar _c;\n$RefreshReg$(_c, \"CometChatStickerKeyboard\");","map":{"version":3,"names":["React","PropTypes","CometChatTheme","ExtensionConstants","localize","Hooks","stickerWrapperStyle","stickerSectionListStyle","stickerListStyle","sectionListItemStyle","stickerItemStyle","stickerMsgStyle","stickerMsgTxtStyle","stickerImageStyle","stickerCategoryImageStyle","CometChatStickerKeyboard","props","stickerList","setStickerList","useState","stickerSet","setStickerSet","activeStickerList","setActiveStickerList","activeStickerSetName","setActiveStickerSetName","decoratorMessage","setDecoratorMessage","loadingText","theme","sendStickerMessage","stickerItem","onClick","onStickerSetClicked","sectionItem","getStickerList","activeStickers","length","map","key","bind","stickerUrl","stickerName","getStickerCategory","sectionItems","Object","keys","stickerSetThumbnail","getDecoratorMessage","messageContainer","defaultProps","emptyText","errorText","style","width","height","border","background","borderRadius","categoryBackground","emptyTextFont","emptyTextColor","errorTextFont","errorTextColor","loadingTextFont","loadingTextColor","propTypes","string","object","func"],"sources":["/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/cometchat-pro-react-ui-kit/src/components/Messages/CometChatStickerKeyboard/index.js"],"sourcesContent":["import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport { CometChatTheme, ExtensionConstants, localize } from \"../../Shared\";\n\nimport { Hooks } from \"./hooks\";\n\nimport {\n  stickerWrapperStyle,\n  stickerSectionListStyle,\n  stickerListStyle,\n  sectionListItemStyle,\n  stickerItemStyle,\n  stickerMsgStyle,\n  stickerMsgTxtStyle,\n  stickerImageStyle,\n  stickerCategoryImageStyle,\n} from \"./style\";\n\n/**\n *\n * CometChatStickerKeyboard is a component that fetches stickers from Stickers extension\n * and displays it.\n *\n * @version 1.0.0\n * @author CometChatTeam\n * @copyright Â© 2022 CometChat Inc.\n *\n */\n\nconst CometChatStickerKeyboard = (props) => {\n  const [stickerList, setStickerList] = React.useState([]);\n  const [stickerSet, setStickerSet] = React.useState(null);\n  const [activeStickerList, setActiveStickerList] = React.useState([]);\n  const [activeStickerSetName, setActiveStickerSetName] = React.useState();\n  const [decoratorMessage, setDecoratorMessage] = React.useState(\n    props.loadingText || localize(\"LOADING\")\n  );\n\n  const theme = new CometChatTheme(props.theme || {});\n  const sendStickerMessage = (stickerItem) => {\n    props.onClick(stickerItem);\n  };\n\n  const onStickerSetClicked = (sectionItem) => {\n    setActiveStickerList(stickerSet[sectionItem]);\n    setActiveStickerSetName(sectionItem);\n  };\n\n  const getStickerList = () => {\n    let activeStickers = [];\n    if (activeStickerList && activeStickerList?.length) {\n      const stickerList = [...activeStickerList];\n      activeStickers = stickerList.map((stickerItem, key) => {\n        return (\n          <div\n            key={key}\n            style={stickerItemStyle(props)}\n            onClick={sendStickerMessage.bind(this, stickerItem)}\n            className=\"stickers__listitem\"\n          >\n            <img\n              src={stickerItem.stickerUrl}\n              alt={stickerItem.stickerName}\n              style={stickerImageStyle()}\n            />\n          </div>\n        );\n      });\n    }\n    return activeStickers;\n  };\n\n  const getStickerCategory = () => {\n    let sectionItems = null;\n    if (stickerSet && Object.keys(stickerSet).length) {\n      sectionItems = Object.keys(stickerSet).map((sectionItem, key) => {\n        const stickerSetThumbnail =\n          stickerSet[sectionItem][0][ExtensionConstants.stickerUrl];\n        return (\n          <div\n            key={key}\n            className=\"stickers__category__item\"\n            style={sectionListItemStyle()}\n            onClick={onStickerSetClicked.bind(this, sectionItem)}\n          >\n            <img\n              src={stickerSetThumbnail}\n              alt={sectionItem}\n              title={stickerSet[sectionItem][0][\"stickerSetName\"]}\n              style={stickerCategoryImageStyle()}\n            />\n          </div>\n        );\n      });\n    }\n    return sectionItems;\n  };\n\n  const getDecoratorMessage = () => {\n    let messageContainer = null;\n    if (activeStickerList?.length === 0) {\n      messageContainer = (\n        <div style={stickerMsgStyle()} className=\"stickers__decorator-message\">\n          <p\n            style={stickerMsgTxtStyle(props, theme)}\n            className=\"decorator_message\"\n          >\n            {decoratorMessage}\n          </p>\n        </div>\n      );\n    }\n    return messageContainer;\n  };\n\n  Hooks(\n    props,\n    stickerList,\n    stickerSet,\n    activeStickerSetName,\n    setStickerList,\n    setStickerSet,\n    setActiveStickerList,\n    setActiveStickerSetName,\n    setDecoratorMessage\n  );\n\n  return (\n    <div\n      style={stickerWrapperStyle(props, theme)}\n      className=\"stickers__keyboard\"\n    >\n      {getDecoratorMessage()}\n      <div style={stickerListStyle(props)} className=\"stickers__list\">\n        {getStickerList()}\n      </div>\n      <div\n        style={stickerSectionListStyle(props, theme)}\n        className=\"stickers__category\"\n      >\n        {getStickerCategory()}\n      </div>\n    </div>\n  );\n};\n\n// Specifies the default values for props:\nCometChatStickerKeyboard.defaultProps = {\n  emptyText: localize(\"NO_STICKERS_FOUND\"),\n  errorText: localize(\"SOMETHING_WRONG\"),\n  loadingText: localize(\"LOADING\"),\n  style: {\n    width: \"100%\",\n    height: \"auto\",\n    border: \"none\",\n    background: \"RGB(245, 245, 245)\",\n    borderRadius: \"8px\",\n    categoryBackground: \"rgb(255,255,255)\",\n    emptyTextFont: \"500 15px Inter,sans-serif\",\n    emptyTextColor: \"rgba(20,20,20, 0.58)\",\n    errorTextFont: \"500 15px Inter,sans-serif\",\n    errorTextColor: \"rgba(20,20,20, 0.58)\",\n    loadingTextFont: \"500 15px Inter,sans-serif\",\n    loadingTextColor: \"rgba(20,20,20, 0.58)\",\n  },\n  onClick: () => {},\n};\n\nCometChatStickerKeyboard.propTypes = {\n  emptyText: PropTypes.string,\n  errorText: PropTypes.string,\n  loadingText: PropTypes.string,\n  style: PropTypes.object,\n  onClick: PropTypes.func,\n};\n\nexport { CometChatStickerKeyboard };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}