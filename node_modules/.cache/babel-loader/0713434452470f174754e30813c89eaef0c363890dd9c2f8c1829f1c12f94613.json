{"ast":null,"code":"var _jsxFileName = \"/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/cometchat-pro-react-ui-kit/src/components/Groups/CometChatGroupList/index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { CometChatDataItem, CometChatTheme, CometChatGroupEvents } from \"../../\";\nimport { Hooks } from \"./hooks\";\nimport { groupMsgStyle, groupMsgImgStyle, groupMsgTxtStyle, groupListStyle, listItemStyle } from \"./style\";\nimport loadingIcon from \"./resources/spinner.svg\";\nimport { DataItemConfiguration } from \"../../Shared\";\n\n/**\n *\n * CometChatGroupList component retrieves the latest list of groups that a CometChat logged-in user has been a part of.\n * The state of the component is communicated via 3 states i.e empty, loading and error\n *\n * @version 1.0.0\n * @author CometChatTeam\n * @copyright Â© 2022 CometChat Inc.\n *\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupList = /*#__PURE__*/_s( /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n  /**\n   * Destructuring props\n   */\n  const {\n    limit,\n    searchKeyword,\n    joinedOnly,\n    tags,\n    style,\n    customView,\n    emptyText,\n    errorText,\n    hideError,\n    activeGroup,\n    loadingIconURL,\n    theme,\n    dataItemConfiguration\n  } = props;\n\n  /**\n   * Internal States\n   */\n  const loggedInUser = React.useRef(null);\n  const groupListManager = React.useRef(null);\n  const callbackData = React.useRef(null);\n  const [groupList, setGroupList] = React.useState([]);\n  const [decoratorMessage, setDecoratorMessage] = React.useState(\"loading\");\n  const _theme = new CometChatTheme(theme || {});\n  const _dataItemConfiguration = dataItemConfiguration || new DataItemConfiguration({});\n  React.useImperativeHandle(ref, () => ({\n    updateGroup: updateGroup,\n    addGroup: addGroup,\n    removeGroup: removeGroup\n  }));\n\n  // Callback received when user updates the group\n  const groupCallback = function (listenerName) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    callbackData.current = {\n      name: listenerName,\n      args: [...args]\n    };\n  };\n\n  /**\n   *\n   * Listener callback when a member is kicked from / has left the group\n   */\n  const handleGroupMemberRemoval = function () {\n    const removedUser = arguments.length <= 1 ? undefined : arguments[1];\n    const group = arguments.length <= 3 ? undefined : arguments[3];\n    let grouplist = [...groupList];\n\n    //search for group\n    let groupKey = grouplist.findIndex(g => g.guid === group.guid);\n    if (groupKey > -1) {\n      if ((loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.uid) === removedUser.uid) {\n        let groupObject = {\n          ...grouplist[groupKey]\n        };\n        let newGroupObject = Object.assign({}, groupObject, {\n          hasJoined: false\n        });\n        grouplist.splice(groupKey, 1, newGroupObject);\n        setGroupList(grouplist);\n      } else {\n        let newGroupObject = Object.assign({}, group);\n        grouplist.splice(groupKey, 1, newGroupObject);\n        setGroupList(grouplist);\n      }\n    }\n  };\n\n  /**\n   *\n   * Listener callback when a member is banned from the group\n   */\n  const handleGroupMemberBan = function () {\n    const removedUser = arguments.length <= 1 ? undefined : arguments[1];\n    const group = arguments.length <= 3 ? undefined : arguments[3];\n    let grouplist = [...groupList];\n    let groupKey = grouplist.findIndex(g => g.guid === group.guid);\n    if (groupKey > -1) {\n      /**\n       * If the loggedin user is banned from the group, remove the group from the group list\n       */\n      if ((loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.uid) === removedUser.uid) {\n        let groupObject = {\n          ...grouplist[groupKey]\n        };\n        let newGroupObject = Object.assign({}, groupObject);\n        grouplist.splice(groupKey, 1, newGroupObject);\n        setGroupList(grouplist);\n      } else {\n        let newGroupObject = Object.assign({}, group);\n        grouplist.splice(groupKey, 1, newGroupObject);\n        setGroupList(grouplist);\n      }\n    }\n  };\n\n  /**\n   *\n   * Listener callback when a user joins/added to the group\n   */\n  const handleGroupMemberAddition = function () {\n    const newUser = arguments.length <= 1 ? undefined : arguments[1];\n    const group = arguments.length <= 3 ? undefined : arguments[3];\n    let grouplist = [...groupList];\n\n    //search for group\n    let groupKey = grouplist.findIndex(g => g.guid === group.guid);\n    if (groupKey > -1) {\n      if ((loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.uid) === newUser.uid) {\n        let groupObject = {\n          ...grouplist[groupKey]\n        };\n        let newgroupObject = Object.assign({}, groupObject, {\n          hasJoined: true\n        });\n        grouplist.splice(groupKey, 1, newgroupObject);\n        setGroupList(grouplist);\n      } else {\n        grouplist.splice(groupKey, 1, group);\n        setGroupList(grouplist);\n      }\n    } else {\n      grouplist.unshift(group);\n      setGroupList(grouplist);\n    }\n  };\n\n  /**\n   *\n   * Listener callback when a group member scope is updated\n   */\n  const handleGroupMemberScopeChange = function () {\n    let grouplist = [...groupList];\n    const user = arguments.length <= 1 ? undefined : arguments[1];\n    const newScope = arguments.length <= 2 ? undefined : arguments[2];\n    const group = arguments.length <= 4 ? undefined : arguments[4];\n\n    //search for group\n    let groupKey = grouplist.findIndex(g => g.guid === group.guid);\n    if (groupKey > -1) {\n      let groupObject = {\n        ...grouplist[groupKey]\n      };\n      if ((loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.uid) === user.uid) {\n        let newgroupObject = Object.assign({}, groupObject, {\n          scope: newScope\n        });\n        grouplist.splice(groupKey, 1, newgroupObject);\n        setGroupList(grouplist);\n      } else {\n        let groupObject = {\n          ...grouplist[groupKey]\n        };\n        let newgroupObject = Object.assign({}, groupObject);\n        grouplist.splice(groupKey, 1, newgroupObject);\n        setGroupList(grouplist);\n      }\n    }\n  };\n\n  /**\n   * Group Listener Handlers\n   */\n  const handlers = {\n    onMemberAddedToGroup: handleGroupMemberAddition,\n    onGroupMemberJoined: handleGroupMemberAddition,\n    onGroupMemberKicked: handleGroupMemberRemoval,\n    onGroupMemberLeft: handleGroupMemberRemoval,\n    onGroupMemberBanned: handleGroupMemberBan,\n    onGroupMemberScopeChanged: handleGroupMemberScopeChange\n  };\n\n  /**\n   * Remove a group from grouplist\n   * @param {*} group\n   */\n  const removeGroup = group => {\n    let grouplist = [...groupList];\n    //search for group\n    let groupKey = grouplist.findIndex((g, k) => g.guid === group.guid);\n    if (groupKey > -1) {\n      grouplist.splice(groupKey, 1);\n      setGroupList(grouplist);\n    }\n  };\n\n  /**\n   * Add new group in groupList\n   * @param {*} group\n   */\n  const addGroup = group => {\n    let grouplist = [...groupList];\n    grouplist.unshift(group);\n    setGroupList(grouplist);\n  };\n\n  /**\n   * Update Group\n   * @param {*} group\n   */\n  const updateGroup = group => {\n    let grouplist = [...groupList];\n    //search for group\n    let groupKey = grouplist.findIndex((g, k) => g.guid === group.guid);\n    if (groupKey > -1) {\n      let newGroupObj = {\n        ...grouplist[groupKey],\n        ...group\n      };\n      grouplist.splice(groupKey, 1, newGroupObj);\n      setGroupList(grouplist);\n    }\n  };\n\n  /**\n   *\n   * @returns GroupList\n   */\n  const fetchGroups = () => {\n    return new Promise((resolve, reject) => {\n      groupListManager === null || groupListManager === void 0 ? void 0 : groupListManager.current.fetchNextGroups().then(grouplist => resolve(grouplist)).catch(error => reject(error));\n    });\n  };\n\n  /**\n   * Fetches new Groups on scroll\n   */\n  const handleGroups = () => {\n    fetchGroups().then(grouplist => {\n      if (groupList.length === 0 && grouplist.length === 0) {\n        setDecoratorMessage(\"NO_GROUPS_FOUND\");\n      } else {\n        setDecoratorMessage(\"\");\n      }\n      //setGroupList([...groupList, ...grouplist]);\n      setGroupList(oldlist => [...oldlist, ...grouplist]);\n    }).catch(error => {\n      setDecoratorMessage(\"SOMETHING_WRONG\");\n      errorHandler(error);\n    });\n  };\n\n  /**\n   * Handles scroll\n   * @param {*} e\n   */\n  const handleScroll = e => {\n    const bottom = Math.round(e.currentTarget.scrollHeight - e.currentTarget.scrollTop) === Math.round(e.currentTarget.clientHeight);\n    if (bottom) {\n      handleGroups();\n    }\n  };\n\n  /**\n   *\n   * @param {*} customView\n   * @returns custom Component\n   */\n  const getCustomView = customView => /*#__PURE__*/React.createElement(customView, props);\n\n  /**\n   *\n   * @returns Loading/Empty/Error states\n   */\n  const getMessageContainer = () => {\n    if (groupList.length === 0 && (decoratorMessage === null || decoratorMessage === void 0 ? void 0 : decoratorMessage.toLowerCase()) === \"loading\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: groupMsgStyle(style),\n        className: \"grouplist__decorator-message\",\n        children: customView !== null && customView !== void 0 && customView.loading ? getCustomView(customView.loading) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: groupMsgImgStyle(style, _theme, loadingIconURL),\n          className: \"decorator-message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 5\n      }, this);\n    } else if (groupList.length === 0 && decoratorMessage.toLowerCase() === \"no_groups_found\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: groupMsgStyle(style),\n        className: \"grouplist__decorator-message\",\n        children: customView !== null && customView !== void 0 && customView.empty ? getCustomView(customView.empty) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: groupMsgTxtStyle(style, _theme, decoratorMessage),\n          className: \"decorator-message\",\n          children: emptyText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 5\n      }, this);\n    } else if (!hideError && decoratorMessage.toLowerCase() === \"something_wrong\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: groupMsgStyle(style),\n        className: \"grouplist__decorator-message\",\n        children: customView !== null && customView !== void 0 && customView.error ? getCustomView(customView.error, props) : /*#__PURE__*/_jsxDEV(\"p\", {\n          style: groupMsgTxtStyle(style, _theme, decoratorMessage),\n          className: \"decorator-message\",\n          children: errorText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 5\n      }, this);\n    }\n  };\n\n  /**\n   * Invoked when a group item is clicked\n   * @param {*} group\n   */\n  const clickHandler = group => {\n    CometChatGroupEvents.emit(CometChatGroupEvents.onItemClick, group);\n  };\n\n  /**\n   *\n   * @param {} errorCode\n   * emits error Event\n   */\n  const errorHandler = errorCode => {\n    CometChatGroupEvents.emit(CometChatGroupEvents.onGroupError, errorCode);\n  };\n\n  /**\n   * Gets called on mount\n   */\n  Hooks(loggedInUser, handlers, setGroupList, groupListManager, groupCallback, callbackData, handleGroups, limit, searchKeyword, joinedOnly, tags, errorHandler);\n\n  /**\n   *\n   * @returns GroupList View\n   */\n  const getGroups = () => {\n    // Group Mapping\n    return groupList.map(group => {\n      let isActive = (activeGroup === null || activeGroup === void 0 ? void 0 : activeGroup.guid) === group.guid ? true : false;\n      return /*#__PURE__*/_jsxDEV(CometChatDataItem, {\n        group: group,\n        inputData: _dataItemConfiguration.inputData,\n        style: listItemStyle(_theme),\n        theme: _theme,\n        isActive: isActive,\n        onClick: clickHandler.bind(this, group),\n        avatarConfiguration: _dataItemConfiguration.avatarConfiguration,\n        statusIndicatorConfiguration: _dataItemConfiguration.statusIndicatorConfiguration\n      }, group.guid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 5\n      }, this);\n    });\n  };\n\n  /**\n   * Component level return\n   */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: groupListStyle(style, _theme),\n    className: \"cometchat__grouplist\",\n    onScroll: handleScroll,\n    children: [getMessageContainer(), getGroups()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 440,\n    columnNumber: 3\n  }, this);\n}, \"UnfC/dvIwopNb6ny9AuVyV5RLBo=\")), \"UnfC/dvIwopNb6ny9AuVyV5RLBo=\");\n\n/**\n * Default Props\n */\n_c2 = GroupList;\nGroupList.defaultProps = {\n  limit: 30,\n  searchKeyword: \"\",\n  joinedOnly: false,\n  tags: null,\n  style: {\n    width: \"100%\",\n    height: \"100%\",\n    background: \"\",\n    border: \"\",\n    borderRadius: \"0\",\n    loadingIconTint: \"\",\n    emptyTextFont: \"\",\n    emptyTextColor: \"\",\n    errorTextFont: \"\",\n    errorTextColor: \"\"\n  },\n  customView: {\n    loading: \"\",\n    empty: \"\",\n    error: \"\"\n  },\n  loadingIconURL: loadingIcon,\n  emptyText: \"No groups\",\n  errorText: \"Something went wrong\",\n  hideError: false,\n  activeGroup: {},\n  dataItemConfiguration: {}\n};\n\n/**\n * prop types\n */\nGroupList.propTypes = {\n  limit: PropTypes.number,\n  searchKeyword: PropTypes.string,\n  joinedOnly: PropTypes.bool,\n  tags: PropTypes.array,\n  loadingIconURL: PropTypes.string,\n  customView: PropTypes.object,\n  style: PropTypes.object,\n  errorText: PropTypes.string,\n  emptyText: PropTypes.string,\n  hideError: PropTypes.bool,\n  activeGroup: PropTypes.object,\n  dataItemConfiguration: PropTypes.object\n};\nexport const CometChatGroupList = /*#__PURE__*/React.memo(GroupList);\n_c3 = CometChatGroupList;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"GroupList$React.forwardRef\");\n$RefreshReg$(_c2, \"GroupList\");\n$RefreshReg$(_c3, \"CometChatGroupList\");","map":{"version":3,"names":["React","PropTypes","CometChat","CometChatDataItem","CometChatTheme","CometChatGroupEvents","Hooks","groupMsgStyle","groupMsgImgStyle","groupMsgTxtStyle","groupListStyle","listItemStyle","loadingIcon","DataItemConfiguration","GroupList","forwardRef","props","ref","limit","searchKeyword","joinedOnly","tags","style","customView","emptyText","errorText","hideError","activeGroup","loadingIconURL","theme","dataItemConfiguration","loggedInUser","useRef","groupListManager","callbackData","groupList","setGroupList","useState","decoratorMessage","setDecoratorMessage","_theme","_dataItemConfiguration","useImperativeHandle","updateGroup","addGroup","removeGroup","groupCallback","listenerName","args","current","name","handleGroupMemberRemoval","removedUser","group","grouplist","groupKey","findIndex","g","guid","uid","groupObject","newGroupObject","Object","assign","hasJoined","splice","handleGroupMemberBan","handleGroupMemberAddition","newUser","newgroupObject","unshift","handleGroupMemberScopeChange","user","newScope","scope","handlers","onMemberAddedToGroup","onGroupMemberJoined","onGroupMemberKicked","onGroupMemberLeft","onGroupMemberBanned","onGroupMemberScopeChanged","k","newGroupObj","fetchGroups","Promise","resolve","reject","fetchNextGroups","then","catch","error","handleGroups","length","oldlist","errorHandler","handleScroll","e","bottom","Math","round","currentTarget","scrollHeight","scrollTop","clientHeight","getCustomView","createElement","getMessageContainer","toLowerCase","loading","empty","clickHandler","emit","onItemClick","errorCode","onGroupError","getGroups","map","isActive","inputData","bind","avatarConfiguration","statusIndicatorConfiguration","defaultProps","width","height","background","border","borderRadius","loadingIconTint","emptyTextFont","emptyTextColor","errorTextFont","errorTextColor","propTypes","number","string","bool","array","object","CometChatGroupList","memo"],"sources":["/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/cometchat-pro-react-ui-kit/src/components/Groups/CometChatGroupList/index.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport {\n\tCometChatDataItem,\n\tCometChatTheme,\n\tCometChatGroupEvents,\n} from \"../../\";\n\nimport { Hooks } from \"./hooks\";\n\nimport {\n\tgroupMsgStyle,\n\tgroupMsgImgStyle,\n\tgroupMsgTxtStyle,\n\tgroupListStyle,\n\tlistItemStyle,\n} from \"./style\";\n\nimport loadingIcon from \"./resources/spinner.svg\";\nimport { DataItemConfiguration } from \"../../Shared\";\n\n/**\n *\n * CometChatGroupList component retrieves the latest list of groups that a CometChat logged-in user has been a part of.\n * The state of the component is communicated via 3 states i.e empty, loading and error\n *\n * @version 1.0.0\n * @author CometChatTeam\n * @copyright Â© 2022 CometChat Inc.\n *\n */\n\nconst GroupList = React.forwardRef((props, ref) => {\n\t/**\n\t * Destructuring props\n\t */\n\tconst {\n\t\tlimit,\n\t\tsearchKeyword,\n\t\tjoinedOnly,\n\t\ttags,\n\t\tstyle,\n\t\tcustomView,\n\t\temptyText,\n\t\terrorText,\n\t\thideError,\n\t\tactiveGroup,\n\t\tloadingIconURL,\n\t\ttheme,\n\t\tdataItemConfiguration,\n\t} = props;\n\n\t/**\n\t * Internal States\n\t */\n\tconst loggedInUser = React.useRef(null);\n\tconst groupListManager = React.useRef(null);\n\tconst callbackData = React.useRef(null);\n\n\tconst [groupList, setGroupList] = React.useState([]);\n\tconst [decoratorMessage, setDecoratorMessage] = React.useState(\"loading\");\n\n\tconst _theme = new CometChatTheme(theme || {});\n\tconst _dataItemConfiguration =\n\t\tdataItemConfiguration || new DataItemConfiguration({});\n\n\tReact.useImperativeHandle(ref, () => ({\n\t\tupdateGroup: updateGroup,\n\t\taddGroup: addGroup,\n\t\tremoveGroup: removeGroup,\n\t}));\n\n\t// Callback received when user updates the group\n\tconst groupCallback = (listenerName, ...args) => {\n\t\tcallbackData.current = { name: listenerName, args: [...args] };\n\t};\n\n\t/**\n\t *\n\t * Listener callback when a member is kicked from / has left the group\n\t */\n\tconst handleGroupMemberRemoval = (...options) => {\n\t\tconst removedUser = options[1];\n\t\tconst group = options[3];\n\n\t\tlet grouplist = [...groupList];\n\n\t\t//search for group\n\t\tlet groupKey = grouplist.findIndex((g) => g.guid === group.guid);\n\n\t\tif (groupKey > -1) {\n\t\t\tif (loggedInUser?.uid === removedUser.uid) {\n\t\t\t\tlet groupObject = { ...grouplist[groupKey] };\n\t\t\t\tlet newGroupObject = Object.assign({}, groupObject, {\n\t\t\t\t\thasJoined: false,\n\t\t\t\t});\n\n\t\t\t\tgrouplist.splice(groupKey, 1, newGroupObject);\n\t\t\t\tsetGroupList(grouplist);\n\t\t\t} else {\n\t\t\t\tlet newGroupObject = Object.assign({}, group);\n\t\t\t\tgrouplist.splice(groupKey, 1, newGroupObject);\n\t\t\t\tsetGroupList(grouplist);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t *\n\t * Listener callback when a member is banned from the group\n\t */\n\tconst handleGroupMemberBan = (...options) => {\n\t\tconst removedUser = options[1];\n\t\tconst group = options[3];\n\t\tlet grouplist = [...groupList];\n\t\tlet groupKey = grouplist.findIndex((g) => g.guid === group.guid);\n\n\t\tif (groupKey > -1) {\n\t\t\t/**\n\t\t\t * If the loggedin user is banned from the group, remove the group from the group list\n\t\t\t */\n\t\t\tif (loggedInUser?.uid === removedUser.uid) {\n\t\t\t\tlet groupObject = { ...grouplist[groupKey] };\n\t\t\t\tlet newGroupObject = Object.assign({}, groupObject);\n\n\t\t\t\tgrouplist.splice(groupKey, 1, newGroupObject);\n\t\t\t\tsetGroupList(grouplist);\n\t\t\t} else {\n\t\t\t\tlet newGroupObject = Object.assign({}, group);\n\t\t\t\tgrouplist.splice(groupKey, 1, newGroupObject);\n\t\t\t\tsetGroupList(grouplist);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t *\n\t * Listener callback when a user joins/added to the group\n\t */\n\tconst handleGroupMemberAddition = (...options) => {\n\t\tconst newUser = options[1];\n\t\tconst group = options[3];\n\t\tlet grouplist = [...groupList];\n\n\t\t//search for group\n\t\tlet groupKey = grouplist.findIndex((g) => g.guid === group.guid);\n\t\tif (groupKey > -1) {\n\t\t\tif (loggedInUser?.uid === newUser.uid) {\n\t\t\t\tlet groupObject = { ...grouplist[groupKey] };\n\t\t\t\tlet newgroupObject = Object.assign({}, groupObject, {\n\t\t\t\t\thasJoined: true,\n\t\t\t\t});\n\n\t\t\t\tgrouplist.splice(groupKey, 1, newgroupObject);\n\t\t\t\tsetGroupList(grouplist);\n\t\t\t} else {\n\t\t\t\tgrouplist.splice(groupKey, 1, group);\n\t\t\t\tsetGroupList(grouplist);\n\t\t\t}\n\t\t} else {\n\t\t\tgrouplist.unshift(group);\n\t\t\tsetGroupList(grouplist);\n\t\t}\n\t};\n\n\t/**\n\t *\n\t * Listener callback when a group member scope is updated\n\t */\n\tconst handleGroupMemberScopeChange = (...options) => {\n\t\tlet grouplist = [...groupList];\n\n\t\tconst user = options[1];\n\t\tconst newScope = options[2];\n\t\tconst group = options[4];\n\n\t\t//search for group\n\t\tlet groupKey = grouplist.findIndex((g) => g.guid === group.guid);\n\n\t\tif (groupKey > -1) {\n\t\t\tlet groupObject = { ...grouplist[groupKey] };\n\t\t\tif (loggedInUser?.uid === user.uid) {\n\t\t\t\tlet newgroupObject = Object.assign({}, groupObject, {\n\t\t\t\t\tscope: newScope,\n\t\t\t\t});\n\n\t\t\t\tgrouplist.splice(groupKey, 1, newgroupObject);\n\n\t\t\t\tsetGroupList(grouplist);\n\t\t\t} else {\n\t\t\t\tlet groupObject = { ...grouplist[groupKey] };\n\t\t\t\tlet newgroupObject = Object.assign({}, groupObject);\n\t\t\t\tgrouplist.splice(groupKey, 1, newgroupObject);\n\t\t\t\tsetGroupList(grouplist);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Group Listener Handlers\n\t */\n\tconst handlers = {\n\t\tonMemberAddedToGroup: handleGroupMemberAddition,\n\t\tonGroupMemberJoined: handleGroupMemberAddition,\n\t\tonGroupMemberKicked: handleGroupMemberRemoval,\n\t\tonGroupMemberLeft: handleGroupMemberRemoval,\n\t\tonGroupMemberBanned: handleGroupMemberBan,\n\t\tonGroupMemberScopeChanged: handleGroupMemberScopeChange,\n\t};\n\n\t/**\n\t * Remove a group from grouplist\n\t * @param {*} group\n\t */\n\tconst removeGroup = (group) => {\n\t\tlet grouplist = [...groupList];\n\t\t//search for group\n\t\tlet groupKey = grouplist.findIndex((g, k) => g.guid === group.guid);\n\t\tif (groupKey > -1) {\n\t\t\tgrouplist.splice(groupKey, 1);\n\t\t\tsetGroupList(grouplist);\n\t\t}\n\t};\n\n\t/**\n\t * Add new group in groupList\n\t * @param {*} group\n\t */\n\tconst addGroup = (group) => {\n\t\tlet grouplist = [...groupList];\n\t\tgrouplist.unshift(group);\n\t\tsetGroupList(grouplist);\n\t};\n\n\t/**\n\t * Update Group\n\t * @param {*} group\n\t */\n\tconst updateGroup = (group) => {\n\t\tlet grouplist = [...groupList];\n\t\t//search for group\n\t\tlet groupKey = grouplist.findIndex((g, k) => g.guid === group.guid);\n\t\tif (groupKey > -1) {\n\t\t\tlet newGroupObj = { ...grouplist[groupKey], ...group };\n\t\t\tgrouplist.splice(groupKey, 1, newGroupObj);\n\t\t\tsetGroupList(grouplist);\n\t\t}\n\t};\n\n\t/**\n\t *\n\t * @returns GroupList\n\t */\n\tconst fetchGroups = () => {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tgroupListManager?.current\n\t\t\t\t.fetchNextGroups()\n\t\t\t\t.then((grouplist) => resolve(grouplist))\n\t\t\t\t.catch((error) => reject(error));\n\t\t});\n\t};\n\n\t/**\n\t * Fetches new Groups on scroll\n\t */\n\tconst handleGroups = () => {\n\t\tfetchGroups()\n\t\t\t.then((grouplist) => {\n\t\t\t\tif (groupList.length === 0 && grouplist.length === 0) {\n\t\t\t\t\tsetDecoratorMessage(\"NO_GROUPS_FOUND\");\n\t\t\t\t} else {\n\t\t\t\t\tsetDecoratorMessage(\"\");\n\t\t\t\t}\n\t\t\t\t//setGroupList([...groupList, ...grouplist]);\n\t\t\t\tsetGroupList((oldlist) => [...oldlist, ...grouplist]);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tsetDecoratorMessage(\"SOMETHING_WRONG\");\n\t\t\t\terrorHandler(error);\n\t\t\t});\n\t};\n\n\t/**\n\t * Handles scroll\n\t * @param {*} e\n\t */\n\tconst handleScroll = (e) => {\n\t\tconst bottom =\n\t\t\tMath.round(e.currentTarget.scrollHeight - e.currentTarget.scrollTop) ===\n\t\t\tMath.round(e.currentTarget.clientHeight);\n\t\tif (bottom) {\n\t\t\thandleGroups();\n\t\t}\n\t};\n\n\t/**\n\t *\n\t * @param {*} customView\n\t * @returns custom Component\n\t */\n\tconst getCustomView = (customView) => React.createElement(customView, props);\n\n\t/**\n\t *\n\t * @returns Loading/Empty/Error states\n\t */\n\tconst getMessageContainer = () => {\n\t\tif (\n\t\t\tgroupList.length === 0 &&\n\t\t\tdecoratorMessage?.toLowerCase() === \"loading\"\n\t\t) {\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tstyle={groupMsgStyle(style)}\n\t\t\t\t\tclassName='grouplist__decorator-message'\n\t\t\t\t>\n\t\t\t\t\t{customView?.loading ? (\n\t\t\t\t\t\tgetCustomView(customView.loading)\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tstyle={groupMsgImgStyle(style, _theme, loadingIconURL)}\n\t\t\t\t\t\t\tclassName='decorator-message'\n\t\t\t\t\t\t></div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else if (\n\t\t\tgroupList.length === 0 &&\n\t\t\tdecoratorMessage.toLowerCase() === \"no_groups_found\"\n\t\t) {\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tstyle={groupMsgStyle(style)}\n\t\t\t\t\tclassName='grouplist__decorator-message'\n\t\t\t\t>\n\t\t\t\t\t{customView?.empty ? (\n\t\t\t\t\t\tgetCustomView(customView.empty)\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tstyle={groupMsgTxtStyle(style, _theme, decoratorMessage)}\n\t\t\t\t\t\t\tclassName='decorator-message'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{emptyText}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else if (\n\t\t\t!hideError &&\n\t\t\tdecoratorMessage.toLowerCase() === \"something_wrong\"\n\t\t) {\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tstyle={groupMsgStyle(style)}\n\t\t\t\t\tclassName='grouplist__decorator-message'\n\t\t\t\t>\n\t\t\t\t\t{customView?.error ? (\n\t\t\t\t\t\tgetCustomView(customView.error, props)\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<p\n\t\t\t\t\t\t\tstyle={groupMsgTxtStyle(style, _theme, decoratorMessage)}\n\t\t\t\t\t\t\tclassName='decorator-message'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{errorText}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t};\n\n\t/**\n\t * Invoked when a group item is clicked\n\t * @param {*} group\n\t */\n\tconst clickHandler = (group) => {\n\t\tCometChatGroupEvents.emit(CometChatGroupEvents.onItemClick, group);\n\t};\n\n\t/**\n\t *\n\t * @param {} errorCode\n\t * emits error Event\n\t */\n\tconst errorHandler = (errorCode) => {\n\t\tCometChatGroupEvents.emit(CometChatGroupEvents.onGroupError, errorCode);\n\t};\n\n\t/**\n\t * Gets called on mount\n\t */\n\tHooks(\n\t\tloggedInUser,\n\t\thandlers,\n\t\tsetGroupList,\n\t\tgroupListManager,\n\t\tgroupCallback,\n\t\tcallbackData,\n\t\thandleGroups,\n\t\tlimit,\n\t\tsearchKeyword,\n\t\tjoinedOnly,\n\t\ttags,\n\t\terrorHandler\n\t);\n\n\t/**\n\t *\n\t * @returns GroupList View\n\t */\n\tconst getGroups = () => {\n\t\t// Group Mapping\n\t\treturn groupList.map((group) => {\n\t\t\tlet isActive = activeGroup?.guid === group.guid ? true : false;\n\n\t\t\treturn (\n\t\t\t\t<CometChatDataItem\n\t\t\t\t\tkey={group.guid}\n\t\t\t\t\tgroup={group}\n\t\t\t\t\tinputData={_dataItemConfiguration.inputData}\n\t\t\t\t\tstyle={listItemStyle(_theme)}\n\t\t\t\t\ttheme={_theme}\n\t\t\t\t\tisActive={isActive}\n\t\t\t\t\tonClick={clickHandler.bind(this, group)}\n\t\t\t\t\tavatarConfiguration={_dataItemConfiguration.avatarConfiguration}\n\t\t\t\t\tstatusIndicatorConfiguration={\n\t\t\t\t\t\t_dataItemConfiguration.statusIndicatorConfiguration\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t);\n\t\t});\n\t};\n\n\t/**\n\t * Component level return\n\t */\n\treturn (\n\t\t<div\n\t\t\tstyle={groupListStyle(style, _theme)}\n\t\t\tclassName='cometchat__grouplist'\n\t\t\tonScroll={handleScroll}\n\t\t>\n\t\t\t{getMessageContainer()}\n\t\t\t{getGroups()}\n\t\t</div>\n\t);\n});\n\n/**\n * Default Props\n */\nGroupList.defaultProps = {\n\tlimit: 30,\n\tsearchKeyword: \"\",\n\tjoinedOnly: false,\n\ttags: null,\n\tstyle: {\n\t\twidth: \"100%\",\n\t\theight: \"100%\",\n\t\tbackground: \"\",\n\t\tborder: \"\",\n\t\tborderRadius: \"0\",\n\t\tloadingIconTint: \"\",\n\t\temptyTextFont: \"\",\n\t\temptyTextColor: \"\",\n\t\terrorTextFont: \"\",\n\t\terrorTextColor: \"\",\n\t},\n\tcustomView: {\n\t\tloading: \"\",\n\t\tempty: \"\",\n\t\terror: \"\",\n\t},\n\tloadingIconURL: loadingIcon,\n\temptyText: \"No groups\",\n\terrorText: \"Something went wrong\",\n\thideError: false,\n\tactiveGroup: {},\n\tdataItemConfiguration: {},\n};\n\n/**\n * prop types\n */\nGroupList.propTypes = {\n\tlimit: PropTypes.number,\n\tsearchKeyword: PropTypes.string,\n\tjoinedOnly: PropTypes.bool,\n\ttags: PropTypes.array,\n\tloadingIconURL: PropTypes.string,\n\tcustomView: PropTypes.object,\n\tstyle: PropTypes.object,\n\terrorText: PropTypes.string,\n\temptyText: PropTypes.string,\n\thideError: PropTypes.bool,\n\tactiveGroup: PropTypes.object,\n\tdataItemConfiguration: PropTypes.object,\n};\n\nexport const CometChatGroupList = React.memo(GroupList);\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,SAAS,QAAQ,qBAAqB;AAE/C,SACCC,iBAAiB,EACjBC,cAAc,EACdC,oBAAoB,QACd,QAAQ;AAEf,SAASC,KAAK,QAAQ,SAAS;AAE/B,SACCC,aAAa,EACbC,gBAAgB,EAChBC,gBAAgB,EAChBC,cAAc,EACdC,aAAa,QACP,SAAS;AAEhB,OAAOC,WAAW,MAAM,yBAAyB;AACjD,SAASC,qBAAqB,QAAQ,cAAc;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA,MAAMC,SAAS,iCAAGd,KAAK,CAACe,UAAU,SAAC,CAACC,KAAK,EAAEC,GAAG,KAAK;EAAA;EAClD;AACD;AACA;EACC,MAAM;IACLC,KAAK;IACLC,aAAa;IACbC,UAAU;IACVC,IAAI;IACJC,KAAK;IACLC,UAAU;IACVC,SAAS;IACTC,SAAS;IACTC,SAAS;IACTC,WAAW;IACXC,cAAc;IACdC,KAAK;IACLC;EACD,CAAC,GAAGd,KAAK;;EAET;AACD;AACA;EACC,MAAMe,YAAY,GAAG/B,KAAK,CAACgC,MAAM,CAAC,IAAI,CAAC;EACvC,MAAMC,gBAAgB,GAAGjC,KAAK,CAACgC,MAAM,CAAC,IAAI,CAAC;EAC3C,MAAME,YAAY,GAAGlC,KAAK,CAACgC,MAAM,CAAC,IAAI,CAAC;EAEvC,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGpC,KAAK,CAACqC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGvC,KAAK,CAACqC,QAAQ,CAAC,SAAS,CAAC;EAEzE,MAAMG,MAAM,GAAG,IAAIpC,cAAc,CAACyB,KAAK,IAAI,CAAC,CAAC,CAAC;EAC9C,MAAMY,sBAAsB,GAC3BX,qBAAqB,IAAI,IAAIjB,qBAAqB,CAAC,CAAC,CAAC,CAAC;EAEvDb,KAAK,CAAC0C,mBAAmB,CAACzB,GAAG,EAAE,OAAO;IACrC0B,WAAW,EAAEA,WAAW;IACxBC,QAAQ,EAAEA,QAAQ;IAClBC,WAAW,EAAEA;EACd,CAAC,CAAC,CAAC;;EAEH;EACA,MAAMC,aAAa,GAAG,UAACC,YAAY,EAAc;IAAA,kCAATC,IAAI;MAAJA,IAAI;IAAA;IAC3Cd,YAAY,CAACe,OAAO,GAAG;MAAEC,IAAI,EAAEH,YAAY;MAAEC,IAAI,EAAE,CAAC,GAAGA,IAAI;IAAE,CAAC;EAC/D,CAAC;;EAED;AACD;AACA;AACA;EACC,MAAMG,wBAAwB,GAAG,YAAgB;IAChD,MAAMC,WAAW,mDAAa;IAC9B,MAAMC,KAAK,mDAAa;IAExB,IAAIC,SAAS,GAAG,CAAC,GAAGnB,SAAS,CAAC;;IAE9B;IACA,IAAIoB,QAAQ,GAAGD,SAAS,CAACE,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,KAAKL,KAAK,CAACK,IAAI,CAAC;IAEhE,IAAIH,QAAQ,GAAG,CAAC,CAAC,EAAE;MAClB,IAAI,CAAAxB,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAE4B,GAAG,MAAKP,WAAW,CAACO,GAAG,EAAE;QAC1C,IAAIC,WAAW,GAAG;UAAE,GAAGN,SAAS,CAACC,QAAQ;QAAE,CAAC;QAC5C,IAAIM,cAAc,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEH,WAAW,EAAE;UACnDI,SAAS,EAAE;QACZ,CAAC,CAAC;QAEFV,SAAS,CAACW,MAAM,CAACV,QAAQ,EAAE,CAAC,EAAEM,cAAc,CAAC;QAC7CzB,YAAY,CAACkB,SAAS,CAAC;MACxB,CAAC,MAAM;QACN,IAAIO,cAAc,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEV,KAAK,CAAC;QAC7CC,SAAS,CAACW,MAAM,CAACV,QAAQ,EAAE,CAAC,EAAEM,cAAc,CAAC;QAC7CzB,YAAY,CAACkB,SAAS,CAAC;MACxB;IACD;EACD,CAAC;;EAED;AACD;AACA;AACA;EACC,MAAMY,oBAAoB,GAAG,YAAgB;IAC5C,MAAMd,WAAW,mDAAa;IAC9B,MAAMC,KAAK,mDAAa;IACxB,IAAIC,SAAS,GAAG,CAAC,GAAGnB,SAAS,CAAC;IAC9B,IAAIoB,QAAQ,GAAGD,SAAS,CAACE,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,KAAKL,KAAK,CAACK,IAAI,CAAC;IAEhE,IAAIH,QAAQ,GAAG,CAAC,CAAC,EAAE;MAClB;AACH;AACA;MACG,IAAI,CAAAxB,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAE4B,GAAG,MAAKP,WAAW,CAACO,GAAG,EAAE;QAC1C,IAAIC,WAAW,GAAG;UAAE,GAAGN,SAAS,CAACC,QAAQ;QAAE,CAAC;QAC5C,IAAIM,cAAc,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEH,WAAW,CAAC;QAEnDN,SAAS,CAACW,MAAM,CAACV,QAAQ,EAAE,CAAC,EAAEM,cAAc,CAAC;QAC7CzB,YAAY,CAACkB,SAAS,CAAC;MACxB,CAAC,MAAM;QACN,IAAIO,cAAc,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEV,KAAK,CAAC;QAC7CC,SAAS,CAACW,MAAM,CAACV,QAAQ,EAAE,CAAC,EAAEM,cAAc,CAAC;QAC7CzB,YAAY,CAACkB,SAAS,CAAC;MACxB;IACD;EACD,CAAC;;EAED;AACD;AACA;AACA;EACC,MAAMa,yBAAyB,GAAG,YAAgB;IACjD,MAAMC,OAAO,mDAAa;IAC1B,MAAMf,KAAK,mDAAa;IACxB,IAAIC,SAAS,GAAG,CAAC,GAAGnB,SAAS,CAAC;;IAE9B;IACA,IAAIoB,QAAQ,GAAGD,SAAS,CAACE,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,KAAKL,KAAK,CAACK,IAAI,CAAC;IAChE,IAAIH,QAAQ,GAAG,CAAC,CAAC,EAAE;MAClB,IAAI,CAAAxB,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAE4B,GAAG,MAAKS,OAAO,CAACT,GAAG,EAAE;QACtC,IAAIC,WAAW,GAAG;UAAE,GAAGN,SAAS,CAACC,QAAQ;QAAE,CAAC;QAC5C,IAAIc,cAAc,GAAGP,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEH,WAAW,EAAE;UACnDI,SAAS,EAAE;QACZ,CAAC,CAAC;QAEFV,SAAS,CAACW,MAAM,CAACV,QAAQ,EAAE,CAAC,EAAEc,cAAc,CAAC;QAC7CjC,YAAY,CAACkB,SAAS,CAAC;MACxB,CAAC,MAAM;QACNA,SAAS,CAACW,MAAM,CAACV,QAAQ,EAAE,CAAC,EAAEF,KAAK,CAAC;QACpCjB,YAAY,CAACkB,SAAS,CAAC;MACxB;IACD,CAAC,MAAM;MACNA,SAAS,CAACgB,OAAO,CAACjB,KAAK,CAAC;MACxBjB,YAAY,CAACkB,SAAS,CAAC;IACxB;EACD,CAAC;;EAED;AACD;AACA;AACA;EACC,MAAMiB,4BAA4B,GAAG,YAAgB;IACpD,IAAIjB,SAAS,GAAG,CAAC,GAAGnB,SAAS,CAAC;IAE9B,MAAMqC,IAAI,mDAAa;IACvB,MAAMC,QAAQ,mDAAa;IAC3B,MAAMpB,KAAK,mDAAa;;IAExB;IACA,IAAIE,QAAQ,GAAGD,SAAS,CAACE,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,KAAKL,KAAK,CAACK,IAAI,CAAC;IAEhE,IAAIH,QAAQ,GAAG,CAAC,CAAC,EAAE;MAClB,IAAIK,WAAW,GAAG;QAAE,GAAGN,SAAS,CAACC,QAAQ;MAAE,CAAC;MAC5C,IAAI,CAAAxB,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAE4B,GAAG,MAAKa,IAAI,CAACb,GAAG,EAAE;QACnC,IAAIU,cAAc,GAAGP,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEH,WAAW,EAAE;UACnDc,KAAK,EAAED;QACR,CAAC,CAAC;QAEFnB,SAAS,CAACW,MAAM,CAACV,QAAQ,EAAE,CAAC,EAAEc,cAAc,CAAC;QAE7CjC,YAAY,CAACkB,SAAS,CAAC;MACxB,CAAC,MAAM;QACN,IAAIM,WAAW,GAAG;UAAE,GAAGN,SAAS,CAACC,QAAQ;QAAE,CAAC;QAC5C,IAAIc,cAAc,GAAGP,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEH,WAAW,CAAC;QACnDN,SAAS,CAACW,MAAM,CAACV,QAAQ,EAAE,CAAC,EAAEc,cAAc,CAAC;QAC7CjC,YAAY,CAACkB,SAAS,CAAC;MACxB;IACD;EACD,CAAC;;EAED;AACD;AACA;EACC,MAAMqB,QAAQ,GAAG;IAChBC,oBAAoB,EAAET,yBAAyB;IAC/CU,mBAAmB,EAAEV,yBAAyB;IAC9CW,mBAAmB,EAAE3B,wBAAwB;IAC7C4B,iBAAiB,EAAE5B,wBAAwB;IAC3C6B,mBAAmB,EAAEd,oBAAoB;IACzCe,yBAAyB,EAAEV;EAC5B,CAAC;;EAED;AACD;AACA;AACA;EACC,MAAM1B,WAAW,GAAIQ,KAAK,IAAK;IAC9B,IAAIC,SAAS,GAAG,CAAC,GAAGnB,SAAS,CAAC;IAC9B;IACA,IAAIoB,QAAQ,GAAGD,SAAS,CAACE,SAAS,CAAC,CAACC,CAAC,EAAEyB,CAAC,KAAKzB,CAAC,CAACC,IAAI,KAAKL,KAAK,CAACK,IAAI,CAAC;IACnE,IAAIH,QAAQ,GAAG,CAAC,CAAC,EAAE;MAClBD,SAAS,CAACW,MAAM,CAACV,QAAQ,EAAE,CAAC,CAAC;MAC7BnB,YAAY,CAACkB,SAAS,CAAC;IACxB;EACD,CAAC;;EAED;AACD;AACA;AACA;EACC,MAAMV,QAAQ,GAAIS,KAAK,IAAK;IAC3B,IAAIC,SAAS,GAAG,CAAC,GAAGnB,SAAS,CAAC;IAC9BmB,SAAS,CAACgB,OAAO,CAACjB,KAAK,CAAC;IACxBjB,YAAY,CAACkB,SAAS,CAAC;EACxB,CAAC;;EAED;AACD;AACA;AACA;EACC,MAAMX,WAAW,GAAIU,KAAK,IAAK;IAC9B,IAAIC,SAAS,GAAG,CAAC,GAAGnB,SAAS,CAAC;IAC9B;IACA,IAAIoB,QAAQ,GAAGD,SAAS,CAACE,SAAS,CAAC,CAACC,CAAC,EAAEyB,CAAC,KAAKzB,CAAC,CAACC,IAAI,KAAKL,KAAK,CAACK,IAAI,CAAC;IACnE,IAAIH,QAAQ,GAAG,CAAC,CAAC,EAAE;MAClB,IAAI4B,WAAW,GAAG;QAAE,GAAG7B,SAAS,CAACC,QAAQ,CAAC;QAAE,GAAGF;MAAM,CAAC;MACtDC,SAAS,CAACW,MAAM,CAACV,QAAQ,EAAE,CAAC,EAAE4B,WAAW,CAAC;MAC1C/C,YAAY,CAACkB,SAAS,CAAC;IACxB;EACD,CAAC;;EAED;AACD;AACA;AACA;EACC,MAAM8B,WAAW,GAAG,MAAM;IACzB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACvCtD,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEgB,OAAO,CACvBuC,eAAe,EAAE,CACjBC,IAAI,CAAEnC,SAAS,IAAKgC,OAAO,CAAChC,SAAS,CAAC,CAAC,CACvCoC,KAAK,CAAEC,KAAK,IAAKJ,MAAM,CAACI,KAAK,CAAC,CAAC;IAClC,CAAC,CAAC;EACH,CAAC;;EAED;AACD;AACA;EACC,MAAMC,YAAY,GAAG,MAAM;IAC1BR,WAAW,EAAE,CACXK,IAAI,CAAEnC,SAAS,IAAK;MACpB,IAAInB,SAAS,CAAC0D,MAAM,KAAK,CAAC,IAAIvC,SAAS,CAACuC,MAAM,KAAK,CAAC,EAAE;QACrDtD,mBAAmB,CAAC,iBAAiB,CAAC;MACvC,CAAC,MAAM;QACNA,mBAAmB,CAAC,EAAE,CAAC;MACxB;MACA;MACAH,YAAY,CAAE0D,OAAO,IAAK,CAAC,GAAGA,OAAO,EAAE,GAAGxC,SAAS,CAAC,CAAC;IACtD,CAAC,CAAC,CACDoC,KAAK,CAAEC,KAAK,IAAK;MACjBpD,mBAAmB,CAAC,iBAAiB,CAAC;MACtCwD,YAAY,CAACJ,KAAK,CAAC;IACpB,CAAC,CAAC;EACJ,CAAC;;EAED;AACD;AACA;AACA;EACC,MAAMK,YAAY,GAAIC,CAAC,IAAK;IAC3B,MAAMC,MAAM,GACXC,IAAI,CAACC,KAAK,CAACH,CAAC,CAACI,aAAa,CAACC,YAAY,GAAGL,CAAC,CAACI,aAAa,CAACE,SAAS,CAAC,KACpEJ,IAAI,CAACC,KAAK,CAACH,CAAC,CAACI,aAAa,CAACG,YAAY,CAAC;IACzC,IAAIN,MAAM,EAAE;MACXN,YAAY,EAAE;IACf;EACD,CAAC;;EAED;AACD;AACA;AACA;AACA;EACC,MAAMa,aAAa,GAAIlF,UAAU,iBAAKvB,KAAK,CAAC0G,aAAa,CAACnF,UAAU,EAAEP,KAAK,CAAC;;EAE5E;AACD;AACA;AACA;EACC,MAAM2F,mBAAmB,GAAG,MAAM;IACjC,IACCxE,SAAS,CAAC0D,MAAM,KAAK,CAAC,IACtB,CAAAvD,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEsE,WAAW,EAAE,MAAK,SAAS,EAC5C;MACD,oBACC;QACC,KAAK,EAAErG,aAAa,CAACe,KAAK,CAAE;QAC5B,SAAS,EAAC,8BAA8B;QAAA,UAEvCC,UAAU,aAAVA,UAAU,eAAVA,UAAU,CAAEsF,OAAO,GACnBJ,aAAa,CAAClF,UAAU,CAACsF,OAAO,CAAC,gBAEjC;UACC,KAAK,EAAErG,gBAAgB,CAACc,KAAK,EAAEkB,MAAM,EAAEZ,cAAc,CAAE;UACvD,SAAS,EAAC;QAAmB;UAAA;UAAA;UAAA;QAAA;MAE9B;QAAA;QAAA;QAAA;MAAA,QACI;IAER,CAAC,MAAM,IACNO,SAAS,CAAC0D,MAAM,KAAK,CAAC,IACtBvD,gBAAgB,CAACsE,WAAW,EAAE,KAAK,iBAAiB,EACnD;MACD,oBACC;QACC,KAAK,EAAErG,aAAa,CAACe,KAAK,CAAE;QAC5B,SAAS,EAAC,8BAA8B;QAAA,UAEvCC,UAAU,aAAVA,UAAU,eAAVA,UAAU,CAAEuF,KAAK,GACjBL,aAAa,CAAClF,UAAU,CAACuF,KAAK,CAAC,gBAE/B;UACC,KAAK,EAAErG,gBAAgB,CAACa,KAAK,EAAEkB,MAAM,EAAEF,gBAAgB,CAAE;UACzD,SAAS,EAAC,mBAAmB;UAAA,UAE5Bd;QAAS;UAAA;UAAA;UAAA;QAAA;MAEX;QAAA;QAAA;QAAA;MAAA,QACI;IAER,CAAC,MAAM,IACN,CAACE,SAAS,IACVY,gBAAgB,CAACsE,WAAW,EAAE,KAAK,iBAAiB,EACnD;MACD,oBACC;QACC,KAAK,EAAErG,aAAa,CAACe,KAAK,CAAE;QAC5B,SAAS,EAAC,8BAA8B;QAAA,UAEvCC,UAAU,aAAVA,UAAU,eAAVA,UAAU,CAAEoE,KAAK,GACjBc,aAAa,CAAClF,UAAU,CAACoE,KAAK,EAAE3E,KAAK,CAAC,gBAEtC;UACC,KAAK,EAAEP,gBAAgB,CAACa,KAAK,EAAEkB,MAAM,EAAEF,gBAAgB,CAAE;UACzD,SAAS,EAAC,mBAAmB;UAAA,UAE5Bb;QAAS;UAAA;UAAA;UAAA;QAAA;MAEX;QAAA;QAAA;QAAA;MAAA,QACI;IAER;EACD,CAAC;;EAED;AACD;AACA;AACA;EACC,MAAMsF,YAAY,GAAI1D,KAAK,IAAK;IAC/BhD,oBAAoB,CAAC2G,IAAI,CAAC3G,oBAAoB,CAAC4G,WAAW,EAAE5D,KAAK,CAAC;EACnE,CAAC;;EAED;AACD;AACA;AACA;AACA;EACC,MAAM0C,YAAY,GAAImB,SAAS,IAAK;IACnC7G,oBAAoB,CAAC2G,IAAI,CAAC3G,oBAAoB,CAAC8G,YAAY,EAAED,SAAS,CAAC;EACxE,CAAC;;EAED;AACD;AACA;EACC5G,KAAK,CACJyB,YAAY,EACZ4C,QAAQ,EACRvC,YAAY,EACZH,gBAAgB,EAChBa,aAAa,EACbZ,YAAY,EACZ0D,YAAY,EACZ1E,KAAK,EACLC,aAAa,EACbC,UAAU,EACVC,IAAI,EACJ0E,YAAY,CACZ;;EAED;AACD;AACA;AACA;EACC,MAAMqB,SAAS,GAAG,MAAM;IACvB;IACA,OAAOjF,SAAS,CAACkF,GAAG,CAAEhE,KAAK,IAAK;MAC/B,IAAIiE,QAAQ,GAAG,CAAA3F,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAE+B,IAAI,MAAKL,KAAK,CAACK,IAAI,GAAG,IAAI,GAAG,KAAK;MAE9D,oBACC,QAAC,iBAAiB;QAEjB,KAAK,EAAEL,KAAM;QACb,SAAS,EAAEZ,sBAAsB,CAAC8E,SAAU;QAC5C,KAAK,EAAE5G,aAAa,CAAC6B,MAAM,CAAE;QAC7B,KAAK,EAAEA,MAAO;QACd,QAAQ,EAAE8E,QAAS;QACnB,OAAO,EAAEP,YAAY,CAACS,IAAI,CAAC,IAAI,EAAEnE,KAAK,CAAE;QACxC,mBAAmB,EAAEZ,sBAAsB,CAACgF,mBAAoB;QAChE,4BAA4B,EAC3BhF,sBAAsB,CAACiF;MACvB,GAVIrE,KAAK,CAACK,IAAI;QAAA;QAAA;QAAA;MAAA,QAWd;IAEJ,CAAC,CAAC;EACH,CAAC;;EAED;AACD;AACA;EACC,oBACC;IACC,KAAK,EAAEhD,cAAc,CAACY,KAAK,EAAEkB,MAAM,CAAE;IACrC,SAAS,EAAC,sBAAsB;IAChC,QAAQ,EAAEwD,YAAa;IAAA,WAEtBW,mBAAmB,EAAE,EACrBS,SAAS,EAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACP;AAER,CAAC,kCAAC;;AAEF;AACA;AACA;AAFA,MAhaMtG,SAAS;AAmafA,SAAS,CAAC6G,YAAY,GAAG;EACxBzG,KAAK,EAAE,EAAE;EACTC,aAAa,EAAE,EAAE;EACjBC,UAAU,EAAE,KAAK;EACjBC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE;IACNsG,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,MAAM;IACdC,UAAU,EAAE,EAAE;IACdC,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,GAAG;IACjBC,eAAe,EAAE,EAAE;IACnBC,aAAa,EAAE,EAAE;IACjBC,cAAc,EAAE,EAAE;IAClBC,aAAa,EAAE,EAAE;IACjBC,cAAc,EAAE;EACjB,CAAC;EACD9G,UAAU,EAAE;IACXsF,OAAO,EAAE,EAAE;IACXC,KAAK,EAAE,EAAE;IACTnB,KAAK,EAAE;EACR,CAAC;EACD/D,cAAc,EAAEhB,WAAW;EAC3BY,SAAS,EAAE,WAAW;EACtBC,SAAS,EAAE,sBAAsB;EACjCC,SAAS,EAAE,KAAK;EAChBC,WAAW,EAAE,CAAC,CAAC;EACfG,qBAAqB,EAAE,CAAC;AACzB,CAAC;;AAED;AACA;AACA;AACAhB,SAAS,CAACwH,SAAS,GAAG;EACrBpH,KAAK,EAAEjB,SAAS,CAACsI,MAAM;EACvBpH,aAAa,EAAElB,SAAS,CAACuI,MAAM;EAC/BpH,UAAU,EAAEnB,SAAS,CAACwI,IAAI;EAC1BpH,IAAI,EAAEpB,SAAS,CAACyI,KAAK;EACrB9G,cAAc,EAAE3B,SAAS,CAACuI,MAAM;EAChCjH,UAAU,EAAEtB,SAAS,CAAC0I,MAAM;EAC5BrH,KAAK,EAAErB,SAAS,CAAC0I,MAAM;EACvBlH,SAAS,EAAExB,SAAS,CAACuI,MAAM;EAC3BhH,SAAS,EAAEvB,SAAS,CAACuI,MAAM;EAC3B9G,SAAS,EAAEzB,SAAS,CAACwI,IAAI;EACzB9G,WAAW,EAAE1B,SAAS,CAAC0I,MAAM;EAC7B7G,qBAAqB,EAAE7B,SAAS,CAAC0I;AAClC,CAAC;AAED,OAAO,MAAMC,kBAAkB,gBAAG5I,KAAK,CAAC6I,IAAI,CAAC/H,SAAS,CAAC;AAAC,MAA3C8H,kBAAkB;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}