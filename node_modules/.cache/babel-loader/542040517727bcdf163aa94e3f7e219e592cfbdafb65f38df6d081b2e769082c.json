{"ast":null,"code":"var _jsxFileName = \"/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/cometchat-pro-react-ui-kit/src/components/Users/CometChatUserList/index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { Hooks } from \"./hooks\";\nimport { CometChatDataItem, CometChatTheme, CometChatUserEvents } from \"../../\";\nimport { DataItemConfiguration, fontHelper } from \"../../Shared\";\nimport { contactMsgStyle, contactMsgTxtStyle, contactListStyle, contactAlphabetStyle, contactMsgImgStyle, listItemStyle } from \"./style\";\nimport reloadIcon from \"./resources/spinner.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserList = /*#__PURE__*/_s( /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n  /**\n   * Destructuring prop values\n   */\n  const {\n    limit,\n    searchKeyword,\n    status,\n    friendsOnly,\n    hideBlockedUsers,\n    style,\n    customView,\n    roles,\n    tags,\n    uids,\n    errorText,\n    emptyText,\n    hideError,\n    activeUser,\n    loadingIconURL,\n    dataItemConfiguration,\n    theme\n  } = props;\n\n  /**\n   * Internal States\n   */\n  const loggedInUser = React.useRef(null);\n  const userListManager = React.useRef(null);\n  const [userList, setUserList] = React.useState([]);\n  const [decoratorMessage, setDecoratorMessage] = React.useState(\"loading\");\n  const _theme = new CometChatTheme(theme || {});\n  const _dataItemConfiguration = dataItemConfiguration || new DataItemConfiguration({});\n\n  /**\n   * Public methods\n   */\n  React.useImperativeHandle(ref, () => ({\n    addUser: addUser,\n    updateUser: updateUser\n  }));\n\n  /**\n   * Emits Error event\n   * @param {*} errorCode\n   */\n  const errorHandler = errorCode => {\n    CometChatUserEvents.emit(CometChatUserEvents.onUserError, errorCode);\n  };\n\n  /**\n   * Updates user when an action is performed on it\n   * @param {*} user\n   */\n  const updateUser = user => {\n    let userlist = [...userList];\n    let userKey = userlist.findIndex(u => u.uid === user.uid);\n    if (userKey > -1) {\n      let newUserObj = {\n        ...userlist[userKey],\n        ...user\n      };\n      userlist.splice(userKey, 1, newUserObj);\n      setUserList(userlist);\n    }\n  };\n\n  /**\n   * Adds new User to the list at the top\n   * @param {*} user\n   */\n  const addUser = user => {\n    let userlist = [...userList];\n    userlist.unshift(user);\n    setUserList(userlist);\n  };\n\n  /**\n   * Fetch Userlist\n   * @returns\n   */\n  const fetchUsers = () => {\n    return new Promise((resolve, reject) => {\n      userListManager === null || userListManager === void 0 ? void 0 : userListManager.current.fetchNextUsers().then(userlist => resolve(userlist)).catch(error => reject(error));\n    });\n  };\n\n  /**\n   * Handles fetching of new user when scrolled\n   */\n  const handleUsers = () => {\n    fetchUsers().then(userlist => {\n      if (userList.length === 0 && userlist.length === 0) {\n        setDecoratorMessage(\"NO_USERS_FOUND\");\n      } else {\n        setDecoratorMessage(\"\");\n      }\n      setUserList(oldlist => [...oldlist, ...userlist]);\n    }).catch(error => {\n      errorHandler(error);\n      setDecoratorMessage(\"SOMETHING_WRONG\");\n    });\n  };\n\n  /**\n   * Performs action on scroll\n   * @param {*} e\n   */\n  const handleScroll = e => {\n    const bottom = Math.round(e.currentTarget.scrollHeight - e.currentTarget.scrollTop) === Math.round(e.currentTarget.clientHeight);\n    if (bottom) {\n      handleUsers();\n    }\n  };\n\n  /**\n   *\n   * @param {*} customView\n   * @param {*} props\n   * @returns custom Component\n   */\n  const getCustomView = (customView, props) => /*#__PURE__*/React.createElement(customView, props);\n\n  /**\n   *\n   * @returns Loading/Empty/Error Screens\n   */\n  const getMessageContainer = () => {\n    if (userList.length === 0 && decoratorMessage.toLowerCase() === \"loading\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: contactMsgStyle(style),\n        className: \"userlist__decorator-message\",\n        children: customView.loading ? getCustomView(customView.loading, props) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: contactMsgImgStyle(style, loadingIconURL, _theme),\n          className: \"decorator-message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 5\n      }, this);\n    } else if (userList.length === 0 && decoratorMessage.toLowerCase() === \"no_users_found\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: contactMsgStyle(style),\n        className: \"userlist__decorator-message\",\n        children: customView.empty ? getCustomView(customView.empty, props) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: contactMsgTxtStyle(style, _theme, decoratorMessage, fontHelper),\n          className: \"decorator-message\",\n          children: emptyText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 5\n      }, this);\n    } else if (!hideError && decoratorMessage.toLowerCase() === \"something_wrong\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: contactMsgStyle(style),\n        className: \"userlist__decorator-message\",\n        children: customView.error ? getCustomView(customView.error, props) : /*#__PURE__*/_jsxDEV(\"p\", {\n          style: contactMsgTxtStyle(style, _theme, decoratorMessage, fontHelper),\n          className: \"decorator-message\",\n          children: errorText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 5\n      }, this);\n    }\n  };\n\n  /**\n   * Handles click on a user item\n   * @param {*} user\n   */\n  const clickHandler = user => {\n    CometChatUserEvents.emit(CometChatUserEvents.onItemClick, user);\n  };\n\n  /**\n   *\n   * @returns Division of Users in an alphabetical order\n   */\n  const getUsers = () => {\n    let currentLetter = \"\";\n    return userList.map(user => {\n      let isActive = (activeUser === null || activeUser === void 0 ? void 0 : activeUser.uid) === user.uid ? true : false;\n      const chr = user.name[0].toUpperCase();\n      let firstChar = null;\n      if (chr !== currentLetter) {\n        currentLetter = chr;\n        firstChar = /*#__PURE__*/_jsxDEV(\"div\", {\n          style: contactAlphabetStyle(_theme),\n          className: \"userlist__alphabet-filter\",\n          children: currentLetter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 6\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [firstChar, /*#__PURE__*/_jsxDEV(CometChatDataItem, {\n          user: user,\n          inputData: _dataItemConfiguration.inputData,\n          style: listItemStyle(_theme),\n          theme: _theme,\n          isActive: isActive,\n          onClick: clickHandler.bind(this, user),\n          avatarConfiguration: _dataItemConfiguration.avatarConfiguration,\n          statusIndicatorConfiguration: _dataItemConfiguration.statusIndicatorConfiguration\n        }, user.uid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 6\n        }, this)]\n      }, user.uid, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 5\n      }, this);\n    });\n  };\n\n  /**\n   * Gets called on Mounting\n   */\n  Hooks(loggedInUser, setUserList, userListManager, updateUser, handleUsers, limit, searchKeyword, status, roles, friendsOnly, hideBlockedUsers, tags, uids, errorHandler);\n\n  /**\n   * Component level return\n   */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: contactListStyle(style, _theme),\n    className: \"cometchat__userlist\",\n    onScroll: handleScroll,\n    children: [getMessageContainer(), getUsers()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 3\n  }, this);\n}, \"HGC2rdwnC1Aks0G0I6OrIukCk0I=\")), \"HGC2rdwnC1Aks0G0I6OrIukCk0I=\");\n\n/**\n * Default Props\n */\n_c2 = UserList;\nUserList.defaultProps = {\n  limit: 30,\n  searchKeyword: \"\",\n  status: \"\",\n  roles: null,\n  friendsOnly: false,\n  hideBlockedUsers: true,\n  tags: null,\n  uids: null,\n  style: {\n    width: \"100%\",\n    height: \"100%\",\n    background: \"\",\n    border: \"\",\n    borderRadius: \"0\",\n    loadingIconTint: \"\",\n    emptyTextFont: \"\",\n    emptyTextColor: \"\",\n    errorTextFont: \"\",\n    errorTextColor: \"\"\n  },\n  customView: {\n    loading: \"\",\n    empty: \"\",\n    error: \"\"\n  },\n  loadingIconURL: reloadIcon,\n  emptyText: \"No users\",\n  errorText: \"Something went wrong\",\n  hideError: false,\n  activeUser: {},\n  dataItemConfiguration: {}\n};\n\n/**\n * Types of Props\n */\nUserList.propTypes = {\n  limit: PropTypes.number,\n  searchKeyword: PropTypes.string,\n  status: PropTypes.string,\n  friendsOnly: PropTypes.bool,\n  hideBlockedUsers: PropTypes.bool,\n  loadingIconURL: PropTypes.string,\n  style: PropTypes.object,\n  customView: PropTypes.object,\n  roles: PropTypes.array,\n  tags: PropTypes.array,\n  uids: PropTypes.array,\n  errorText: PropTypes.string,\n  emptyText: PropTypes.string,\n  hideError: PropTypes.bool,\n  activeUser: PropTypes.object,\n  dataItemConfiguration: PropTypes.object\n};\nexport const CometChatUserList = /*#__PURE__*/React.memo(UserList);\n_c3 = CometChatUserList;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"UserList$React.forwardRef\");\n$RefreshReg$(_c2, \"UserList\");\n$RefreshReg$(_c3, \"CometChatUserList\");","map":{"version":3,"names":["React","PropTypes","CometChat","Hooks","CometChatDataItem","CometChatTheme","CometChatUserEvents","DataItemConfiguration","fontHelper","contactMsgStyle","contactMsgTxtStyle","contactListStyle","contactAlphabetStyle","contactMsgImgStyle","listItemStyle","reloadIcon","UserList","forwardRef","props","ref","limit","searchKeyword","status","friendsOnly","hideBlockedUsers","style","customView","roles","tags","uids","errorText","emptyText","hideError","activeUser","loadingIconURL","dataItemConfiguration","theme","loggedInUser","useRef","userListManager","userList","setUserList","useState","decoratorMessage","setDecoratorMessage","_theme","_dataItemConfiguration","useImperativeHandle","addUser","updateUser","errorHandler","errorCode","emit","onUserError","user","userlist","userKey","findIndex","u","uid","newUserObj","splice","unshift","fetchUsers","Promise","resolve","reject","current","fetchNextUsers","then","catch","error","handleUsers","length","oldlist","handleScroll","e","bottom","Math","round","currentTarget","scrollHeight","scrollTop","clientHeight","getCustomView","createElement","getMessageContainer","toLowerCase","loading","empty","clickHandler","onItemClick","getUsers","currentLetter","map","isActive","chr","name","toUpperCase","firstChar","inputData","bind","avatarConfiguration","statusIndicatorConfiguration","defaultProps","width","height","background","border","borderRadius","loadingIconTint","emptyTextFont","emptyTextColor","errorTextFont","errorTextColor","propTypes","number","string","bool","object","array","CometChatUserList","memo"],"sources":["/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/cometchat-pro-react-ui-kit/src/components/Users/CometChatUserList/index.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport { Hooks } from \"./hooks\";\nimport { CometChatDataItem, CometChatTheme, CometChatUserEvents } from \"../../\";\nimport { DataItemConfiguration, fontHelper } from \"../../Shared\";\n\nimport {\n\tcontactMsgStyle,\n\tcontactMsgTxtStyle,\n\tcontactListStyle,\n\tcontactAlphabetStyle,\n\tcontactMsgImgStyle,\n\tlistItemStyle,\n} from \"./style\";\n\nimport reloadIcon from \"./resources/spinner.svg\";\n\nconst UserList = React.forwardRef((props, ref) => {\n\t/**\n\t * Destructuring prop values\n\t */\n\tconst {\n\t\tlimit,\n\t\tsearchKeyword,\n\t\tstatus,\n\t\tfriendsOnly,\n\t\thideBlockedUsers,\n\t\tstyle,\n\t\tcustomView,\n\t\troles,\n\t\ttags,\n\t\tuids,\n\t\terrorText,\n\t\temptyText,\n\t\thideError,\n\t\tactiveUser,\n\t\tloadingIconURL,\n\t\tdataItemConfiguration,\n\t\ttheme,\n\t} = props;\n\n\t/**\n\t * Internal States\n\t */\n\tconst loggedInUser = React.useRef(null);\n\tconst userListManager = React.useRef(null);\n\n\tconst [userList, setUserList] = React.useState([]);\n\tconst [decoratorMessage, setDecoratorMessage] = React.useState(\"loading\");\n\n\tconst _theme = new CometChatTheme(theme || {});\n\n\tconst _dataItemConfiguration =\n\t\tdataItemConfiguration || new DataItemConfiguration({});\n\n\t/**\n\t * Public methods\n\t */\n\tReact.useImperativeHandle(ref, () => ({\n\t\taddUser: addUser,\n\t\tupdateUser: updateUser,\n\t}));\n\n\t/**\n\t * Emits Error event\n\t * @param {*} errorCode\n\t */\n\tconst errorHandler = (errorCode) => {\n\t\tCometChatUserEvents.emit(CometChatUserEvents.onUserError, errorCode);\n\t};\n\n\t/**\n\t * Updates user when an action is performed on it\n\t * @param {*} user\n\t */\n\tconst updateUser = (user) => {\n\t\tlet userlist = [...userList];\n\t\tlet userKey = userlist.findIndex((u) => u.uid === user.uid);\n\n\t\tif (userKey > -1) {\n\t\t\tlet newUserObj = { ...userlist[userKey], ...user };\n\t\t\tuserlist.splice(userKey, 1, newUserObj);\n\t\t\tsetUserList(userlist);\n\t\t}\n\t};\n\n\t/**\n\t * Adds new User to the list at the top\n\t * @param {*} user\n\t */\n\tconst addUser = (user) => {\n\t\tlet userlist = [...userList];\n\t\tuserlist.unshift(user);\n\t\tsetUserList(userlist);\n\t};\n\n\t/**\n\t * Fetch Userlist\n\t * @returns\n\t */\n\tconst fetchUsers = () => {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tuserListManager?.current\n\t\t\t\t.fetchNextUsers()\n\t\t\t\t.then((userlist) => resolve(userlist))\n\t\t\t\t.catch((error) => reject(error));\n\t\t});\n\t};\n\n\t/**\n\t * Handles fetching of new user when scrolled\n\t */\n\tconst handleUsers = () => {\n\t\tfetchUsers()\n\t\t\t.then((userlist) => {\n\t\t\t\tif (userList.length === 0 && userlist.length === 0) {\n\t\t\t\t\tsetDecoratorMessage(\"NO_USERS_FOUND\");\n\t\t\t\t} else {\n\t\t\t\t\tsetDecoratorMessage(\"\");\n\t\t\t\t}\n\t\t\t\tsetUserList((oldlist) => [...oldlist, ...userlist]);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\terrorHandler(error);\n\t\t\t\tsetDecoratorMessage(\"SOMETHING_WRONG\");\n\t\t\t});\n\t};\n\n\t/**\n\t * Performs action on scroll\n\t * @param {*} e\n\t */\n\tconst handleScroll = (e) => {\n\t\tconst bottom =\n\t\t\tMath.round(e.currentTarget.scrollHeight - e.currentTarget.scrollTop) ===\n\t\t\tMath.round(e.currentTarget.clientHeight);\n\t\tif (bottom) {\n\t\t\thandleUsers();\n\t\t}\n\t};\n\n\t/**\n\t *\n\t * @param {*} customView\n\t * @param {*} props\n\t * @returns custom Component\n\t */\n\tconst getCustomView = (customView, props) =>\n\t\tReact.createElement(customView, props);\n\n\t/**\n\t *\n\t * @returns Loading/Empty/Error Screens\n\t */\n\tconst getMessageContainer = () => {\n\t\tif (userList.length === 0 && decoratorMessage.toLowerCase() === \"loading\") {\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tstyle={contactMsgStyle(style)}\n\t\t\t\t\tclassName='userlist__decorator-message'\n\t\t\t\t>\n\t\t\t\t\t{customView.loading ? (\n\t\t\t\t\t\tgetCustomView(customView.loading, props)\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tstyle={contactMsgImgStyle(style, loadingIconURL, _theme)}\n\t\t\t\t\t\t\tclassName='decorator-message'\n\t\t\t\t\t\t></div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else if (\n\t\t\tuserList.length === 0 &&\n\t\t\tdecoratorMessage.toLowerCase() === \"no_users_found\"\n\t\t) {\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tstyle={contactMsgStyle(style)}\n\t\t\t\t\tclassName='userlist__decorator-message'\n\t\t\t\t>\n\t\t\t\t\t{customView.empty ? (\n\t\t\t\t\t\tgetCustomView(customView.empty, props)\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tstyle={contactMsgTxtStyle(\n\t\t\t\t\t\t\t\tstyle,\n\t\t\t\t\t\t\t\t_theme,\n\t\t\t\t\t\t\t\tdecoratorMessage,\n\t\t\t\t\t\t\t\tfontHelper\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tclassName='decorator-message'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{emptyText}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else if (\n\t\t\t!hideError &&\n\t\t\tdecoratorMessage.toLowerCase() === \"something_wrong\"\n\t\t) {\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tstyle={contactMsgStyle(style)}\n\t\t\t\t\tclassName='userlist__decorator-message'\n\t\t\t\t>\n\t\t\t\t\t{customView.error ? (\n\t\t\t\t\t\tgetCustomView(customView.error, props)\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<p\n\t\t\t\t\t\t\tstyle={contactMsgTxtStyle(\n\t\t\t\t\t\t\t\tstyle,\n\t\t\t\t\t\t\t\t_theme,\n\t\t\t\t\t\t\t\tdecoratorMessage,\n\t\t\t\t\t\t\t\tfontHelper\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tclassName='decorator-message'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{errorText}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t};\n\n\t/**\n\t * Handles click on a user item\n\t * @param {*} user\n\t */\n\tconst clickHandler = (user) => {\n\t\tCometChatUserEvents.emit(CometChatUserEvents.onItemClick, user);\n\t};\n\n\t/**\n\t *\n\t * @returns Division of Users in an alphabetical order\n\t */\n\tconst getUsers = () => {\n\t\tlet currentLetter = \"\";\n\t\treturn userList.map((user) => {\n\t\t\tlet isActive = activeUser?.uid === user.uid ? true : false;\n\t\t\tconst chr = user.name[0].toUpperCase();\n\t\t\tlet firstChar = null;\n\t\t\tif (chr !== currentLetter) {\n\t\t\t\tcurrentLetter = chr;\n\t\t\t\tfirstChar = (\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle={contactAlphabetStyle(_theme)}\n\t\t\t\t\t\tclassName='userlist__alphabet-filter'\n\t\t\t\t\t>\n\t\t\t\t\t\t{currentLetter}\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<React.Fragment key={user.uid}>\n\t\t\t\t\t{firstChar}\n\t\t\t\t\t<CometChatDataItem\n\t\t\t\t\t\tkey={user.uid}\n\t\t\t\t\t\tuser={user}\n\t\t\t\t\t\tinputData={_dataItemConfiguration.inputData}\n\t\t\t\t\t\tstyle={listItemStyle(_theme)}\n\t\t\t\t\t\ttheme={_theme}\n\t\t\t\t\t\tisActive={isActive}\n\t\t\t\t\t\tonClick={clickHandler.bind(this, user)}\n\t\t\t\t\t\tavatarConfiguration={_dataItemConfiguration.avatarConfiguration}\n\t\t\t\t\t\tstatusIndicatorConfiguration={\n\t\t\t\t\t\t\t_dataItemConfiguration.statusIndicatorConfiguration\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</React.Fragment>\n\t\t\t);\n\t\t});\n\t};\n\n\t/**\n\t * Gets called on Mounting\n\t */\n\tHooks(\n\t\tloggedInUser,\n\t\tsetUserList,\n\t\tuserListManager,\n\t\tupdateUser,\n\t\thandleUsers,\n\t\tlimit,\n\t\tsearchKeyword,\n\t\tstatus,\n\t\troles,\n\t\tfriendsOnly,\n\t\thideBlockedUsers,\n\t\ttags,\n\t\tuids,\n\t\terrorHandler\n\t);\n\n\t/**\n\t * Component level return\n\t */\n\treturn (\n\t\t<div\n\t\t\tstyle={contactListStyle(style, _theme)}\n\t\t\tclassName='cometchat__userlist'\n\t\t\tonScroll={handleScroll}\n\t\t>\n\t\t\t{getMessageContainer()}\n\t\t\t{getUsers()}\n\t\t</div>\n\t);\n});\n\n/**\n * Default Props\n */\nUserList.defaultProps = {\n\tlimit: 30,\n\tsearchKeyword: \"\",\n\tstatus: \"\",\n\troles: null,\n\tfriendsOnly: false,\n\thideBlockedUsers: true,\n\ttags: null,\n\tuids: null,\n\tstyle: {\n\t\twidth: \"100%\",\n\t\theight: \"100%\",\n\t\tbackground: \"\",\n\t\tborder: \"\",\n\t\tborderRadius: \"0\",\n\t\tloadingIconTint: \"\",\n\t\temptyTextFont: \"\",\n\t\temptyTextColor: \"\",\n\t\terrorTextFont: \"\",\n\t\terrorTextColor: \"\",\n\t},\n\tcustomView: {\n\t\tloading: \"\",\n\t\tempty: \"\",\n\t\terror: \"\",\n\t},\n\tloadingIconURL: reloadIcon,\n\temptyText: \"No users\",\n\terrorText: \"Something went wrong\",\n\thideError: false,\n\tactiveUser: {},\n\tdataItemConfiguration: {},\n};\n\n/**\n * Types of Props\n */\nUserList.propTypes = {\n  limit: PropTypes.number,\n  searchKeyword: PropTypes.string,\n  status: PropTypes.string,\n  friendsOnly: PropTypes.bool,\n  hideBlockedUsers: PropTypes.bool,\n  loadingIconURL: PropTypes.string,\n  style: PropTypes.object,\n  customView: PropTypes.object,\n  roles: PropTypes.array,\n  tags: PropTypes.array,\n  uids: PropTypes.array,\n  errorText: PropTypes.string,\n  emptyText: PropTypes.string,\n  hideError: PropTypes.bool,\n  activeUser: PropTypes.object,\n  dataItemConfiguration: PropTypes.object,\n};\n\nexport const CometChatUserList = React.memo(UserList);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}