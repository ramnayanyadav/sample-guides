{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from \"react\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { CometChatMessageReceiverType } from \"..\";\nexport const Hooks = (props, setLoggedInUser, setChatWith, setChatWithId, chatRef) => {\n  _s();\n  //fetch logged in user\n  React.useEffect(() => {\n    CometChat.getLoggedinUser().then(user => setLoggedInUser(user));\n  }, []);\n  React.useEffect(() => {\n    //update receiver user\n    if (props.user && props.user.uid) {\n      chatRef.current = {\n        chatWith: CometChatMessageReceiverType.user,\n        chatWithId: props.user.uid\n      };\n      setChatWith(CometChatMessageReceiverType.user);\n      setChatWithId(props.user.uid);\n    } else if (props.group && props.group.guid) {\n      chatRef.current = {\n        chatWith: CometChatMessageReceiverType.group,\n        chatWithId: props.group.guid\n      };\n      setChatWith(CometChatMessageReceiverType.group);\n      setChatWithId(props.group.guid);\n    }\n  }, [props.user, props.group, setChatWith, setChatWithId, chatRef]);\n};\n_s(Hooks, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n_c = Hooks;\nvar _c;\n$RefreshReg$(_c, \"Hooks\");","map":{"version":3,"names":["React","CometChat","CometChatMessageReceiverType","Hooks","props","setLoggedInUser","setChatWith","setChatWithId","chatRef","useEffect","getLoggedinUser","then","user","uid","current","chatWith","chatWithId","group","guid"],"sources":["/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/cometchat-pro-react-ui-kit/src/components/Messages/CometChatCreatePoll/hooks.js"],"sourcesContent":["import React from \"react\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport { CometChatMessageReceiverType } from \"..\";\n\nexport const Hooks = (\n  props,\n  setLoggedInUser,\n  setChatWith,\n  setChatWithId,\n  chatRef\n) => {\n  //fetch logged in user\n  React.useEffect(() => {\n    CometChat.getLoggedinUser().then((user) => setLoggedInUser(user));\n  }, []);\n\n  React.useEffect(() => {\n    //update receiver user\n    if (props.user && props.user.uid) {\n      chatRef.current = {\n        chatWith: CometChatMessageReceiverType.user,\n        chatWithId: props.user.uid,\n      };\n\n      setChatWith(CometChatMessageReceiverType.user);\n      setChatWithId(props.user.uid);\n    } else if (props.group && props.group.guid) {\n      chatRef.current = {\n        chatWith: CometChatMessageReceiverType.group,\n        chatWithId: props.group.guid,\n      };\n\n      setChatWith(CometChatMessageReceiverType.group);\n      setChatWithId(props.group.guid);\n    }\n  }, [props.user, props.group, setChatWith, setChatWithId, chatRef]);\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,qBAAqB;AAE/C,SAASC,4BAA4B,QAAQ,IAAI;AAEjD,OAAO,MAAMC,KAAK,GAAG,CACnBC,KAAK,EACLC,eAAe,EACfC,WAAW,EACXC,aAAa,EACbC,OAAO,KACJ;EAAA;EACH;EACAR,KAAK,CAACS,SAAS,CAAC,MAAM;IACpBR,SAAS,CAACS,eAAe,EAAE,CAACC,IAAI,CAAEC,IAAI,IAAKP,eAAe,CAACO,IAAI,CAAC,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EAENZ,KAAK,CAACS,SAAS,CAAC,MAAM;IACpB;IACA,IAAIL,KAAK,CAACQ,IAAI,IAAIR,KAAK,CAACQ,IAAI,CAACC,GAAG,EAAE;MAChCL,OAAO,CAACM,OAAO,GAAG;QAChBC,QAAQ,EAAEb,4BAA4B,CAACU,IAAI;QAC3CI,UAAU,EAAEZ,KAAK,CAACQ,IAAI,CAACC;MACzB,CAAC;MAEDP,WAAW,CAACJ,4BAA4B,CAACU,IAAI,CAAC;MAC9CL,aAAa,CAACH,KAAK,CAACQ,IAAI,CAACC,GAAG,CAAC;IAC/B,CAAC,MAAM,IAAIT,KAAK,CAACa,KAAK,IAAIb,KAAK,CAACa,KAAK,CAACC,IAAI,EAAE;MAC1CV,OAAO,CAACM,OAAO,GAAG;QAChBC,QAAQ,EAAEb,4BAA4B,CAACe,KAAK;QAC5CD,UAAU,EAAEZ,KAAK,CAACa,KAAK,CAACC;MAC1B,CAAC;MAEDZ,WAAW,CAACJ,4BAA4B,CAACe,KAAK,CAAC;MAC/CV,aAAa,CAACH,KAAK,CAACa,KAAK,CAACC,IAAI,CAAC;IACjC;EACF,CAAC,EAAE,CAACd,KAAK,CAACQ,IAAI,EAAER,KAAK,CAACa,KAAK,EAAEX,WAAW,EAAEC,aAAa,EAAEC,OAAO,CAAC,CAAC;AACpE,CAAC;AAAC,GAhCWL,KAAK;AAAA,KAALA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}