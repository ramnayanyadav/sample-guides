{"ast":null,"code":"var _jsxFileName = \"/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/cometchat-pro-react-ui-kit/src/components/Messages/CometChatMessageComposer/index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\nimport { CometChatActionSheet, CometChatSoundManager, CometChatLocalize, localize, CometChatPopover, ExtensionConstants, ExtensionURLs, CometChatTheme, MessageTypeConstants, MetadataConstants, ConversationOptionConstants } from \"../..\";\nimport { CometChatMessageEvents, CometChatCustomMessageTypes, getExtensionsData, CometChatEmojiKeyboard, CometChatStickerKeyboard, CometChatMessagePreview, messageConstants, CometChatCreatePoll, CometChatMessageTemplate, MessageComposerStyles } from \"..\";\nimport { getUnixTimestamp } from \"../CometChatMessageHelper\";\nimport { messageStatus } from \"../CometChatMessageConstants\";\nimport { Hooks } from \"./hooks\";\nimport { chatComposerStyle, composerInputStyle, inputInnerStyle, messageInputStyle, stickyAttachButtonStyle, attchButtonIconStyle, inputStickyStyle, stickerBtnStyle, stickerBtnIconStyle, emojiButtonStyle, emojiBtnIconStyle, reactionBtnStyle, reactionBtnIconStyle, sendButtonStyle, sendBtnIconStyle, fileInputStyle, stickyButtonStyle, emojiKeyBoardStyle, actionSheetStyle, actionSheetPopoverStyle, stickerKeyboardStyle, emojiBoardPopoverStyle, createPollStyle, messagePreviewStyle, popoverForCreatePollStyle } from \"./style\";\nimport { MessagePreviewConfiguration } from \"../CometChatMessagePreview/MessagePreviewConfiguration\";\nimport { EmojiKeyboardConfiguration } from \"../CometChatEmojiKeyboard/EmojiKeyboardConfiguration\";\nimport { CreatePollConfiguration } from \"../CometChatCreatePoll/CreatePollConfiguration\";\nimport { StickerKeyboardConfiguration } from \"../CometChatStickerKeyboard/StickerKeyboardConfiguration\";\nimport { ActionSheetConfiguration } from \"../../Shared\";\nimport roundedPlus from \"./resources/add-circle-filled.svg\";\nimport insertEmoticon from \"./resources/emoji.svg\";\nimport sendBtn from \"./resources/send-message.svg\";\nimport closeIcon from \"./resources/close-circle.svg\";\nimport heart from \"./resources/heart.png\";\nimport deleteIconURL from \"./resources/delete.svg\";\nimport { BaseStyles } from \"../../Shared\";\n\n/**\n *\n * CometChatMessageComposer component part of messages component it's takes user input text,image,video etc,after pressing send button\n * it's append messages in message list, with additonal CometChat SDK conversation object.\n *\n * @version 1.0.0\n * @author CometChatTeam\n * @copyright Â© 2022 CometChat Inc.\n *\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CometChatMessageComposer = /*#__PURE__*/_s( /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n  const [chatWith, setChatWith] = React.useState(null);\n  const [chatWithId, setChatWithId] = React.useState(null);\n  const [messageInput, setMessageInput] = React.useState(\"\");\n  const [viewAttachButton, setViewAttachButton] = React.useState(false);\n  const [viewSticker, setViewSticker] = React.useState(false);\n  const [viewStickerTray, setViewStickerTray] = React.useState(null);\n  const [viewActionSheet, setViewActionSheet] = React.useState({});\n  const [actionSheetItems, setActionSheetItems] = React.useState([]);\n  const [viewCreatePoll, setViewCreatePoll] = React.useState(false);\n  const [viewEmojiTray, setViewEmojiTray] = React.useState({});\n  const [messagePreview, setMessagePreview] = React.useState(null);\n  const [viewInputField, setViewInputField] = React.useState(true);\n  const stickerTemplate = React.useRef(null);\n  const loggedInUser = React.useRef(null);\n  let isTyping = React.useRef(null);\n  let liveReactionTimeout = 0;\n  const disabledState = false;\n  const messageInputRef = React.useRef(null);\n  const fileInputRef = React.useRef(null);\n  const chatRef = React.useRef(chatWith);\n  const {\n    user,\n    group,\n    hideAttachment,\n    attachmentIconURL,\n    stickerCloseIconURL,\n    placeholderText,\n    hideLiveReaction,\n    liveReactionIconURL,\n    hideEmoji,\n    emojiIconURL,\n    showSendButton,\n    sendButtonIconURL,\n    onSendButtonClick,\n    messageTypes,\n    excludeMessageTypes,\n    enableTypingIndicator,\n    enableSoundForMessages,\n    customOutgoingMessageSound,\n    style,\n    messagePreviewConfiguration,\n    emojiKeyboardConfiguration,\n    stickerKeyboardConfiguration,\n    createPollConfiguration,\n    actionSheetConfiguration,\n    theme\n  } = props;\n  const _theme = new CometChatTheme(theme !== null && theme !== void 0 ? theme : {});\n\n  /**,\n   * Event callbacks\n   */\n  React.useImperativeHandle(ref, () => ({\n    previewMessageForEdit: previewMessage\n  }));\n  const draftMessage = () => {};\n  const previewMessage = message => {\n    setMessagePreview({\n      message: message,\n      mode: ConversationOptionConstants.edit\n    });\n    setMessageInput(message.text);\n    const element = messageInputRef.current;\n    let messageText = message.text;\n\n    //xss extensions data\n    const xssData = getExtensionsData(message, MetadataConstants.extensions.xssFilter);\n    if (xssData && xssData.hasOwnProperty(ExtensionConstants.sanitizedText) && xssData.hasOwnProperty(ExtensionConstants.hasXSS) && xssData.hasXSS === ExtensionConstants.yes) {\n      messageText = xssData.sanitized_text;\n    }\n    element.focus();\n    element.textContent = \"\";\n    pasteHtmlAtCaret(messageText, false);\n  };\n  const playAudio = () => {\n    if (customOutgoingMessageSound) {\n      CometChatSoundManager.play(CometChatSoundManager.Sound.outgoingMessage, customOutgoingMessageSound);\n    } else {\n      CometChatSoundManager.play(CometChatSoundManager.Sound.outgoingMessage);\n    }\n  };\n  const closeMessagePreview = () => {\n    setMessagePreview(null);\n    setMessageInput(\"\");\n    messageInputRef.current.textContent = \"\";\n  };\n  const sendMessageOnEnter = event => {\n    if (event.keyCode === 13 && !event.shiftKey) {\n      event.preventDefault();\n      sendTextMessage();\n    }\n  };\n\n  /** send text message */\n  const sendTextMessage = () => {\n    setViewEmojiTray(false);\n    if (!messageInput.trim().length) {\n      return false;\n    }\n    if (messagePreview && messagePreview.mode === ConversationOptionConstants.edit) {\n      editMessage(messagePreview.message);\n      return false;\n    }\n    let textMessage = new CometChat.TextMessage(chatWithId, messageInput, chatWith);\n    textMessage.setSender(loggedInUser.current);\n    textMessage.setReceiver(chatWith);\n    textMessage.setText(messageInput);\n    textMessage.setSentAt(getUnixTimestamp());\n    textMessage.setMuid(String(getUnixTimestamp()));\n    CometChatMessageEvents.emit(CometChatMessageEvents.onMessageSent, {\n      message: textMessage,\n      status: messageStatus.inprogress\n    });\n    if (enableSoundForMessages) playAudio();\n    setMessageInput(\"\");\n    messageInputRef.current.textContent = \"\";\n    CometChat.sendMessage(textMessage).then(message => {\n      const messageObject = {\n        ...message\n      };\n      CometChatMessageEvents.emit(CometChatMessageEvents.onMessageSent, {\n        message: messageObject,\n        status: messageStatus.success\n      });\n    }).catch(error => {\n      CometChatMessageEvents.emit(CometChatMessageEvents.onMessageError, {\n        message: textMessage,\n        error: error\n      });\n    });\n    if (onSendButtonClick) {\n      onSendButtonClick();\n    }\n  };\n\n  /** send media message */\n  const sendMediaMessage = (messageInput, messageType) => {\n    setViewActionSheet(false);\n    let mediaMessage = new CometChat.MediaMessage(chatWithId, messageInput, messageType, chatWith);\n    mediaMessage.setSender(loggedInUser.current);\n    mediaMessage.setReceiver(chatWith);\n    mediaMessage.setType(messageType);\n    mediaMessage.setMetadata({\n      [MetadataConstants.file]: messageInput\n    });\n    mediaMessage.setSentAt(getUnixTimestamp());\n    mediaMessage.setMuid(String(getUnixTimestamp()));\n    CometChatMessageEvents.emit(CometChatMessageEvents.onMessageSent, {\n      message: mediaMessage,\n      status: messageStatus.inprogress\n    });\n    if (enableSoundForMessages) playAudio();\n    CometChat.sendMessage(mediaMessage).then(message => {\n      const messageObject = {\n        ...message\n      };\n      CometChatMessageEvents.emit(CometChatMessageEvents.onMessageSent, {\n        message: messageObject,\n        status: messageStatus.success\n      });\n    }).catch(error => {\n      CometChatMessageEvents.emit(CometChatMessageEvents.onMessageError, {\n        message: mediaMessage,\n        error: error\n      });\n    });\n  };\n\n  /** send sticker */\n  const sendSticker = stickerMessage => {\n    const customData = {\n      sticker_url: stickerMessage.stickerUrl,\n      sticker_name: stickerMessage.stickerName\n    };\n    const customMessage = new CometChat.CustomMessage(chatWithId, chatWith, CometChatCustomMessageTypes.sticker, customData);\n    customMessage.setSender(loggedInUser.current);\n    customMessage.setReceiver(chatWith);\n    customMessage.setMetadata({\n      incrementUnreadCount: true\n    });\n    customMessage.setSentAt(getUnixTimestamp());\n    customMessage.setMuid(String(getUnixTimestamp()));\n    CometChatMessageEvents.emit(CometChatMessageEvents.onMessageSent, {\n      message: customMessage,\n      status: messageStatus.inprogress\n    });\n    if (enableSoundForMessages) playAudio();\n    CometChat.sendCustomMessage(customMessage).then(message => {\n      const messageObject = {\n        ...message\n      };\n      CometChatMessageEvents.emit(CometChatMessageEvents.onMessageSent, {\n        message: messageObject,\n        status: messageStatus.success\n      });\n    }).catch(error => {\n      CometChatMessageEvents.emit(CometChatMessageEvents.onMessageError, {\n        message: customMessage,\n        error: error\n      });\n    });\n  };\n\n  /** edit message */\n  const editMessage = message => {\n    endTyping(null, null);\n    let messageText = messageInput.trim();\n    let textMessage = new CometChat.TextMessage(chatWithId, messageText, chatWith);\n    textMessage.setId(messagePreview.message.id);\n    setMessageInput(\"\");\n    messageInputRef.current.textContent = \"\";\n    if (enableSoundForMessages) playAudio();\n    setMessagePreview(null);\n    CometChat.editMessage(textMessage).then(editedMessage => {\n      CometChatMessageEvents.emit(CometChatMessageEvents.onMessageEdit, {\n        message: editedMessage,\n        status: messageStatus.success\n      });\n    }).catch(error => {\n      CometChatMessageEvents.emit(CometChatMessageEvents.onMessageError, {\n        message: textMessage,\n        error: error\n      });\n    });\n  };\n  const startTyping = (endTypingTimeout, typingMetadata) => {\n    //if typing is disabled\n    if (!enableTypingIndicator) {\n      return false;\n    }\n\n    //if typing is in progress\n    if (isTyping.current) {\n      return false;\n    }\n    let typingInterval = endTypingTimeout || 5000;\n    let metadata = typingMetadata || undefined;\n    let typingNotification = new CometChat.TypingIndicator(chatWithId, chatWith, metadata);\n    CometChat.startTyping(typingNotification);\n    isTyping.current = setTimeout(() => {\n      endTyping(null, typingMetadata);\n    }, typingInterval);\n  };\n  const endTyping = (event, typingMetadata) => {\n    if (event) {\n      event.persist();\n    }\n    if (!enableTypingIndicator) {\n      return false;\n    }\n    let metadata = typingMetadata || undefined;\n    let typingNotification = new CometChat.TypingIndicator(chatWithId, chatWith, metadata);\n    CometChat.endTyping(typingNotification);\n    clearTimeout(isTyping.current);\n    isTyping.current = null;\n  };\n\n  /**\n   *\n   * input media message handler\n   */\n  const fileInputHandler = () => {\n    setViewActionSheet(false);\n    if (!fileInputRef.current) {\n      return false;\n    }\n    fileInputRef.current.accept = \"application/*\";\n    fileInputRef.current.click();\n  };\n  const audioInputHandler = () => {\n    setViewActionSheet(false);\n    if (!fileInputRef.current) {\n      return false;\n    }\n    fileInputRef.current.accept = \"audio/*\";\n    fileInputRef.current.click();\n  };\n  const imageInputHandler = () => {\n    setViewActionSheet(false);\n    if (!fileInputRef.current) {\n      return false;\n    }\n    fileInputRef.current.accept = \"image/*\";\n    fileInputRef.current.click();\n  };\n  const videoInputHandler = () => {\n    setViewActionSheet(false);\n    if (!fileInputRef.current) {\n      return false;\n    }\n    fileInputRef.current.accept = \"video/*\";\n    fileInputRef.current.click();\n  };\n\n  /** fileInputChangeHandler */\n  const fileInputChangeHandler = event => {\n    setViewActionSheet(false);\n    const uploadedFile = event.target.files[\"0\"];\n    var fileNameType = uploadedFile.type.split(\"/\");\n    var reader = new FileReader();\n    reader.addEventListener(\"load\", event => {\n      const newFile = new File([reader.result], uploadedFile.name, uploadedFile);\n      switch (fileNameType[0]) {\n        case \"image\":\n          sendMediaMessage(newFile, MessageTypeConstants.image);\n          break;\n        case \"video\":\n          sendMediaMessage(newFile, MessageTypeConstants.video);\n          break;\n        case \"audio\":\n          sendMediaMessage(newFile, MessageTypeConstants.audio);\n          break;\n        case \"file\":\n          sendMediaMessage(newFile, MessageTypeConstants.file);\n          break;\n        default:\n          sendMediaMessage(newFile, MessageTypeConstants.file);\n          break;\n      }\n      fileInputRef.current.value = \"\";\n    }, false);\n    reader.readAsArrayBuffer(uploadedFile);\n  };\n\n  /** closeCreatePoll */\n  const closeCreatePoll = () => {\n    setViewCreatePoll(false);\n  };\n\n  /** onPollSubmit */\n  const onPollSubmit = () => {\n    setViewCreatePoll(false);\n  };\n\n  /** openCreatePoll  */\n  const openCreatePoll = () => {\n    setViewActionSheet(false);\n    setViewCreatePoll(true);\n  };\n\n  /** share collaborative document */\n  const shareCollaborativeDocument = () => {\n    setViewActionSheet(false);\n    CometChat.callExtension(ExtensionConstants.document, ExtensionConstants.post, ExtensionURLs.document, {\n      receiver: chatRef.current.chatWithId,\n      receiverType: chatRef.current.chatWith\n    }).catch(error => {\n      CometChatMessageEvents.emit(CometChatMessageEvents.onMessageError, error);\n    });\n  };\n\n  /** share collaborative whitevoard */\n  const shareCollaborativeWhiteboard = () => {\n    setViewActionSheet(false);\n    CometChat.callExtension(ExtensionConstants.whiteboard, ExtensionConstants.post, ExtensionURLs.whiteboard, {\n      receiver: chatRef.current.chatWithId,\n      receiverType: chatRef.current.chatWith\n    }).catch(error => {\n      CometChatMessageEvents.emit(CometChatMessageEvents.onMessageError, error);\n    });\n  };\n\n  /** handleInputEvent */\n  const handleInputEvent = event => {\n    startTyping();\n    const elem = event.currentTarget;\n    let messageInput = elem.textContent.trim();\n    if (!messageInput.length) {\n      event.currentTarget.textContent = messageInput;\n    }\n    setMessageInput(elem.innerText);\n  };\n\n  /** inputChangeHandler */\n  const inputChangeHandler = event => {\n    setTimeout(handleInputEvent(event), 500);\n  };\n\n  /** composer sticker iconClickHandler */\n  const toggleStickersTray = () => {\n    setViewStickerTray(prevViewStickerOption => !prevViewStickerOption);\n  };\n  const pasteHtmlAtCaret = (html, selectPastedContent) => {\n    var sel, range;\n    const chatWindow = window;\n    if (chatWindow.getSelection) {\n      // IE9 and non-IE\n      sel = chatWindow.getSelection();\n      if (sel.getRangeAt && sel.rangeCount) {\n        range = sel.getRangeAt(0);\n        range.deleteContents();\n        // Range.createContextualFragment() would be useful here but is\n        // only relatively recently standardized and is not supported in\n        // some browsers (IE9, for one)\n        var el = document.createElement(\"div\");\n        el.innerText = html;\n        var frag = document.createDocumentFragment(),\n          node,\n          lastNode;\n        while (node = el.firstChild) {\n          lastNode = frag.appendChild(node);\n        }\n        var firstNode = frag.firstChild;\n        range.insertNode(frag);\n        if (lastNode) {\n          range = range.cloneRange();\n          range.setStartAfter(lastNode);\n          if (selectPastedContent) {\n            range.setStartBefore(firstNode);\n          } else {\n            range.collapse(true);\n          }\n          sel.removeAllRanges();\n          sel.addRange(range);\n        }\n      }\n    } else if ((sel = document.selection) && sel.type !== \"Control\") {\n      // IE < 9\n      var originalRange = sel.createRange();\n      originalRange.collapse(true);\n      sel.createRange().pasteHTML(html);\n      if (selectPastedContent) {\n        range = sel.createRange();\n        range.setEndPoint(\"StartToStart\", originalRange);\n        range.select();\n      }\n    }\n  };\n\n  /** select emoji from emojikeyboard */\n  const onEmojiSelect = emojiObject => {\n    const element = messageInputRef.current;\n    element.focus();\n    element.innerText = \"\";\n    pasteHtmlAtCaret(messageInput + emojiObject, false);\n    setMessageInput(element.innerText);\n  };\n\n  /** composer pluse button  onClickHandler */\n  const attachmentClickHandler = event => {\n    setViewActionSheet(old => {\n      return {\n        actionSheet: !old.actionSheet,\n        event: event\n      };\n    });\n  };\n\n  /** composer  emoji onClickHandler  */\n  const emojiClickHandler = event => {\n    setViewEmojiTray(old => {\n      return {\n        emojiTrayPreview: !old.emojiTrayPreview,\n        event: event\n      };\n    });\n  };\n\n  /** composer  sticker onClickHandler  */\n  const stickerClickHandler = () => {\n    if (stickerTemplate.current.actionCallback) {\n      stickerTemplate.current.actionCallback();\n    } else {\n      toggleStickersTray();\n    }\n  };\n\n  /** if already live reaction in progress */\n  const shareLiveReaction = () => {\n    if (liveReactionTimeout) {\n      return false;\n    }\n\n    /** fetching the metadata type from constants */\n    const data = {\n      type: MetadataConstants.liveReaction,\n      reaction: liveReactionIconURL || heart\n    };\n\n    /*** send transient message */\n    let transientMessage = new CometChat.TransientMessage(chatWithId, chatWith, data);\n    CometChat.sendTransientMessage(transientMessage);\n\n    /** set timeout till the next share */\n    liveReactionTimeout = setTimeout(clearTimeout(liveReactionTimeout), messageConstants.liveReactionTimeout);\n\n    /** emit event to share live reaction */\n    const payload = {\n      reaction: liveReactionIconURL || heart\n    };\n    CometChatMessageEvents.emit(CometChatMessageEvents.onLiveReaction, payload);\n  };\n\n  /** attach/composr pluse icon */\n  const attachOption = () => {\n    return viewAttachButton ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: stickyAttachButtonStyle(),\n      className: \"attachment__icon\",\n      onClick: attachmentClickHandler.bind(this),\n      title: localize(\"ATTACH\"),\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        style: attchButtonIconStyle(style, attachmentIconURL, _theme)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 706,\n      columnNumber: 7\n    }, this) : null;\n  };\n\n  /**CreatePollConfiguration */\n  const _actionSheetConfiguration = actionSheetConfiguration !== null && actionSheetConfiguration !== void 0 ? actionSheetConfiguration : new ActionSheetConfiguration({});\n\n  /**  action sheet render under tooltip */\n  const actionSheetBoard = () => {\n    var _viewActionSheet$even, _viewActionSheet$even2, _actionSheetConfigura;\n    return viewActionSheet.actionSheet ? /*#__PURE__*/_jsxDEV(CometChatPopover, {\n      position: \"top\",\n      x: viewActionSheet === null || viewActionSheet === void 0 ? void 0 : (_viewActionSheet$even = viewActionSheet.event) === null || _viewActionSheet$even === void 0 ? void 0 : _viewActionSheet$even.clientX,\n      y: viewActionSheet === null || viewActionSheet === void 0 ? void 0 : (_viewActionSheet$even2 = viewActionSheet.event) === null || _viewActionSheet$even2 === void 0 ? void 0 : _viewActionSheet$even2.clientY,\n      style: actionSheetPopoverStyle(_theme),\n      children: /*#__PURE__*/_jsxDEV(CometChatActionSheet, {\n        title: localize(\"ADD_TO_CHAT\"),\n        layoutModeIconURL: (_actionSheetConfigura = _actionSheetConfiguration === null || _actionSheetConfiguration === void 0 ? void 0 : _actionSheetConfiguration.roundedPlus) !== null && _actionSheetConfigura !== void 0 ? _actionSheetConfigura : roundedPlus,\n        theme: _theme,\n        style: actionSheetStyle(_theme),\n        actions: actionSheetItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 724,\n      columnNumber: 7\n    }, this) : null;\n  };\n\n  /**CreatePollConfiguration */\n  const _createPollConfiguration = createPollConfiguration !== null && createPollConfiguration !== void 0 ? createPollConfiguration : new CreatePollConfiguration({});\n  const title = localize(\"CREATE_POLL\");\n  const questionPlaceholderText = localize(\"QUESTION\");\n  const answerPlaceholderText = localize(\"ANSWER\");\n  const addAnswerText = localize(\"ADD_ANSWER\");\n  const answerHelpText = localize(\"SET_THE_ANSWERS\");\n\n  /** createpoll */\n  const createPoll = () => {\n    return viewCreatePoll ? /*#__PURE__*/_jsxDEV(CometChatPopover, {\n      withBackDrop: viewCreatePoll ? true : false,\n      style: popoverForCreatePollStyle(_theme, _createPollConfiguration),\n      children: /*#__PURE__*/_jsxDEV(CometChatCreatePoll, {\n        closeIconURL: _createPollConfiguration.closeIconURL || closeIcon,\n        title: title,\n        addAnswerIconURL: _createPollConfiguration.addAnswerIconURL || roundedPlus,\n        createPollButtonText: localize(\"SEND\"),\n        deleteIconURL: _createPollConfiguration.deleteIconURL || deleteIconURL,\n        defaultAnswers: 2,\n        theme: _theme,\n        style: createPollStyle(_theme, _createPollConfiguration),\n        questionPlaceholderText: questionPlaceholderText,\n        addAnswerText: addAnswerText,\n        answerPlaceholderText: answerPlaceholderText,\n        answerHelpText: answerHelpText,\n        user: user,\n        group: group,\n        onClose: _createPollConfiguration.onClose || closeCreatePoll,\n        onCreatePoll: _createPollConfiguration.onCreatePoll || onPollSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 760,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 7\n    }, this) : null;\n  };\n\n  /** sticker button */\n  const stickerButton = () => {\n    var _stickerTemplate$curr;\n    return viewSticker ? /*#__PURE__*/_jsxDEV(\"div\", {\n      title: localize(\"STICKER\"),\n      style: stickerBtnStyle(),\n      className: \"button__sticker\",\n      onClick: stickerClickHandler,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        style: stickerBtnIconStyle(style, viewStickerTray ? stickerCloseIconURL : stickerTemplate === null || stickerTemplate === void 0 ? void 0 : (_stickerTemplate$curr = stickerTemplate.current) === null || _stickerTemplate$curr === void 0 ? void 0 : _stickerTemplate$curr.icon, _theme)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 795,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 789,\n      columnNumber: 7\n    }, this) : null;\n  };\n\n  /** messagePreviewConfiguration */\n\n  const _messagePreviewConfiguration = messagePreviewConfiguration || new MessagePreviewConfiguration({});\n\n  /** message preview  */\n  const previewTray = () => {\n    var _messagePreview$messa;\n    return messagePreview ? /*#__PURE__*/_jsxDEV(CometChatMessagePreview, {\n      messagePreviewTitle: _messagePreviewConfiguration.messagePreviewTitle || localize(\"MESSAGE_EDIT\"),\n      messagePreviewSubtitle: _messagePreviewConfiguration.messagePreviewSubtitle || (messagePreview === null || messagePreview === void 0 ? void 0 : (_messagePreview$messa = messagePreview.message) === null || _messagePreview$messa === void 0 ? void 0 : _messagePreview$messa.text),\n      closeIconURL: _messagePreviewConfiguration.closeIconURL || closeIcon,\n      onCloseClick: _messagePreviewConfiguration.onCloseClick || closeMessagePreview.bind(this),\n      theme: _theme,\n      style: messagePreviewStyle(_theme, _messagePreviewConfiguration)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 816,\n      columnNumber: 7\n    }, this) : null;\n  };\n\n  /**StickerKeyboardConfiguration */\n  const _stickerKeyboardConfiguration = stickerKeyboardConfiguration !== null && stickerKeyboardConfiguration !== void 0 ? stickerKeyboardConfiguration : new StickerKeyboardConfiguration({});\n\n  /** sticker board */\n  const stickerTray = () => {\n    return viewStickerTray ? /*#__PURE__*/_jsxDEV(CometChatStickerKeyboard, {\n      onClick: sendSticker.bind(this),\n      onClose: _stickerKeyboardConfiguration.onClose || toggleStickersTray,\n      emptyText: localize(\"NO_STICKERS_FOUND\"),\n      errorText: localize(\"SOMETHING_WRONG\"),\n      loadingText: localize(\"LOADING\"),\n      theme: _theme,\n      style: stickerKeyboardStyle(_theme, _stickerKeyboardConfiguration)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 843,\n      columnNumber: 7\n    }, this) : null;\n  };\n\n  /** emoji icon */\n  const emojiButton = () => {\n    return !hideEmoji ? /*#__PURE__*/_jsxDEV(\"div\", {\n      title: localize(\"EMOJI\"),\n      style: emojiButtonStyle(),\n      className: \"button__emoji\",\n      onClick: emojiClickHandler.bind(this),\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        style: emojiBtnIconStyle(style, emojiIconURL, _theme)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 864,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 858,\n      columnNumber: 7\n    }, this) : null;\n  };\n\n  /** EmojiKeyboardConfiguration */\n  const _emojiKeyboardConfiguration = emojiKeyboardConfiguration || new EmojiKeyboardConfiguration({});\n\n  /** emoji board */\n  const emojiBoard = () => {\n    if (viewEmojiTray.emojiTrayPreview) {\n      var _viewEmojiTray$event, _viewEmojiTray$event2;\n      return /*#__PURE__*/_jsxDEV(CometChatPopover, {\n        position: \"top\",\n        x: viewEmojiTray === null || viewEmojiTray === void 0 ? void 0 : (_viewEmojiTray$event = viewEmojiTray.event) === null || _viewEmojiTray$event === void 0 ? void 0 : _viewEmojiTray$event.clientX,\n        y: viewEmojiTray === null || viewEmojiTray === void 0 ? void 0 : (_viewEmojiTray$event2 = viewEmojiTray.event) === null || _viewEmojiTray$event2 === void 0 ? void 0 : _viewEmojiTray$event2.clientY,\n        style: emojiBoardPopoverStyle(_theme, _emojiKeyboardConfiguration),\n        children: /*#__PURE__*/_jsxDEV(CometChatEmojiKeyboard, {\n          theme: _theme,\n          style: emojiKeyBoardStyle(_theme, _emojiKeyboardConfiguration),\n          onClick: (_emojiKeyboardConfiguration === null || _emojiKeyboardConfiguration === void 0 ? void 0 : _emojiKeyboardConfiguration.onClick) || onEmojiSelect.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 883,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 877,\n        columnNumber: 9\n      }, this);\n    } else {\n      return null;\n    }\n  };\n\n  /** live reaction button */\n  const liveReactionButton = () => {\n    var _messageInputRef$curr;\n    if (!hideLiveReaction && !(messageInputRef !== null && messageInputRef !== void 0 && (_messageInputRef$curr = messageInputRef.current) !== null && _messageInputRef$curr !== void 0 && _messageInputRef$curr.innerText)) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: reactionBtnStyle(),\n        className: \"button__reactions\",\n        onClick: shareLiveReaction.bind(this),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: liveReactionIconURL,\n          alt: liveReactionIconURL,\n          title: localize(\"LIVE_REACTION\"),\n          style: reactionBtnIconStyle()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 906,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 901,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n\n  /** send button */\n  const sendButton = () => {\n    return messageInput !== null && messageInput !== void 0 && messageInput.length && showSendButton || hideLiveReaction ? /*#__PURE__*/_jsxDEV(\"div\", {\n      title: localize(\"SEND_MESSAGE\"),\n      style: sendButtonStyle(),\n      className: \"button__send\",\n      onClick: sendTextMessage,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        style: sendBtnIconStyle(style, sendButtonIconURL, _theme, messageInput, isTyping)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 927,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 921,\n      columnNumber: 7\n    }, this) : null;\n  };\n\n  /**message input field*/\n  const inputField = () => {\n    return viewInputField ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: messageInputStyle(style, disabledState, _theme),\n      className: \"input__message-input\",\n      contentEditable: \"true\",\n      placeholder: placeholderText,\n      dir: CometChatLocalize.getDir(),\n      onInput: inputChangeHandler,\n      onBlur: endTyping.bind(this),\n      onKeyDown: sendMessageOnEnter,\n      ref: messageInputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 943,\n      columnNumber: 7\n    }, this) : null;\n  };\n  Hooks(props, loggedInUser, setChatWith, setChatWithId, chatRef, setViewSticker, stickerTemplate, setActionSheetItems, setViewInputField, setViewAttachButton, openCreatePoll, fileInputHandler, videoInputHandler, imageInputHandler, audioInputHandler, shareCollaborativeDocument, shareCollaborativeWhiteboard, sendSticker);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: chatComposerStyle(style, _theme),\n    className: \"chat__composer\",\n    children: [previewTray(), stickerTray(), emojiBoard(), actionSheetBoard(), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: fileInputRef,\n      style: fileInputStyle(),\n      onChange: fileInputChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 984,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: composerInputStyle(style),\n      className: \"composer__input\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        tabIndex: \"-1\",\n        style: inputInnerStyle(style, _theme),\n        className: \"input__inner\",\n        children: [inputField(), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: inputStickyStyle(disabledState, attachOption(), _theme),\n          className: \"input__sticky\",\n          children: [attachOption(), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input__sticky__buttons\",\n            style: stickyButtonStyle(),\n            children: [stickerButton(), emojiButton(), liveReactionButton(), sendButton()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1003,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 998,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 991,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 990,\n      columnNumber: 7\n    }, this), createPoll()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 979,\n    columnNumber: 5\n  }, this);\n}, \"Dz1hFtYNv4TNPMwG+13b3EGBMxo=\")), \"Dz1hFtYNv4TNPMwG+13b3EGBMxo=\");\n_c2 = CometChatMessageComposer;\nCometChatMessageComposer.defaultProps = {\n  user: null,\n  group: null,\n  style: {\n    ...new BaseStyles({\n      width: \"100%\",\n      height: \"auto\",\n      background: \"rgb(255, 255, 255)\",\n      border: \"1px solid rgb(234, 234, 234)\",\n      borderRadius: \"8px\",\n      activeBackground: \"\"\n    }),\n    placeholderTextFont: \"400 15px Inter, sans-serif\",\n    placeholderTextColor: \"rgba(20, 20, 20,0.6)\",\n    attachmentIconTint: \"rgba(20, 20, 20, 0.46)\",\n    sendButtonIconTint: \"#39f\",\n    inputBackground: \"\",\n    inputTextFont: \"\",\n    inputTextColor: \"\",\n    emojiIconTint: \"rgba(20, 20, 20, 0.46)\",\n    stickerIconTint: \"rgba(20, 20, 20, 0.46)\",\n    stickerCloseIconTint: \"\"\n  },\n  attachmentIconURL: roundedPlus,\n  stickerCloseIconURL: \"\",\n  placeholderText: localize(\"ENTER_YOUR_MESSAGE_HERE\"),\n  hideAttachment: false,\n  liveReactionIconURL: heart,\n  hideLiveReaction: false,\n  hideEmoji: false,\n  emojiIconURL: insertEmoticon,\n  showSendButton: true,\n  sendButtonIconURL: sendBtn,\n  messageTypes: null,\n  excludeMessageTypes: null,\n  onSendButtonClick: null,\n  enableTypingIndicator: true,\n  enableSoundForMessages: true,\n  customOutgoingMessageSound: null,\n  messagePreviewConfiguration: null,\n  emojiKeyboardConfiguration: null,\n  stickerKeyboardConfiguration: null,\n  createPollConfiguration: null,\n  actionSheetConfiguration: null\n};\nCometChatMessageComposer.propTypes = {\n  user: PropTypes.object,\n  group: PropTypes.object,\n  hideAttachment: PropTypes.bool,\n  attachmentIconURL: PropTypes.string,\n  stickerCloseIconURL: PropTypes.string,\n  placeholderText: PropTypes.string,\n  hideLiveReaction: PropTypes.bool,\n  liveReactionIconURL: PropTypes.string,\n  hideEmoji: PropTypes.bool,\n  emojiIconURL: PropTypes.string,\n  showSendButton: PropTypes.bool,\n  sendButtonIconURL: PropTypes.string,\n  onSendButtonClick: PropTypes.func,\n  messageTypes: PropTypes.array,\n  excludeMessageTypes: PropTypes.array,\n  enableTypingIndicator: PropTypes.bool,\n  enableSoundForMessages: PropTypes.bool,\n  customOutgoingMessageSound: PropTypes.string,\n  style: PropTypes.object,\n  messagePreviewConfiguration: PropTypes.object,\n  emojiKeyboardConfiguration: PropTypes.object,\n  stickerKeyboardConfiguration: PropTypes.object,\n  createPollConfiguration: PropTypes.object,\n  actionSheetConfiguration: PropTypes.object,\n  theme: PropTypes.object\n};\nexport { CometChatMessageComposer };\nvar _c, _c2;\n$RefreshReg$(_c, \"CometChatMessageComposer$React.forwardRef\");\n$RefreshReg$(_c2, \"CometChatMessageComposer\");","map":{"version":3,"names":["React","PropTypes","CometChat","CometChatActionSheet","CometChatSoundManager","CometChatLocalize","localize","CometChatPopover","ExtensionConstants","ExtensionURLs","CometChatTheme","MessageTypeConstants","MetadataConstants","ConversationOptionConstants","CometChatMessageEvents","CometChatCustomMessageTypes","getExtensionsData","CometChatEmojiKeyboard","CometChatStickerKeyboard","CometChatMessagePreview","messageConstants","CometChatCreatePoll","CometChatMessageTemplate","MessageComposerStyles","getUnixTimestamp","messageStatus","Hooks","chatComposerStyle","composerInputStyle","inputInnerStyle","messageInputStyle","stickyAttachButtonStyle","attchButtonIconStyle","inputStickyStyle","stickerBtnStyle","stickerBtnIconStyle","emojiButtonStyle","emojiBtnIconStyle","reactionBtnStyle","reactionBtnIconStyle","sendButtonStyle","sendBtnIconStyle","fileInputStyle","stickyButtonStyle","emojiKeyBoardStyle","actionSheetStyle","actionSheetPopoverStyle","stickerKeyboardStyle","emojiBoardPopoverStyle","createPollStyle","messagePreviewStyle","popoverForCreatePollStyle","MessagePreviewConfiguration","EmojiKeyboardConfiguration","CreatePollConfiguration","StickerKeyboardConfiguration","ActionSheetConfiguration","roundedPlus","insertEmoticon","sendBtn","closeIcon","heart","deleteIconURL","BaseStyles","CometChatMessageComposer","forwardRef","props","ref","chatWith","setChatWith","useState","chatWithId","setChatWithId","messageInput","setMessageInput","viewAttachButton","setViewAttachButton","viewSticker","setViewSticker","viewStickerTray","setViewStickerTray","viewActionSheet","setViewActionSheet","actionSheetItems","setActionSheetItems","viewCreatePoll","setViewCreatePoll","viewEmojiTray","setViewEmojiTray","messagePreview","setMessagePreview","viewInputField","setViewInputField","stickerTemplate","useRef","loggedInUser","isTyping","liveReactionTimeout","disabledState","messageInputRef","fileInputRef","chatRef","user","group","hideAttachment","attachmentIconURL","stickerCloseIconURL","placeholderText","hideLiveReaction","liveReactionIconURL","hideEmoji","emojiIconURL","showSendButton","sendButtonIconURL","onSendButtonClick","messageTypes","excludeMessageTypes","enableTypingIndicator","enableSoundForMessages","customOutgoingMessageSound","style","messagePreviewConfiguration","emojiKeyboardConfiguration","stickerKeyboardConfiguration","createPollConfiguration","actionSheetConfiguration","theme","_theme","useImperativeHandle","previewMessageForEdit","previewMessage","draftMessage","message","mode","edit","text","element","current","messageText","xssData","extensions","xssFilter","hasOwnProperty","sanitizedText","hasXSS","yes","sanitized_text","focus","textContent","pasteHtmlAtCaret","playAudio","play","Sound","outgoingMessage","closeMessagePreview","sendMessageOnEnter","event","keyCode","shiftKey","preventDefault","sendTextMessage","trim","length","editMessage","textMessage","TextMessage","setSender","setReceiver","setText","setSentAt","setMuid","String","emit","onMessageSent","status","inprogress","sendMessage","then","messageObject","success","catch","error","onMessageError","sendMediaMessage","messageType","mediaMessage","MediaMessage","setType","setMetadata","file","sendSticker","stickerMessage","customData","sticker_url","stickerUrl","sticker_name","stickerName","customMessage","CustomMessage","sticker","incrementUnreadCount","sendCustomMessage","endTyping","setId","id","editedMessage","onMessageEdit","startTyping","endTypingTimeout","typingMetadata","typingInterval","metadata","undefined","typingNotification","TypingIndicator","setTimeout","persist","clearTimeout","fileInputHandler","accept","click","audioInputHandler","imageInputHandler","videoInputHandler","fileInputChangeHandler","uploadedFile","target","files","fileNameType","type","split","reader","FileReader","addEventListener","newFile","File","result","name","image","video","audio","value","readAsArrayBuffer","closeCreatePoll","onPollSubmit","openCreatePoll","shareCollaborativeDocument","callExtension","document","post","receiver","receiverType","shareCollaborativeWhiteboard","whiteboard","handleInputEvent","elem","currentTarget","innerText","inputChangeHandler","toggleStickersTray","prevViewStickerOption","html","selectPastedContent","sel","range","chatWindow","window","getSelection","getRangeAt","rangeCount","deleteContents","el","createElement","frag","createDocumentFragment","node","lastNode","firstChild","appendChild","firstNode","insertNode","cloneRange","setStartAfter","setStartBefore","collapse","removeAllRanges","addRange","selection","originalRange","createRange","pasteHTML","setEndPoint","select","onEmojiSelect","emojiObject","attachmentClickHandler","old","actionSheet","emojiClickHandler","emojiTrayPreview","stickerClickHandler","actionCallback","shareLiveReaction","data","liveReaction","reaction","transientMessage","TransientMessage","sendTransientMessage","payload","onLiveReaction","attachOption","bind","_actionSheetConfiguration","actionSheetBoard","clientX","clientY","_createPollConfiguration","title","questionPlaceholderText","answerPlaceholderText","addAnswerText","answerHelpText","createPoll","closeIconURL","addAnswerIconURL","onClose","onCreatePoll","stickerButton","icon","_messagePreviewConfiguration","previewTray","messagePreviewTitle","messagePreviewSubtitle","onCloseClick","_stickerKeyboardConfiguration","stickerTray","emojiButton","_emojiKeyboardConfiguration","emojiBoard","onClick","liveReactionButton","sendButton","inputField","getDir","defaultProps","width","height","background","border","borderRadius","activeBackground","placeholderTextFont","placeholderTextColor","attachmentIconTint","sendButtonIconTint","inputBackground","inputTextFont","inputTextColor","emojiIconTint","stickerIconTint","stickerCloseIconTint","propTypes","object","bool","string","func","array"],"sources":["/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/cometchat-pro-react-ui-kit/src/components/Messages/CometChatMessageComposer/index.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CometChat } from \"@cometchat-pro/chat\";\n\nimport {\n  CometChatActionSheet,\n  CometChatSoundManager,\n  CometChatLocalize,\n  localize,\n  CometChatPopover,\n  ExtensionConstants,\n  ExtensionURLs,\n  CometChatTheme,\n  MessageTypeConstants,\n  MetadataConstants,\n  ConversationOptionConstants,\n} from \"../..\";\n\nimport {\n  CometChatMessageEvents,\n  CometChatCustomMessageTypes,\n  getExtensionsData,\n  CometChatEmojiKeyboard,\n  CometChatStickerKeyboard,\n  CometChatMessagePreview,\n  messageConstants,\n  CometChatCreatePoll,\n  CometChatMessageTemplate,\n  MessageComposerStyles,\n} from \"..\";\n\nimport { getUnixTimestamp } from \"../CometChatMessageHelper\";\nimport { messageStatus } from \"../CometChatMessageConstants\";\n\nimport { Hooks } from \"./hooks\";\n\nimport {\n  chatComposerStyle,\n  composerInputStyle,\n  inputInnerStyle,\n  messageInputStyle,\n  stickyAttachButtonStyle,\n  attchButtonIconStyle,\n  inputStickyStyle,\n  stickerBtnStyle,\n  stickerBtnIconStyle,\n  emojiButtonStyle,\n  emojiBtnIconStyle,\n  reactionBtnStyle,\n  reactionBtnIconStyle,\n  sendButtonStyle,\n  sendBtnIconStyle,\n  fileInputStyle,\n  stickyButtonStyle,\n  emojiKeyBoardStyle,\n  actionSheetStyle,\n  actionSheetPopoverStyle,\n  stickerKeyboardStyle,\n  emojiBoardPopoverStyle,\n  createPollStyle,\n  messagePreviewStyle,\n  popoverForCreatePollStyle,\n} from \"./style\";\n\nimport { MessagePreviewConfiguration } from \"../CometChatMessagePreview/MessagePreviewConfiguration\";\n\nimport { EmojiKeyboardConfiguration } from \"../CometChatEmojiKeyboard/EmojiKeyboardConfiguration\";\n\nimport { CreatePollConfiguration } from \"../CometChatCreatePoll/CreatePollConfiguration\";\n\nimport { StickerKeyboardConfiguration } from \"../CometChatStickerKeyboard/StickerKeyboardConfiguration\";\n\nimport { ActionSheetConfiguration } from \"../../Shared\";\n\nimport roundedPlus from \"./resources/add-circle-filled.svg\";\nimport insertEmoticon from \"./resources/emoji.svg\";\nimport sendBtn from \"./resources/send-message.svg\";\nimport closeIcon from \"./resources/close-circle.svg\";\nimport heart from \"./resources/heart.png\";\nimport deleteIconURL from \"./resources/delete.svg\";\nimport { BaseStyles } from \"../../Shared\";\n\n/**\n *\n * CometChatMessageComposer component part of messages component it's takes user input text,image,video etc,after pressing send button\n * it's append messages in message list, with additonal CometChat SDK conversation object.\n *\n * @version 1.0.0\n * @author CometChatTeam\n * @copyright Â© 2022 CometChat Inc.\n *\n */\nconst CometChatMessageComposer = React.forwardRef((props, ref) => {\n  const [chatWith, setChatWith] = React.useState(null);\n  const [chatWithId, setChatWithId] = React.useState(null);\n\n  const [messageInput, setMessageInput] = React.useState(\"\");\n\n  const [viewAttachButton, setViewAttachButton] = React.useState(false);\n\n  const [viewSticker, setViewSticker] = React.useState(false);\n  const [viewStickerTray, setViewStickerTray] = React.useState(null);\n\n  const [viewActionSheet, setViewActionSheet] = React.useState({});\n  const [actionSheetItems, setActionSheetItems] = React.useState([]);\n\n  const [viewCreatePoll, setViewCreatePoll] = React.useState(false);\n  const [viewEmojiTray, setViewEmojiTray] = React.useState({});\n\n  const [messagePreview, setMessagePreview] = React.useState(null);\n\n  const [viewInputField, setViewInputField] = React.useState(true);\n\n  const stickerTemplate = React.useRef(null);\n  const loggedInUser = React.useRef(null);\n  let isTyping = React.useRef(null);\n  let liveReactionTimeout = 0;\n  const disabledState = false;\n  const messageInputRef = React.useRef(null);\n  const fileInputRef = React.useRef(null);\n  const chatRef = React.useRef(chatWith);\n\n  const {\n    user,\n    group,\n    hideAttachment,\n    attachmentIconURL,\n    stickerCloseIconURL,\n    placeholderText,\n    hideLiveReaction,\n    liveReactionIconURL,\n    hideEmoji,\n    emojiIconURL,\n    showSendButton,\n    sendButtonIconURL,\n    onSendButtonClick,\n    messageTypes,\n    excludeMessageTypes,\n    enableTypingIndicator,\n    enableSoundForMessages,\n    customOutgoingMessageSound,\n    style,\n    messagePreviewConfiguration,\n    emojiKeyboardConfiguration,\n    stickerKeyboardConfiguration,\n    createPollConfiguration,\n    actionSheetConfiguration,\n    theme,\n  } = props;\n\n  const _theme = new CometChatTheme(theme ?? {});\n\n  /**,\n   * Event callbacks\n   */\n  React.useImperativeHandle(ref, () => ({\n    previewMessageForEdit: previewMessage,\n  }));\n\n  const draftMessage = () => {};\n\n  const previewMessage = (message) => {\n    setMessagePreview({\n      message: message,\n      mode: ConversationOptionConstants.edit,\n    });\n\n    setMessageInput(message.text);\n\n    const element = messageInputRef.current;\n    let messageText = message.text;\n\n    //xss extensions data\n    const xssData = getExtensionsData(\n      message,\n      MetadataConstants.extensions.xssFilter\n    );\n    if (\n      xssData &&\n      xssData.hasOwnProperty(ExtensionConstants.sanitizedText) &&\n      xssData.hasOwnProperty(ExtensionConstants.hasXSS) &&\n      xssData.hasXSS === ExtensionConstants.yes\n    ) {\n      messageText = xssData.sanitized_text;\n    }\n\n    element.focus();\n    element.textContent = \"\";\n    pasteHtmlAtCaret(messageText, false);\n  };\n\n  const playAudio = () => {\n    if (customOutgoingMessageSound) {\n      CometChatSoundManager.play(\n        CometChatSoundManager.Sound.outgoingMessage,\n        customOutgoingMessageSound\n      );\n    } else {\n      CometChatSoundManager.play(CometChatSoundManager.Sound.outgoingMessage);\n    }\n  };\n\n  const closeMessagePreview = () => {\n    setMessagePreview(null);\n    setMessageInput(\"\");\n    messageInputRef.current.textContent = \"\";\n  };\n\n  const sendMessageOnEnter = (event) => {\n    if (event.keyCode === 13 && !event.shiftKey) {\n      event.preventDefault();\n      sendTextMessage();\n    }\n  };\n\n  /** send text message */\n  const sendTextMessage = () => {\n    setViewEmojiTray(false);\n\n    if (!messageInput.trim().length) {\n      return false;\n    }\n\n    if (\n      messagePreview &&\n      messagePreview.mode === ConversationOptionConstants.edit\n    ) {\n      editMessage(messagePreview.message);\n      return false;\n    }\n\n    let textMessage = new CometChat.TextMessage(\n      chatWithId,\n      messageInput,\n      chatWith\n    );\n\n    textMessage.setSender(loggedInUser.current);\n    textMessage.setReceiver(chatWith);\n    textMessage.setText(messageInput);\n    textMessage.setSentAt(getUnixTimestamp());\n    textMessage.setMuid(String(getUnixTimestamp()));\n\n    CometChatMessageEvents.emit(CometChatMessageEvents.onMessageSent, {\n      message: textMessage,\n      status: messageStatus.inprogress,\n    });\n\n    if (enableSoundForMessages) playAudio();\n\n    setMessageInput(\"\");\n    messageInputRef.current.textContent = \"\";\n\n    CometChat.sendMessage(textMessage)\n      .then((message) => {\n        const messageObject = { ...message };\n        CometChatMessageEvents.emit(CometChatMessageEvents.onMessageSent, {\n          message: messageObject,\n          status: messageStatus.success,\n        });\n      })\n      .catch((error) => {\n        CometChatMessageEvents.emit(CometChatMessageEvents.onMessageError, {\n          message: textMessage,\n          error: error,\n        });\n      });\n\n    if (onSendButtonClick) {\n      onSendButtonClick();\n    }\n  };\n\n  /** send media message */\n  const sendMediaMessage = (messageInput, messageType) => {\n    setViewActionSheet(false);\n\n    let mediaMessage = new CometChat.MediaMessage(\n      chatWithId,\n      messageInput,\n      messageType,\n      chatWith\n    );\n\n    mediaMessage.setSender(loggedInUser.current);\n    mediaMessage.setReceiver(chatWith);\n    mediaMessage.setType(messageType);\n    mediaMessage.setMetadata({\n      [MetadataConstants.file]: messageInput,\n    });\n    mediaMessage.setSentAt(getUnixTimestamp());\n    mediaMessage.setMuid(String(getUnixTimestamp()));\n    CometChatMessageEvents.emit(CometChatMessageEvents.onMessageSent, {\n      message: mediaMessage,\n      status: messageStatus.inprogress,\n    });\n\n    if (enableSoundForMessages) playAudio();\n\n    CometChat.sendMessage(mediaMessage)\n      .then((message) => {\n        const messageObject = { ...message };\n        CometChatMessageEvents.emit(CometChatMessageEvents.onMessageSent, {\n          message: messageObject,\n          status: messageStatus.success,\n        });\n      })\n      .catch((error) => {\n        CometChatMessageEvents.emit(CometChatMessageEvents.onMessageError, {\n          message: mediaMessage,\n          error: error,\n        });\n      });\n  };\n\n  /** send sticker */\n  const sendSticker = (stickerMessage) => {\n    const customData = {\n      sticker_url: stickerMessage.stickerUrl,\n      sticker_name: stickerMessage.stickerName,\n    };\n    const customMessage = new CometChat.CustomMessage(\n      chatWithId,\n      chatWith,\n      CometChatCustomMessageTypes.sticker,\n      customData\n    );\n\n    customMessage.setSender(loggedInUser.current);\n    customMessage.setReceiver(chatWith);\n    customMessage.setMetadata({ incrementUnreadCount: true });\n    customMessage.setSentAt(getUnixTimestamp());\n    customMessage.setMuid(String(getUnixTimestamp()));\n\n    CometChatMessageEvents.emit(CometChatMessageEvents.onMessageSent, {\n      message: customMessage,\n      status: messageStatus.inprogress,\n    });\n\n    if (enableSoundForMessages) playAudio();\n\n    CometChat.sendCustomMessage(customMessage)\n      .then((message) => {\n        const messageObject = { ...message };\n        CometChatMessageEvents.emit(CometChatMessageEvents.onMessageSent, {\n          message: messageObject,\n          status: messageStatus.success,\n        });\n      })\n      .catch((error) => {\n        CometChatMessageEvents.emit(CometChatMessageEvents.onMessageError, {\n          message: customMessage,\n          error: error,\n        });\n      });\n  };\n\n  /** edit message */\n  const editMessage = (message) => {\n    endTyping(null, null);\n\n    let messageText = messageInput.trim();\n    let textMessage = new CometChat.TextMessage(\n      chatWithId,\n      messageText,\n      chatWith\n    );\n    textMessage.setId(messagePreview.message.id);\n\n    setMessageInput(\"\");\n    messageInputRef.current.textContent = \"\";\n\n    if (enableSoundForMessages) playAudio();\n\n    setMessagePreview(null);\n\n    CometChat.editMessage(textMessage)\n      .then((editedMessage) => {\n        CometChatMessageEvents.emit(CometChatMessageEvents.onMessageEdit, {\n          message: editedMessage,\n          status: messageStatus.success,\n        });\n      })\n      .catch((error) => {\n        CometChatMessageEvents.emit(CometChatMessageEvents.onMessageError, {\n          message: textMessage,\n          error: error,\n        });\n      });\n  };\n\n  const startTyping = (endTypingTimeout, typingMetadata) => {\n    //if typing is disabled\n    if (!enableTypingIndicator) {\n      return false;\n    }\n\n    //if typing is in progress\n    if (isTyping.current) {\n      return false;\n    }\n\n    let typingInterval = endTypingTimeout || 5000;\n    let metadata = typingMetadata || undefined;\n\n    let typingNotification = new CometChat.TypingIndicator(\n      chatWithId,\n      chatWith,\n      metadata\n    );\n    CometChat.startTyping(typingNotification);\n\n    isTyping.current = setTimeout(() => {\n      endTyping(null, typingMetadata);\n    }, typingInterval);\n  };\n\n  const endTyping = (event, typingMetadata) => {\n    if (event) {\n      event.persist();\n    }\n\n    if (!enableTypingIndicator) {\n      return false;\n    }\n\n    let metadata = typingMetadata || undefined;\n\n    let typingNotification = new CometChat.TypingIndicator(\n      chatWithId,\n      chatWith,\n      metadata\n    );\n    CometChat.endTyping(typingNotification);\n\n    clearTimeout(isTyping.current);\n    isTyping.current = null;\n  };\n\n  /**\n   *\n   * input media message handler\n   */\n  const fileInputHandler = () => {\n    setViewActionSheet(false);\n    if (!fileInputRef.current) {\n      return false;\n    }\n    fileInputRef.current.accept = \"application/*\";\n    fileInputRef.current.click();\n  };\n\n  const audioInputHandler = () => {\n    setViewActionSheet(false);\n    if (!fileInputRef.current) {\n      return false;\n    }\n    fileInputRef.current.accept = \"audio/*\";\n    fileInputRef.current.click();\n  };\n\n  const imageInputHandler = () => {\n    setViewActionSheet(false);\n    if (!fileInputRef.current) {\n      return false;\n    }\n    fileInputRef.current.accept = \"image/*\";\n    fileInputRef.current.click();\n  };\n\n  const videoInputHandler = () => {\n    setViewActionSheet(false);\n    if (!fileInputRef.current) {\n      return false;\n    }\n    fileInputRef.current.accept = \"video/*\";\n    fileInputRef.current.click();\n  };\n\n  /** fileInputChangeHandler */\n  const fileInputChangeHandler = (event) => {\n    setViewActionSheet(false);\n\n    const uploadedFile = event.target.files[\"0\"];\n    var fileNameType = uploadedFile.type.split(\"/\");\n\n    var reader = new FileReader();\n    reader.addEventListener(\n      \"load\",\n      (event) => {\n        const newFile = new File(\n          [reader.result],\n          uploadedFile.name,\n          uploadedFile\n        );\n\n        switch (fileNameType[0]) {\n          case \"image\":\n            sendMediaMessage(newFile, MessageTypeConstants.image);\n            break;\n          case \"video\":\n            sendMediaMessage(newFile, MessageTypeConstants.video);\n            break;\n          case \"audio\":\n            sendMediaMessage(newFile, MessageTypeConstants.audio);\n            break;\n          case \"file\":\n            sendMediaMessage(newFile, MessageTypeConstants.file);\n            break;\n          default:\n            sendMediaMessage(newFile, MessageTypeConstants.file);\n            break;\n        }\n        fileInputRef.current.value = \"\";\n      },\n      false\n    );\n\n    reader.readAsArrayBuffer(uploadedFile);\n  };\n\n  /** closeCreatePoll */\n  const closeCreatePoll = () => {\n    setViewCreatePoll(false);\n  };\n\n  /** onPollSubmit */\n  const onPollSubmit = () => {\n    setViewCreatePoll(false);\n  };\n\n  /** openCreatePoll  */\n  const openCreatePoll = () => {\n    setViewActionSheet(false);\n    setViewCreatePoll(true);\n  };\n\n  /** share collaborative document */\n  const shareCollaborativeDocument = () => {\n    setViewActionSheet(false);\n    CometChat.callExtension(\n      ExtensionConstants.document,\n      ExtensionConstants.post,\n      ExtensionURLs.document,\n      {\n        receiver: chatRef.current.chatWithId,\n        receiverType: chatRef.current.chatWith,\n      }\n    ).catch((error) => {\n      CometChatMessageEvents.emit(CometChatMessageEvents.onMessageError, error);\n    });\n  };\n\n  /** share collaborative whitevoard */\n  const shareCollaborativeWhiteboard = () => {\n    setViewActionSheet(false);\n    CometChat.callExtension(\n      ExtensionConstants.whiteboard,\n      ExtensionConstants.post,\n      ExtensionURLs.whiteboard,\n      {\n        receiver: chatRef.current.chatWithId,\n        receiverType: chatRef.current.chatWith,\n      }\n    ).catch((error) => {\n      CometChatMessageEvents.emit(CometChatMessageEvents.onMessageError, error);\n    });\n  };\n\n  /** handleInputEvent */\n  const handleInputEvent = (event) => {\n    startTyping();\n    const elem = event.currentTarget;\n    let messageInput = elem.textContent.trim();\n    if (!messageInput.length) {\n      event.currentTarget.textContent = messageInput;\n    }\n    setMessageInput(elem.innerText);\n  };\n\n  /** inputChangeHandler */\n  const inputChangeHandler = (event) => {\n    setTimeout(handleInputEvent(event), 500);\n  };\n\n  /** composer sticker iconClickHandler */\n  const toggleStickersTray = () => {\n    setViewStickerTray((prevViewStickerOption) => !prevViewStickerOption);\n  };\n\n  const pasteHtmlAtCaret = (html, selectPastedContent) => {\n    var sel, range;\n    const chatWindow = window;\n    if (chatWindow.getSelection) {\n      // IE9 and non-IE\n      sel = chatWindow.getSelection();\n      if (sel.getRangeAt && sel.rangeCount) {\n        range = sel.getRangeAt(0);\n        range.deleteContents();\n        // Range.createContextualFragment() would be useful here but is\n        // only relatively recently standardized and is not supported in\n        // some browsers (IE9, for one)\n        var el = document.createElement(\"div\");\n        el.innerText = html;\n        var frag = document.createDocumentFragment(),\n          node,\n          lastNode;\n        while ((node = el.firstChild)) {\n          lastNode = frag.appendChild(node);\n        }\n        var firstNode = frag.firstChild;\n        range.insertNode(frag);\n        if (lastNode) {\n          range = range.cloneRange();\n          range.setStartAfter(lastNode);\n          if (selectPastedContent) {\n            range.setStartBefore(firstNode);\n          } else {\n            range.collapse(true);\n          }\n          sel.removeAllRanges();\n          sel.addRange(range);\n        }\n      }\n    } else if ((sel = document.selection) && sel.type !== \"Control\") {\n      // IE < 9\n      var originalRange = sel.createRange();\n      originalRange.collapse(true);\n      sel.createRange().pasteHTML(html);\n      if (selectPastedContent) {\n        range = sel.createRange();\n        range.setEndPoint(\"StartToStart\", originalRange);\n        range.select();\n      }\n    }\n  };\n\n  /** select emoji from emojikeyboard */\n  const onEmojiSelect = (emojiObject) => {\n    const element = messageInputRef.current;\n    element.focus();\n    element.innerText = \"\";\n    pasteHtmlAtCaret(messageInput + emojiObject, false);\n    setMessageInput(element.innerText);\n  };\n\n  /** composer pluse button  onClickHandler */\n  const attachmentClickHandler = (event) => {\n    setViewActionSheet((old) => {\n      return { actionSheet: !old.actionSheet, event: event };\n    });\n  };\n\n  /** composer  emoji onClickHandler  */\n  const emojiClickHandler = (event) => {\n    setViewEmojiTray((old) => {\n      return { emojiTrayPreview: !old.emojiTrayPreview, event: event };\n    });\n  };\n\n  /** composer  sticker onClickHandler  */\n  const stickerClickHandler = () => {\n    if (stickerTemplate.current.actionCallback) {\n      stickerTemplate.current.actionCallback();\n    } else {\n      toggleStickersTray();\n    }\n  };\n\n  /** if already live reaction in progress */\n  const shareLiveReaction = () => {\n    if (liveReactionTimeout) {\n      return false;\n    }\n\n    /** fetching the metadata type from constants */\n    const data = {\n      type: MetadataConstants.liveReaction,\n      reaction: liveReactionIconURL || heart,\n    };\n\n    /*** send transient message */\n    let transientMessage = new CometChat.TransientMessage(\n      chatWithId,\n      chatWith,\n      data\n    );\n    CometChat.sendTransientMessage(transientMessage);\n\n    /** set timeout till the next share */\n    liveReactionTimeout = setTimeout(\n      clearTimeout(liveReactionTimeout),\n      messageConstants.liveReactionTimeout\n    );\n\n    /** emit event to share live reaction */\n    const payload = {\n      reaction: liveReactionIconURL || heart,\n    };\n    CometChatMessageEvents.emit(CometChatMessageEvents.onLiveReaction, payload);\n  };\n\n  /** attach/composr pluse icon */\n  const attachOption = () => {\n    return viewAttachButton ? (\n      <div\n        style={stickyAttachButtonStyle()}\n        className=\"attachment__icon\"\n        onClick={attachmentClickHandler.bind(this)}\n        title={localize(\"ATTACH\")}\n      >\n        <i style={attchButtonIconStyle(style, attachmentIconURL, _theme)}></i>\n      </div>\n    ) : null;\n  };\n\n  /**CreatePollConfiguration */\n  const _actionSheetConfiguration =\n    actionSheetConfiguration ?? new ActionSheetConfiguration({});\n\n  /**  action sheet render under tooltip */\n  const actionSheetBoard = () => {\n    return viewActionSheet.actionSheet ? (\n      <CometChatPopover\n        position=\"top\"\n        x={viewActionSheet?.event?.clientX}\n        y={viewActionSheet?.event?.clientY}\n        style={actionSheetPopoverStyle(_theme)}\n      >\n        <CometChatActionSheet\n          title={localize(\"ADD_TO_CHAT\")}\n          layoutModeIconURL={\n            _actionSheetConfiguration?.roundedPlus ?? roundedPlus\n          }\n          theme={_theme}\n          style={actionSheetStyle(_theme)}\n          actions={actionSheetItems}\n        />\n      </CometChatPopover>\n    ) : null;\n  };\n\n  /**CreatePollConfiguration */\n  const _createPollConfiguration =\n    createPollConfiguration ?? new CreatePollConfiguration({});\n\n  const title = localize(\"CREATE_POLL\");\n  const questionPlaceholderText = localize(\"QUESTION\");\n  const answerPlaceholderText = localize(\"ANSWER\");\n  const addAnswerText = localize(\"ADD_ANSWER\");\n  const answerHelpText = localize(\"SET_THE_ANSWERS\");\n\n  /** createpoll */\n  const createPoll = () => {\n    return viewCreatePoll ? (\n      <CometChatPopover\n        withBackDrop={viewCreatePoll ? true : false}\n        style={popoverForCreatePollStyle(_theme, _createPollConfiguration)}\n      >\n        <CometChatCreatePoll\n          closeIconURL={_createPollConfiguration.closeIconURL || closeIcon}\n          title={title}\n          addAnswerIconURL={\n            _createPollConfiguration.addAnswerIconURL || roundedPlus\n          }\n          createPollButtonText={localize(\"SEND\")}\n          deleteIconURL={\n            _createPollConfiguration.deleteIconURL || deleteIconURL\n          }\n          defaultAnswers={2}\n          theme={_theme}\n          style={createPollStyle(_theme, _createPollConfiguration)}\n          questionPlaceholderText={questionPlaceholderText}\n          addAnswerText={addAnswerText}\n          answerPlaceholderText={answerPlaceholderText}\n          answerHelpText={answerHelpText}\n          user={user}\n          group={group}\n          onClose={_createPollConfiguration.onClose || closeCreatePoll}\n          onCreatePoll={_createPollConfiguration.onCreatePoll || onPollSubmit}\n        />\n      </CometChatPopover>\n    ) : null;\n  };\n\n  /** sticker button */\n  const stickerButton = () => {\n    return viewSticker ? (\n      <div\n        title={localize(\"STICKER\")}\n        style={stickerBtnStyle()}\n        className=\"button__sticker\"\n        onClick={stickerClickHandler}\n      >\n        <i\n          style={stickerBtnIconStyle(\n            style,\n            viewStickerTray\n              ? stickerCloseIconURL\n              : stickerTemplate?.current?.icon,\n            _theme\n          )}\n        ></i>\n      </div>\n    ) : null;\n  };\n\n  /** messagePreviewConfiguration */\n\n  const _messagePreviewConfiguration =\n    messagePreviewConfiguration || new MessagePreviewConfiguration({});\n\n  /** message preview  */\n  const previewTray = () => {\n    return messagePreview ? (\n      <CometChatMessagePreview\n        messagePreviewTitle={\n          _messagePreviewConfiguration.messagePreviewTitle ||\n          localize(\"MESSAGE_EDIT\")\n        }\n        messagePreviewSubtitle={\n          _messagePreviewConfiguration.messagePreviewSubtitle ||\n          messagePreview?.message?.text\n        }\n        closeIconURL={_messagePreviewConfiguration.closeIconURL || closeIcon}\n        onCloseClick={\n          _messagePreviewConfiguration.onCloseClick ||\n          closeMessagePreview.bind(this)\n        }\n        theme={_theme}\n        style={messagePreviewStyle(_theme, _messagePreviewConfiguration)}\n      />\n    ) : null;\n  };\n\n  /**StickerKeyboardConfiguration */\n  const _stickerKeyboardConfiguration =\n    stickerKeyboardConfiguration ?? new StickerKeyboardConfiguration({});\n\n  /** sticker board */\n  const stickerTray = () => {\n    return viewStickerTray ? (\n      <CometChatStickerKeyboard\n        onClick={sendSticker.bind(this)}\n        onClose={_stickerKeyboardConfiguration.onClose || toggleStickersTray}\n        emptyText={localize(\"NO_STICKERS_FOUND\")}\n        errorText={localize(\"SOMETHING_WRONG\")}\n        loadingText={localize(\"LOADING\")}\n        theme={_theme}\n        style={stickerKeyboardStyle(_theme, _stickerKeyboardConfiguration)}\n      />\n    ) : null;\n  };\n\n  /** emoji icon */\n  const emojiButton = () => {\n    return !hideEmoji ? (\n      <div\n        title={localize(\"EMOJI\")}\n        style={emojiButtonStyle()}\n        className=\"button__emoji\"\n        onClick={emojiClickHandler.bind(this)}\n      >\n        <i style={emojiBtnIconStyle(style, emojiIconURL, _theme)}></i>\n      </div>\n    ) : null;\n  };\n\n  /** EmojiKeyboardConfiguration */\n  const _emojiKeyboardConfiguration =\n    emojiKeyboardConfiguration || new EmojiKeyboardConfiguration({});\n\n  /** emoji board */\n  const emojiBoard = () => {\n    if (viewEmojiTray.emojiTrayPreview) {\n      return (\n        <CometChatPopover\n          position=\"top\"\n          x={viewEmojiTray?.event?.clientX}\n          y={viewEmojiTray?.event?.clientY}\n          style={emojiBoardPopoverStyle(_theme, _emojiKeyboardConfiguration)}\n        >\n          <CometChatEmojiKeyboard\n            theme={_theme}\n            style={emojiKeyBoardStyle(_theme, _emojiKeyboardConfiguration)}\n            onClick={\n              _emojiKeyboardConfiguration?.onClick || onEmojiSelect.bind(this)\n            }\n          />\n        </CometChatPopover>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  /** live reaction button */\n  const liveReactionButton = () => {\n    if (!hideLiveReaction && !messageInputRef?.current?.innerText) {\n      return (\n        <div\n          style={reactionBtnStyle()}\n          className=\"button__reactions\"\n          onClick={shareLiveReaction.bind(this)}\n        >\n          <img\n            src={liveReactionIconURL}\n            alt={liveReactionIconURL}\n            title={localize(\"LIVE_REACTION\")}\n            style={reactionBtnIconStyle()}\n          />\n        </div>\n      );\n    }\n    return null;\n  };\n\n  /** send button */\n  const sendButton = () => {\n    return (messageInput?.length && showSendButton) || hideLiveReaction ? (\n      <div\n        title={localize(\"SEND_MESSAGE\")}\n        style={sendButtonStyle()}\n        className=\"button__send\"\n        onClick={sendTextMessage}\n      >\n        <i\n          style={sendBtnIconStyle(\n            style,\n            sendButtonIconURL,\n            _theme,\n            messageInput,\n            isTyping\n          )}\n        ></i>\n      </div>\n    ) : null;\n  };\n\n  /**message input field*/\n  const inputField = () => {\n    return viewInputField ? (\n      <div\n        style={messageInputStyle(style, disabledState, _theme)}\n        className=\"input__message-input\"\n        contentEditable=\"true\"\n        placeholder={placeholderText}\n        dir={CometChatLocalize.getDir()}\n        onInput={inputChangeHandler}\n        onBlur={endTyping.bind(this)}\n        onKeyDown={sendMessageOnEnter}\n        ref={messageInputRef}\n      ></div>\n    ) : null;\n  };\n\n  Hooks(\n    props,\n    loggedInUser,\n    setChatWith,\n    setChatWithId,\n    chatRef,\n    setViewSticker,\n    stickerTemplate,\n    setActionSheetItems,\n    setViewInputField,\n    setViewAttachButton,\n    openCreatePoll,\n    fileInputHandler,\n    videoInputHandler,\n    imageInputHandler,\n    audioInputHandler,\n    shareCollaborativeDocument,\n    shareCollaborativeWhiteboard,\n    sendSticker\n  );\n\n  return (\n    <div style={chatComposerStyle(style, _theme)} className=\"chat__composer\">\n      {previewTray()}\n      {stickerTray()}\n      {emojiBoard()}\n      {actionSheetBoard()}\n      <input\n        type=\"file\"\n        ref={fileInputRef}\n        style={fileInputStyle()}\n        onChange={fileInputChangeHandler}\n      />\n      <div style={composerInputStyle(style)} className=\"composer__input\">\n        <div\n          tabIndex=\"-1\"\n          style={inputInnerStyle(style, _theme)}\n          className=\"input__inner\"\n        >\n          {inputField()}\n\n          <div\n            style={inputStickyStyle(disabledState, attachOption(), _theme)}\n            className=\"input__sticky\"\n          >\n            {attachOption()}\n            <div className=\"input__sticky__buttons\" style={stickyButtonStyle()}>\n              {stickerButton()}\n              {emojiButton()}\n              {liveReactionButton()}\n              {sendButton()}\n            </div>\n          </div>\n        </div>\n      </div>\n      {createPoll()}\n    </div>\n  );\n});\n\nCometChatMessageComposer.defaultProps = {\n  user: null,\n  group: null,\n  style: {\n    ...new BaseStyles({\n      width: \"100%\",\n      height: \"auto\",\n      background: \"rgb(255, 255, 255)\",\n      border: \"1px solid rgb(234, 234, 234)\",\n      borderRadius: \"8px\",\n      activeBackground: \"\",\n    }),\n    placeholderTextFont: \"400 15px Inter, sans-serif\",\n    placeholderTextColor: \"rgba(20, 20, 20,0.6)\",\n    attachmentIconTint: \"rgba(20, 20, 20, 0.46)\",\n    sendButtonIconTint: \"#39f\",\n    inputBackground: \"\",\n    inputTextFont: \"\",\n    inputTextColor: \"\",\n    emojiIconTint: \"rgba(20, 20, 20, 0.46)\",\n    stickerIconTint: \"rgba(20, 20, 20, 0.46)\",\n    stickerCloseIconTint: \"\",\n  },\n  attachmentIconURL: roundedPlus,\n  stickerCloseIconURL: \"\",\n  placeholderText: localize(\"ENTER_YOUR_MESSAGE_HERE\"),\n  hideAttachment: false,\n  liveReactionIconURL: heart,\n  hideLiveReaction: false,\n  hideEmoji: false,\n  emojiIconURL: insertEmoticon,\n  showSendButton: true,\n  sendButtonIconURL: sendBtn,\n  messageTypes: null,\n  excludeMessageTypes: null,\n  onSendButtonClick: null,\n  enableTypingIndicator: true,\n  enableSoundForMessages: true,\n  customOutgoingMessageSound: null,\n  messagePreviewConfiguration: null,\n  emojiKeyboardConfiguration: null,\n  stickerKeyboardConfiguration: null,\n  createPollConfiguration: null,\n  actionSheetConfiguration: null,\n};\n\nCometChatMessageComposer.propTypes = {\n  user: PropTypes.object,\n  group: PropTypes.object,\n  hideAttachment: PropTypes.bool,\n  attachmentIconURL: PropTypes.string,\n  stickerCloseIconURL: PropTypes.string,\n  placeholderText: PropTypes.string,\n  hideLiveReaction: PropTypes.bool,\n  liveReactionIconURL: PropTypes.string,\n  hideEmoji: PropTypes.bool,\n  emojiIconURL: PropTypes.string,\n  showSendButton: PropTypes.bool,\n  sendButtonIconURL: PropTypes.string,\n  onSendButtonClick: PropTypes.func,\n  messageTypes: PropTypes.array,\n  excludeMessageTypes: PropTypes.array,\n  enableTypingIndicator: PropTypes.bool,\n  enableSoundForMessages: PropTypes.bool,\n  customOutgoingMessageSound: PropTypes.string,\n  style: PropTypes.object,\n  messagePreviewConfiguration: PropTypes.object,\n  emojiKeyboardConfiguration: PropTypes.object,\n  stickerKeyboardConfiguration: PropTypes.object,\n  createPollConfiguration: PropTypes.object,\n  actionSheetConfiguration: PropTypes.object,\n  theme: PropTypes.object,\n};\n\nexport { CometChatMessageComposer };\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,SAAS,QAAQ,qBAAqB;AAE/C,SACEC,oBAAoB,EACpBC,qBAAqB,EACrBC,iBAAiB,EACjBC,QAAQ,EACRC,gBAAgB,EAChBC,kBAAkB,EAClBC,aAAa,EACbC,cAAc,EACdC,oBAAoB,EACpBC,iBAAiB,EACjBC,2BAA2B,QACtB,OAAO;AAEd,SACEC,sBAAsB,EACtBC,2BAA2B,EAC3BC,iBAAiB,EACjBC,sBAAsB,EACtBC,wBAAwB,EACxBC,uBAAuB,EACvBC,gBAAgB,EAChBC,mBAAmB,EACnBC,wBAAwB,EACxBC,qBAAqB,QAChB,IAAI;AAEX,SAASC,gBAAgB,QAAQ,2BAA2B;AAC5D,SAASC,aAAa,QAAQ,8BAA8B;AAE5D,SAASC,KAAK,QAAQ,SAAS;AAE/B,SACEC,iBAAiB,EACjBC,kBAAkB,EAClBC,eAAe,EACfC,iBAAiB,EACjBC,uBAAuB,EACvBC,oBAAoB,EACpBC,gBAAgB,EAChBC,eAAe,EACfC,mBAAmB,EACnBC,gBAAgB,EAChBC,iBAAiB,EACjBC,gBAAgB,EAChBC,oBAAoB,EACpBC,eAAe,EACfC,gBAAgB,EAChBC,cAAc,EACdC,iBAAiB,EACjBC,kBAAkB,EAClBC,gBAAgB,EAChBC,uBAAuB,EACvBC,oBAAoB,EACpBC,sBAAsB,EACtBC,eAAe,EACfC,mBAAmB,EACnBC,yBAAyB,QACpB,SAAS;AAEhB,SAASC,2BAA2B,QAAQ,wDAAwD;AAEpG,SAASC,0BAA0B,QAAQ,sDAAsD;AAEjG,SAASC,uBAAuB,QAAQ,gDAAgD;AAExF,SAASC,4BAA4B,QAAQ,0DAA0D;AAEvG,SAASC,wBAAwB,QAAQ,cAAc;AAEvD,OAAOC,WAAW,MAAM,mCAAmC;AAC3D,OAAOC,cAAc,MAAM,uBAAuB;AAClD,OAAOC,OAAO,MAAM,8BAA8B;AAClD,OAAOC,SAAS,MAAM,8BAA8B;AACpD,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,aAAa,MAAM,wBAAwB;AAClD,SAASC,UAAU,QAAQ,cAAc;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAUA,MAAMC,wBAAwB,iCAAGhE,KAAK,CAACiE,UAAU,SAAC,CAACC,KAAK,EAAEC,GAAG,KAAK;EAAA;EAChE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGrE,KAAK,CAACsE,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGxE,KAAK,CAACsE,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAG1E,KAAK,CAACsE,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAM,CAACK,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG5E,KAAK,CAACsE,QAAQ,CAAC,KAAK,CAAC;EAErE,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAG9E,KAAK,CAACsE,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGhF,KAAK,CAACsE,QAAQ,CAAC,IAAI,CAAC;EAElE,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGlF,KAAK,CAACsE,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChE,MAAM,CAACa,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGpF,KAAK,CAACsE,QAAQ,CAAC,EAAE,CAAC;EAElE,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGtF,KAAK,CAACsE,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGxF,KAAK,CAACsE,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE5D,MAAM,CAACmB,cAAc,EAAEC,iBAAiB,CAAC,GAAG1F,KAAK,CAACsE,QAAQ,CAAC,IAAI,CAAC;EAEhE,MAAM,CAACqB,cAAc,EAAEC,iBAAiB,CAAC,GAAG5F,KAAK,CAACsE,QAAQ,CAAC,IAAI,CAAC;EAEhE,MAAMuB,eAAe,GAAG7F,KAAK,CAAC8F,MAAM,CAAC,IAAI,CAAC;EAC1C,MAAMC,YAAY,GAAG/F,KAAK,CAAC8F,MAAM,CAAC,IAAI,CAAC;EACvC,IAAIE,QAAQ,GAAGhG,KAAK,CAAC8F,MAAM,CAAC,IAAI,CAAC;EACjC,IAAIG,mBAAmB,GAAG,CAAC;EAC3B,MAAMC,aAAa,GAAG,KAAK;EAC3B,MAAMC,eAAe,GAAGnG,KAAK,CAAC8F,MAAM,CAAC,IAAI,CAAC;EAC1C,MAAMM,YAAY,GAAGpG,KAAK,CAAC8F,MAAM,CAAC,IAAI,CAAC;EACvC,MAAMO,OAAO,GAAGrG,KAAK,CAAC8F,MAAM,CAAC1B,QAAQ,CAAC;EAEtC,MAAM;IACJkC,IAAI;IACJC,KAAK;IACLC,cAAc;IACdC,iBAAiB;IACjBC,mBAAmB;IACnBC,eAAe;IACfC,gBAAgB;IAChBC,mBAAmB;IACnBC,SAAS;IACTC,YAAY;IACZC,cAAc;IACdC,iBAAiB;IACjBC,iBAAiB;IACjBC,YAAY;IACZC,mBAAmB;IACnBC,qBAAqB;IACrBC,sBAAsB;IACtBC,0BAA0B;IAC1BC,KAAK;IACLC,2BAA2B;IAC3BC,0BAA0B;IAC1BC,4BAA4B;IAC5BC,uBAAuB;IACvBC,wBAAwB;IACxBC;EACF,CAAC,GAAG5D,KAAK;EAET,MAAM6D,MAAM,GAAG,IAAIrH,cAAc,CAACoH,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI,CAAC,CAAC,CAAC;;EAE9C;AACF;AACA;EACE9H,KAAK,CAACgI,mBAAmB,CAAC7D,GAAG,EAAE,OAAO;IACpC8D,qBAAqB,EAAEC;EACzB,CAAC,CAAC,CAAC;EAEH,MAAMC,YAAY,GAAG,MAAM,CAAC,CAAC;EAE7B,MAAMD,cAAc,GAAIE,OAAO,IAAK;IAClC1C,iBAAiB,CAAC;MAChB0C,OAAO,EAAEA,OAAO;MAChBC,IAAI,EAAExH,2BAA2B,CAACyH;IACpC,CAAC,CAAC;IAEF5D,eAAe,CAAC0D,OAAO,CAACG,IAAI,CAAC;IAE7B,MAAMC,OAAO,GAAGrC,eAAe,CAACsC,OAAO;IACvC,IAAIC,WAAW,GAAGN,OAAO,CAACG,IAAI;;IAE9B;IACA,MAAMI,OAAO,GAAG3H,iBAAiB,CAC/BoH,OAAO,EACPxH,iBAAiB,CAACgI,UAAU,CAACC,SAAS,CACvC;IACD,IACEF,OAAO,IACPA,OAAO,CAACG,cAAc,CAACtI,kBAAkB,CAACuI,aAAa,CAAC,IACxDJ,OAAO,CAACG,cAAc,CAACtI,kBAAkB,CAACwI,MAAM,CAAC,IACjDL,OAAO,CAACK,MAAM,KAAKxI,kBAAkB,CAACyI,GAAG,EACzC;MACAP,WAAW,GAAGC,OAAO,CAACO,cAAc;IACtC;IAEAV,OAAO,CAACW,KAAK,EAAE;IACfX,OAAO,CAACY,WAAW,GAAG,EAAE;IACxBC,gBAAgB,CAACX,WAAW,EAAE,KAAK,CAAC;EACtC,CAAC;EAED,MAAMY,SAAS,GAAG,MAAM;IACtB,IAAI/B,0BAA0B,EAAE;MAC9BnH,qBAAqB,CAACmJ,IAAI,CACxBnJ,qBAAqB,CAACoJ,KAAK,CAACC,eAAe,EAC3ClC,0BAA0B,CAC3B;IACH,CAAC,MAAM;MACLnH,qBAAqB,CAACmJ,IAAI,CAACnJ,qBAAqB,CAACoJ,KAAK,CAACC,eAAe,CAAC;IACzE;EACF,CAAC;EAED,MAAMC,mBAAmB,GAAG,MAAM;IAChChE,iBAAiB,CAAC,IAAI,CAAC;IACvBhB,eAAe,CAAC,EAAE,CAAC;IACnByB,eAAe,CAACsC,OAAO,CAACW,WAAW,GAAG,EAAE;EAC1C,CAAC;EAED,MAAMO,kBAAkB,GAAIC,KAAK,IAAK;IACpC,IAAIA,KAAK,CAACC,OAAO,KAAK,EAAE,IAAI,CAACD,KAAK,CAACE,QAAQ,EAAE;MAC3CF,KAAK,CAACG,cAAc,EAAE;MACtBC,eAAe,EAAE;IACnB;EACF,CAAC;;EAED;EACA,MAAMA,eAAe,GAAG,MAAM;IAC5BxE,gBAAgB,CAAC,KAAK,CAAC;IAEvB,IAAI,CAACf,YAAY,CAACwF,IAAI,EAAE,CAACC,MAAM,EAAE;MAC/B,OAAO,KAAK;IACd;IAEA,IACEzE,cAAc,IACdA,cAAc,CAAC4C,IAAI,KAAKxH,2BAA2B,CAACyH,IAAI,EACxD;MACA6B,WAAW,CAAC1E,cAAc,CAAC2C,OAAO,CAAC;MACnC,OAAO,KAAK;IACd;IAEA,IAAIgC,WAAW,GAAG,IAAIlK,SAAS,CAACmK,WAAW,CACzC9F,UAAU,EACVE,YAAY,EACZL,QAAQ,CACT;IAEDgG,WAAW,CAACE,SAAS,CAACvE,YAAY,CAAC0C,OAAO,CAAC;IAC3C2B,WAAW,CAACG,WAAW,CAACnG,QAAQ,CAAC;IACjCgG,WAAW,CAACI,OAAO,CAAC/F,YAAY,CAAC;IACjC2F,WAAW,CAACK,SAAS,CAACjJ,gBAAgB,EAAE,CAAC;IACzC4I,WAAW,CAACM,OAAO,CAACC,MAAM,CAACnJ,gBAAgB,EAAE,CAAC,CAAC;IAE/CV,sBAAsB,CAAC8J,IAAI,CAAC9J,sBAAsB,CAAC+J,aAAa,EAAE;MAChEzC,OAAO,EAAEgC,WAAW;MACpBU,MAAM,EAAErJ,aAAa,CAACsJ;IACxB,CAAC,CAAC;IAEF,IAAIzD,sBAAsB,EAAEgC,SAAS,EAAE;IAEvC5E,eAAe,CAAC,EAAE,CAAC;IACnByB,eAAe,CAACsC,OAAO,CAACW,WAAW,GAAG,EAAE;IAExClJ,SAAS,CAAC8K,WAAW,CAACZ,WAAW,CAAC,CAC/Ba,IAAI,CAAE7C,OAAO,IAAK;MACjB,MAAM8C,aAAa,GAAG;QAAE,GAAG9C;MAAQ,CAAC;MACpCtH,sBAAsB,CAAC8J,IAAI,CAAC9J,sBAAsB,CAAC+J,aAAa,EAAE;QAChEzC,OAAO,EAAE8C,aAAa;QACtBJ,MAAM,EAAErJ,aAAa,CAAC0J;MACxB,CAAC,CAAC;IACJ,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBvK,sBAAsB,CAAC8J,IAAI,CAAC9J,sBAAsB,CAACwK,cAAc,EAAE;QACjElD,OAAO,EAAEgC,WAAW;QACpBiB,KAAK,EAAEA;MACT,CAAC,CAAC;IACJ,CAAC,CAAC;IAEJ,IAAInE,iBAAiB,EAAE;MACrBA,iBAAiB,EAAE;IACrB;EACF,CAAC;;EAED;EACA,MAAMqE,gBAAgB,GAAG,CAAC9G,YAAY,EAAE+G,WAAW,KAAK;IACtDtG,kBAAkB,CAAC,KAAK,CAAC;IAEzB,IAAIuG,YAAY,GAAG,IAAIvL,SAAS,CAACwL,YAAY,CAC3CnH,UAAU,EACVE,YAAY,EACZ+G,WAAW,EACXpH,QAAQ,CACT;IAEDqH,YAAY,CAACnB,SAAS,CAACvE,YAAY,CAAC0C,OAAO,CAAC;IAC5CgD,YAAY,CAAClB,WAAW,CAACnG,QAAQ,CAAC;IAClCqH,YAAY,CAACE,OAAO,CAACH,WAAW,CAAC;IACjCC,YAAY,CAACG,WAAW,CAAC;MACvB,CAAChL,iBAAiB,CAACiL,IAAI,GAAGpH;IAC5B,CAAC,CAAC;IACFgH,YAAY,CAAChB,SAAS,CAACjJ,gBAAgB,EAAE,CAAC;IAC1CiK,YAAY,CAACf,OAAO,CAACC,MAAM,CAACnJ,gBAAgB,EAAE,CAAC,CAAC;IAChDV,sBAAsB,CAAC8J,IAAI,CAAC9J,sBAAsB,CAAC+J,aAAa,EAAE;MAChEzC,OAAO,EAAEqD,YAAY;MACrBX,MAAM,EAAErJ,aAAa,CAACsJ;IACxB,CAAC,CAAC;IAEF,IAAIzD,sBAAsB,EAAEgC,SAAS,EAAE;IAEvCpJ,SAAS,CAAC8K,WAAW,CAACS,YAAY,CAAC,CAChCR,IAAI,CAAE7C,OAAO,IAAK;MACjB,MAAM8C,aAAa,GAAG;QAAE,GAAG9C;MAAQ,CAAC;MACpCtH,sBAAsB,CAAC8J,IAAI,CAAC9J,sBAAsB,CAAC+J,aAAa,EAAE;QAChEzC,OAAO,EAAE8C,aAAa;QACtBJ,MAAM,EAAErJ,aAAa,CAAC0J;MACxB,CAAC,CAAC;IACJ,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBvK,sBAAsB,CAAC8J,IAAI,CAAC9J,sBAAsB,CAACwK,cAAc,EAAE;QACjElD,OAAO,EAAEqD,YAAY;QACrBJ,KAAK,EAAEA;MACT,CAAC,CAAC;IACJ,CAAC,CAAC;EACN,CAAC;;EAED;EACA,MAAMS,WAAW,GAAIC,cAAc,IAAK;IACtC,MAAMC,UAAU,GAAG;MACjBC,WAAW,EAAEF,cAAc,CAACG,UAAU;MACtCC,YAAY,EAAEJ,cAAc,CAACK;IAC/B,CAAC;IACD,MAAMC,aAAa,GAAG,IAAInM,SAAS,CAACoM,aAAa,CAC/C/H,UAAU,EACVH,QAAQ,EACRrD,2BAA2B,CAACwL,OAAO,EACnCP,UAAU,CACX;IAEDK,aAAa,CAAC/B,SAAS,CAACvE,YAAY,CAAC0C,OAAO,CAAC;IAC7C4D,aAAa,CAAC9B,WAAW,CAACnG,QAAQ,CAAC;IACnCiI,aAAa,CAACT,WAAW,CAAC;MAAEY,oBAAoB,EAAE;IAAK,CAAC,CAAC;IACzDH,aAAa,CAAC5B,SAAS,CAACjJ,gBAAgB,EAAE,CAAC;IAC3C6K,aAAa,CAAC3B,OAAO,CAACC,MAAM,CAACnJ,gBAAgB,EAAE,CAAC,CAAC;IAEjDV,sBAAsB,CAAC8J,IAAI,CAAC9J,sBAAsB,CAAC+J,aAAa,EAAE;MAChEzC,OAAO,EAAEiE,aAAa;MACtBvB,MAAM,EAAErJ,aAAa,CAACsJ;IACxB,CAAC,CAAC;IAEF,IAAIzD,sBAAsB,EAAEgC,SAAS,EAAE;IAEvCpJ,SAAS,CAACuM,iBAAiB,CAACJ,aAAa,CAAC,CACvCpB,IAAI,CAAE7C,OAAO,IAAK;MACjB,MAAM8C,aAAa,GAAG;QAAE,GAAG9C;MAAQ,CAAC;MACpCtH,sBAAsB,CAAC8J,IAAI,CAAC9J,sBAAsB,CAAC+J,aAAa,EAAE;QAChEzC,OAAO,EAAE8C,aAAa;QACtBJ,MAAM,EAAErJ,aAAa,CAAC0J;MACxB,CAAC,CAAC;IACJ,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBvK,sBAAsB,CAAC8J,IAAI,CAAC9J,sBAAsB,CAACwK,cAAc,EAAE;QACjElD,OAAO,EAAEiE,aAAa;QACtBhB,KAAK,EAAEA;MACT,CAAC,CAAC;IACJ,CAAC,CAAC;EACN,CAAC;;EAED;EACA,MAAMlB,WAAW,GAAI/B,OAAO,IAAK;IAC/BsE,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC;IAErB,IAAIhE,WAAW,GAAGjE,YAAY,CAACwF,IAAI,EAAE;IACrC,IAAIG,WAAW,GAAG,IAAIlK,SAAS,CAACmK,WAAW,CACzC9F,UAAU,EACVmE,WAAW,EACXtE,QAAQ,CACT;IACDgG,WAAW,CAACuC,KAAK,CAAClH,cAAc,CAAC2C,OAAO,CAACwE,EAAE,CAAC;IAE5ClI,eAAe,CAAC,EAAE,CAAC;IACnByB,eAAe,CAACsC,OAAO,CAACW,WAAW,GAAG,EAAE;IAExC,IAAI9B,sBAAsB,EAAEgC,SAAS,EAAE;IAEvC5D,iBAAiB,CAAC,IAAI,CAAC;IAEvBxF,SAAS,CAACiK,WAAW,CAACC,WAAW,CAAC,CAC/Ba,IAAI,CAAE4B,aAAa,IAAK;MACvB/L,sBAAsB,CAAC8J,IAAI,CAAC9J,sBAAsB,CAACgM,aAAa,EAAE;QAChE1E,OAAO,EAAEyE,aAAa;QACtB/B,MAAM,EAAErJ,aAAa,CAAC0J;MACxB,CAAC,CAAC;IACJ,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBvK,sBAAsB,CAAC8J,IAAI,CAAC9J,sBAAsB,CAACwK,cAAc,EAAE;QACjElD,OAAO,EAAEgC,WAAW;QACpBiB,KAAK,EAAEA;MACT,CAAC,CAAC;IACJ,CAAC,CAAC;EACN,CAAC;EAED,MAAM0B,WAAW,GAAG,CAACC,gBAAgB,EAAEC,cAAc,KAAK;IACxD;IACA,IAAI,CAAC5F,qBAAqB,EAAE;MAC1B,OAAO,KAAK;IACd;;IAEA;IACA,IAAIrB,QAAQ,CAACyC,OAAO,EAAE;MACpB,OAAO,KAAK;IACd;IAEA,IAAIyE,cAAc,GAAGF,gBAAgB,IAAI,IAAI;IAC7C,IAAIG,QAAQ,GAAGF,cAAc,IAAIG,SAAS;IAE1C,IAAIC,kBAAkB,GAAG,IAAInN,SAAS,CAACoN,eAAe,CACpD/I,UAAU,EACVH,QAAQ,EACR+I,QAAQ,CACT;IACDjN,SAAS,CAAC6M,WAAW,CAACM,kBAAkB,CAAC;IAEzCrH,QAAQ,CAACyC,OAAO,GAAG8E,UAAU,CAAC,MAAM;MAClCb,SAAS,CAAC,IAAI,EAAEO,cAAc,CAAC;IACjC,CAAC,EAAEC,cAAc,CAAC;EACpB,CAAC;EAED,MAAMR,SAAS,GAAG,CAAC9C,KAAK,EAAEqD,cAAc,KAAK;IAC3C,IAAIrD,KAAK,EAAE;MACTA,KAAK,CAAC4D,OAAO,EAAE;IACjB;IAEA,IAAI,CAACnG,qBAAqB,EAAE;MAC1B,OAAO,KAAK;IACd;IAEA,IAAI8F,QAAQ,GAAGF,cAAc,IAAIG,SAAS;IAE1C,IAAIC,kBAAkB,GAAG,IAAInN,SAAS,CAACoN,eAAe,CACpD/I,UAAU,EACVH,QAAQ,EACR+I,QAAQ,CACT;IACDjN,SAAS,CAACwM,SAAS,CAACW,kBAAkB,CAAC;IAEvCI,YAAY,CAACzH,QAAQ,CAACyC,OAAO,CAAC;IAC9BzC,QAAQ,CAACyC,OAAO,GAAG,IAAI;EACzB,CAAC;;EAED;AACF;AACA;AACA;EACE,MAAMiF,gBAAgB,GAAG,MAAM;IAC7BxI,kBAAkB,CAAC,KAAK,CAAC;IACzB,IAAI,CAACkB,YAAY,CAACqC,OAAO,EAAE;MACzB,OAAO,KAAK;IACd;IACArC,YAAY,CAACqC,OAAO,CAACkF,MAAM,GAAG,eAAe;IAC7CvH,YAAY,CAACqC,OAAO,CAACmF,KAAK,EAAE;EAC9B,CAAC;EAED,MAAMC,iBAAiB,GAAG,MAAM;IAC9B3I,kBAAkB,CAAC,KAAK,CAAC;IACzB,IAAI,CAACkB,YAAY,CAACqC,OAAO,EAAE;MACzB,OAAO,KAAK;IACd;IACArC,YAAY,CAACqC,OAAO,CAACkF,MAAM,GAAG,SAAS;IACvCvH,YAAY,CAACqC,OAAO,CAACmF,KAAK,EAAE;EAC9B,CAAC;EAED,MAAME,iBAAiB,GAAG,MAAM;IAC9B5I,kBAAkB,CAAC,KAAK,CAAC;IACzB,IAAI,CAACkB,YAAY,CAACqC,OAAO,EAAE;MACzB,OAAO,KAAK;IACd;IACArC,YAAY,CAACqC,OAAO,CAACkF,MAAM,GAAG,SAAS;IACvCvH,YAAY,CAACqC,OAAO,CAACmF,KAAK,EAAE;EAC9B,CAAC;EAED,MAAMG,iBAAiB,GAAG,MAAM;IAC9B7I,kBAAkB,CAAC,KAAK,CAAC;IACzB,IAAI,CAACkB,YAAY,CAACqC,OAAO,EAAE;MACzB,OAAO,KAAK;IACd;IACArC,YAAY,CAACqC,OAAO,CAACkF,MAAM,GAAG,SAAS;IACvCvH,YAAY,CAACqC,OAAO,CAACmF,KAAK,EAAE;EAC9B,CAAC;;EAED;EACA,MAAMI,sBAAsB,GAAIpE,KAAK,IAAK;IACxC1E,kBAAkB,CAAC,KAAK,CAAC;IAEzB,MAAM+I,YAAY,GAAGrE,KAAK,CAACsE,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC;IAC5C,IAAIC,YAAY,GAAGH,YAAY,CAACI,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC;IAE/C,IAAIC,MAAM,GAAG,IAAIC,UAAU,EAAE;IAC7BD,MAAM,CAACE,gBAAgB,CACrB,MAAM,EACL7E,KAAK,IAAK;MACT,MAAM8E,OAAO,GAAG,IAAIC,IAAI,CACtB,CAACJ,MAAM,CAACK,MAAM,CAAC,EACfX,YAAY,CAACY,IAAI,EACjBZ,YAAY,CACb;MAED,QAAQG,YAAY,CAAC,CAAC,CAAC;QACrB,KAAK,OAAO;UACV7C,gBAAgB,CAACmD,OAAO,EAAE/N,oBAAoB,CAACmO,KAAK,CAAC;UACrD;QACF,KAAK,OAAO;UACVvD,gBAAgB,CAACmD,OAAO,EAAE/N,oBAAoB,CAACoO,KAAK,CAAC;UACrD;QACF,KAAK,OAAO;UACVxD,gBAAgB,CAACmD,OAAO,EAAE/N,oBAAoB,CAACqO,KAAK,CAAC;UACrD;QACF,KAAK,MAAM;UACTzD,gBAAgB,CAACmD,OAAO,EAAE/N,oBAAoB,CAACkL,IAAI,CAAC;UACpD;QACF;UACEN,gBAAgB,CAACmD,OAAO,EAAE/N,oBAAoB,CAACkL,IAAI,CAAC;UACpD;MAAM;MAEVzF,YAAY,CAACqC,OAAO,CAACwG,KAAK,GAAG,EAAE;IACjC,CAAC,EACD,KAAK,CACN;IAEDV,MAAM,CAACW,iBAAiB,CAACjB,YAAY,CAAC;EACxC,CAAC;;EAED;EACA,MAAMkB,eAAe,GAAG,MAAM;IAC5B7J,iBAAiB,CAAC,KAAK,CAAC;EAC1B,CAAC;;EAED;EACA,MAAM8J,YAAY,GAAG,MAAM;IACzB9J,iBAAiB,CAAC,KAAK,CAAC;EAC1B,CAAC;;EAED;EACA,MAAM+J,cAAc,GAAG,MAAM;IAC3BnK,kBAAkB,CAAC,KAAK,CAAC;IACzBI,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;;EAED;EACA,MAAMgK,0BAA0B,GAAG,MAAM;IACvCpK,kBAAkB,CAAC,KAAK,CAAC;IACzBhF,SAAS,CAACqP,aAAa,CACrB/O,kBAAkB,CAACgP,QAAQ,EAC3BhP,kBAAkB,CAACiP,IAAI,EACvBhP,aAAa,CAAC+O,QAAQ,EACtB;MACEE,QAAQ,EAAErJ,OAAO,CAACoC,OAAO,CAAClE,UAAU;MACpCoL,YAAY,EAAEtJ,OAAO,CAACoC,OAAO,CAACrE;IAChC,CAAC,CACF,CAACgH,KAAK,CAAEC,KAAK,IAAK;MACjBvK,sBAAsB,CAAC8J,IAAI,CAAC9J,sBAAsB,CAACwK,cAAc,EAAED,KAAK,CAAC;IAC3E,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMuE,4BAA4B,GAAG,MAAM;IACzC1K,kBAAkB,CAAC,KAAK,CAAC;IACzBhF,SAAS,CAACqP,aAAa,CACrB/O,kBAAkB,CAACqP,UAAU,EAC7BrP,kBAAkB,CAACiP,IAAI,EACvBhP,aAAa,CAACoP,UAAU,EACxB;MACEH,QAAQ,EAAErJ,OAAO,CAACoC,OAAO,CAAClE,UAAU;MACpCoL,YAAY,EAAEtJ,OAAO,CAACoC,OAAO,CAACrE;IAChC,CAAC,CACF,CAACgH,KAAK,CAAEC,KAAK,IAAK;MACjBvK,sBAAsB,CAAC8J,IAAI,CAAC9J,sBAAsB,CAACwK,cAAc,EAAED,KAAK,CAAC;IAC3E,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMyE,gBAAgB,GAAIlG,KAAK,IAAK;IAClCmD,WAAW,EAAE;IACb,MAAMgD,IAAI,GAAGnG,KAAK,CAACoG,aAAa;IAChC,IAAIvL,YAAY,GAAGsL,IAAI,CAAC3G,WAAW,CAACa,IAAI,EAAE;IAC1C,IAAI,CAACxF,YAAY,CAACyF,MAAM,EAAE;MACxBN,KAAK,CAACoG,aAAa,CAAC5G,WAAW,GAAG3E,YAAY;IAChD;IACAC,eAAe,CAACqL,IAAI,CAACE,SAAS,CAAC;EACjC,CAAC;;EAED;EACA,MAAMC,kBAAkB,GAAItG,KAAK,IAAK;IACpC2D,UAAU,CAACuC,gBAAgB,CAAClG,KAAK,CAAC,EAAE,GAAG,CAAC;EAC1C,CAAC;;EAED;EACA,MAAMuG,kBAAkB,GAAG,MAAM;IAC/BnL,kBAAkB,CAAEoL,qBAAqB,IAAK,CAACA,qBAAqB,CAAC;EACvE,CAAC;EAED,MAAM/G,gBAAgB,GAAG,CAACgH,IAAI,EAAEC,mBAAmB,KAAK;IACtD,IAAIC,GAAG,EAAEC,KAAK;IACd,MAAMC,UAAU,GAAGC,MAAM;IACzB,IAAID,UAAU,CAACE,YAAY,EAAE;MAC3B;MACAJ,GAAG,GAAGE,UAAU,CAACE,YAAY,EAAE;MAC/B,IAAIJ,GAAG,CAACK,UAAU,IAAIL,GAAG,CAACM,UAAU,EAAE;QACpCL,KAAK,GAAGD,GAAG,CAACK,UAAU,CAAC,CAAC,CAAC;QACzBJ,KAAK,CAACM,cAAc,EAAE;QACtB;QACA;QACA;QACA,IAAIC,EAAE,GAAGvB,QAAQ,CAACwB,aAAa,CAAC,KAAK,CAAC;QACtCD,EAAE,CAACd,SAAS,GAAGI,IAAI;QACnB,IAAIY,IAAI,GAAGzB,QAAQ,CAAC0B,sBAAsB,EAAE;UAC1CC,IAAI;UACJC,QAAQ;QACV,OAAQD,IAAI,GAAGJ,EAAE,CAACM,UAAU,EAAG;UAC7BD,QAAQ,GAAGH,IAAI,CAACK,WAAW,CAACH,IAAI,CAAC;QACnC;QACA,IAAII,SAAS,GAAGN,IAAI,CAACI,UAAU;QAC/Bb,KAAK,CAACgB,UAAU,CAACP,IAAI,CAAC;QACtB,IAAIG,QAAQ,EAAE;UACZZ,KAAK,GAAGA,KAAK,CAACiB,UAAU,EAAE;UAC1BjB,KAAK,CAACkB,aAAa,CAACN,QAAQ,CAAC;UAC7B,IAAId,mBAAmB,EAAE;YACvBE,KAAK,CAACmB,cAAc,CAACJ,SAAS,CAAC;UACjC,CAAC,MAAM;YACLf,KAAK,CAACoB,QAAQ,CAAC,IAAI,CAAC;UACtB;UACArB,GAAG,CAACsB,eAAe,EAAE;UACrBtB,GAAG,CAACuB,QAAQ,CAACtB,KAAK,CAAC;QACrB;MACF;IACF,CAAC,MAAM,IAAI,CAACD,GAAG,GAAGf,QAAQ,CAACuC,SAAS,KAAKxB,GAAG,CAAClC,IAAI,KAAK,SAAS,EAAE;MAC/D;MACA,IAAI2D,aAAa,GAAGzB,GAAG,CAAC0B,WAAW,EAAE;MACrCD,aAAa,CAACJ,QAAQ,CAAC,IAAI,CAAC;MAC5BrB,GAAG,CAAC0B,WAAW,EAAE,CAACC,SAAS,CAAC7B,IAAI,CAAC;MACjC,IAAIC,mBAAmB,EAAE;QACvBE,KAAK,GAAGD,GAAG,CAAC0B,WAAW,EAAE;QACzBzB,KAAK,CAAC2B,WAAW,CAAC,cAAc,EAAEH,aAAa,CAAC;QAChDxB,KAAK,CAAC4B,MAAM,EAAE;MAChB;IACF;EACF,CAAC;;EAED;EACA,MAAMC,aAAa,GAAIC,WAAW,IAAK;IACrC,MAAM9J,OAAO,GAAGrC,eAAe,CAACsC,OAAO;IACvCD,OAAO,CAACW,KAAK,EAAE;IACfX,OAAO,CAACyH,SAAS,GAAG,EAAE;IACtB5G,gBAAgB,CAAC5E,YAAY,GAAG6N,WAAW,EAAE,KAAK,CAAC;IACnD5N,eAAe,CAAC8D,OAAO,CAACyH,SAAS,CAAC;EACpC,CAAC;;EAED;EACA,MAAMsC,sBAAsB,GAAI3I,KAAK,IAAK;IACxC1E,kBAAkB,CAAEsN,GAAG,IAAK;MAC1B,OAAO;QAAEC,WAAW,EAAE,CAACD,GAAG,CAACC,WAAW;QAAE7I,KAAK,EAAEA;MAAM,CAAC;IACxD,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAM8I,iBAAiB,GAAI9I,KAAK,IAAK;IACnCpE,gBAAgB,CAAEgN,GAAG,IAAK;MACxB,OAAO;QAAEG,gBAAgB,EAAE,CAACH,GAAG,CAACG,gBAAgB;QAAE/I,KAAK,EAAEA;MAAM,CAAC;IAClE,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMgJ,mBAAmB,GAAG,MAAM;IAChC,IAAI/M,eAAe,CAAC4C,OAAO,CAACoK,cAAc,EAAE;MAC1ChN,eAAe,CAAC4C,OAAO,CAACoK,cAAc,EAAE;IAC1C,CAAC,MAAM;MACL1C,kBAAkB,EAAE;IACtB;EACF,CAAC;;EAED;EACA,MAAM2C,iBAAiB,GAAG,MAAM;IAC9B,IAAI7M,mBAAmB,EAAE;MACvB,OAAO,KAAK;IACd;;IAEA;IACA,MAAM8M,IAAI,GAAG;MACX1E,IAAI,EAAEzN,iBAAiB,CAACoS,YAAY;MACpCC,QAAQ,EAAEpM,mBAAmB,IAAIhD;IACnC,CAAC;;IAED;IACA,IAAIqP,gBAAgB,GAAG,IAAIhT,SAAS,CAACiT,gBAAgB,CACnD5O,UAAU,EACVH,QAAQ,EACR2O,IAAI,CACL;IACD7S,SAAS,CAACkT,oBAAoB,CAACF,gBAAgB,CAAC;;IAEhD;IACAjN,mBAAmB,GAAGsH,UAAU,CAC9BE,YAAY,CAACxH,mBAAmB,CAAC,EACjC7E,gBAAgB,CAAC6E,mBAAmB,CACrC;;IAED;IACA,MAAMoN,OAAO,GAAG;MACdJ,QAAQ,EAAEpM,mBAAmB,IAAIhD;IACnC,CAAC;IACD/C,sBAAsB,CAAC8J,IAAI,CAAC9J,sBAAsB,CAACwS,cAAc,EAAED,OAAO,CAAC;EAC7E,CAAC;;EAED;EACA,MAAME,YAAY,GAAG,MAAM;IACzB,OAAO5O,gBAAgB,gBACrB;MACE,KAAK,EAAE5C,uBAAuB,EAAG;MACjC,SAAS,EAAC,kBAAkB;MAC5B,OAAO,EAAEwQ,sBAAsB,CAACiB,IAAI,CAAC,IAAI,CAAE;MAC3C,KAAK,EAAElT,QAAQ,CAAC,QAAQ,CAAE;MAAA,uBAE1B;QAAG,KAAK,EAAE0B,oBAAoB,CAACwF,KAAK,EAAEf,iBAAiB,EAAEsB,MAAM;MAAE;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,QAClE,GACJ,IAAI;EACV,CAAC;;EAED;EACA,MAAM0L,yBAAyB,GAC7B5L,wBAAwB,aAAxBA,wBAAwB,cAAxBA,wBAAwB,GAAI,IAAIrE,wBAAwB,CAAC,CAAC,CAAC,CAAC;;EAE9D;EACA,MAAMkQ,gBAAgB,GAAG,MAAM;IAAA;IAC7B,OAAOzO,eAAe,CAACwN,WAAW,gBAChC,QAAC,gBAAgB;MACf,QAAQ,EAAC,KAAK;MACd,CAAC,EAAExN,eAAe,aAAfA,eAAe,gDAAfA,eAAe,CAAE2E,KAAK,0DAAtB,sBAAwB+J,OAAQ;MACnC,CAAC,EAAE1O,eAAe,aAAfA,eAAe,iDAAfA,eAAe,CAAE2E,KAAK,2DAAtB,uBAAwBgK,OAAQ;MACnC,KAAK,EAAE9Q,uBAAuB,CAACiF,MAAM,CAAE;MAAA,uBAEvC,QAAC,oBAAoB;QACnB,KAAK,EAAEzH,QAAQ,CAAC,aAAa,CAAE;QAC/B,iBAAiB,2BACfmT,yBAAyB,aAAzBA,yBAAyB,uBAAzBA,yBAAyB,CAAEhQ,WAAW,yEAAIA,WAC3C;QACD,KAAK,EAAEsE,MAAO;QACd,KAAK,EAAElF,gBAAgB,CAACkF,MAAM,CAAE;QAChC,OAAO,EAAE5C;MAAiB;QAAA;QAAA;QAAA;MAAA;IAC1B;MAAA;MAAA;MAAA;IAAA,QACe,GACjB,IAAI;EACV,CAAC;;EAED;EACA,MAAM0O,wBAAwB,GAC5BjM,uBAAuB,aAAvBA,uBAAuB,cAAvBA,uBAAuB,GAAI,IAAItE,uBAAuB,CAAC,CAAC,CAAC,CAAC;EAE5D,MAAMwQ,KAAK,GAAGxT,QAAQ,CAAC,aAAa,CAAC;EACrC,MAAMyT,uBAAuB,GAAGzT,QAAQ,CAAC,UAAU,CAAC;EACpD,MAAM0T,qBAAqB,GAAG1T,QAAQ,CAAC,QAAQ,CAAC;EAChD,MAAM2T,aAAa,GAAG3T,QAAQ,CAAC,YAAY,CAAC;EAC5C,MAAM4T,cAAc,GAAG5T,QAAQ,CAAC,iBAAiB,CAAC;;EAElD;EACA,MAAM6T,UAAU,GAAG,MAAM;IACvB,OAAO9O,cAAc,gBACnB,QAAC,gBAAgB;MACf,YAAY,EAAEA,cAAc,GAAG,IAAI,GAAG,KAAM;MAC5C,KAAK,EAAElC,yBAAyB,CAAC4E,MAAM,EAAE8L,wBAAwB,CAAE;MAAA,uBAEnE,QAAC,mBAAmB;QAClB,YAAY,EAAEA,wBAAwB,CAACO,YAAY,IAAIxQ,SAAU;QACjE,KAAK,EAAEkQ,KAAM;QACb,gBAAgB,EACdD,wBAAwB,CAACQ,gBAAgB,IAAI5Q,WAC9C;QACD,oBAAoB,EAAEnD,QAAQ,CAAC,MAAM,CAAE;QACvC,aAAa,EACXuT,wBAAwB,CAAC/P,aAAa,IAAIA,aAC3C;QACD,cAAc,EAAE,CAAE;QAClB,KAAK,EAAEiE,MAAO;QACd,KAAK,EAAE9E,eAAe,CAAC8E,MAAM,EAAE8L,wBAAwB,CAAE;QACzD,uBAAuB,EAAEE,uBAAwB;QACjD,aAAa,EAAEE,aAAc;QAC7B,qBAAqB,EAAED,qBAAsB;QAC7C,cAAc,EAAEE,cAAe;QAC/B,IAAI,EAAE5N,IAAK;QACX,KAAK,EAAEC,KAAM;QACb,OAAO,EAAEsN,wBAAwB,CAACS,OAAO,IAAInF,eAAgB;QAC7D,YAAY,EAAE0E,wBAAwB,CAACU,YAAY,IAAInF;MAAa;QAAA;QAAA;QAAA;MAAA;IACpE;MAAA;MAAA;MAAA;IAAA,QACe,GACjB,IAAI;EACV,CAAC;;EAED;EACA,MAAMoF,aAAa,GAAG,MAAM;IAAA;IAC1B,OAAO3P,WAAW,gBAChB;MACE,KAAK,EAAEvE,QAAQ,CAAC,SAAS,CAAE;MAC3B,KAAK,EAAE4B,eAAe,EAAG;MACzB,SAAS,EAAC,iBAAiB;MAC3B,OAAO,EAAE0Q,mBAAoB;MAAA,uBAE7B;QACE,KAAK,EAAEzQ,mBAAmB,CACxBqF,KAAK,EACLzC,eAAe,GACX2B,mBAAmB,GACnBb,eAAe,aAAfA,eAAe,gDAAfA,eAAe,CAAE4C,OAAO,0DAAxB,sBAA0BgM,IAAI,EAClC1M,MAAM;MACN;QAAA;QAAA;QAAA;MAAA;IACC;MAAA;MAAA;MAAA;IAAA,QACD,GACJ,IAAI;EACV,CAAC;;EAED;;EAEA,MAAM2M,4BAA4B,GAChCjN,2BAA2B,IAAI,IAAIrE,2BAA2B,CAAC,CAAC,CAAC,CAAC;;EAEpE;EACA,MAAMuR,WAAW,GAAG,MAAM;IAAA;IACxB,OAAOlP,cAAc,gBACnB,QAAC,uBAAuB;MACtB,mBAAmB,EACjBiP,4BAA4B,CAACE,mBAAmB,IAChDtU,QAAQ,CAAC,cAAc,CACxB;MACD,sBAAsB,EACpBoU,4BAA4B,CAACG,sBAAsB,KACnDpP,cAAc,aAAdA,cAAc,gDAAdA,cAAc,CAAE2C,OAAO,0DAAvB,sBAAyBG,IAAI,CAC9B;MACD,YAAY,EAAEmM,4BAA4B,CAACN,YAAY,IAAIxQ,SAAU;MACrE,YAAY,EACV8Q,4BAA4B,CAACI,YAAY,IACzCpL,mBAAmB,CAAC8J,IAAI,CAAC,IAAI,CAC9B;MACD,KAAK,EAAEzL,MAAO;MACd,KAAK,EAAE7E,mBAAmB,CAAC6E,MAAM,EAAE2M,4BAA4B;IAAE;MAAA;MAAA;MAAA;IAAA,QACjE,GACA,IAAI;EACV,CAAC;;EAED;EACA,MAAMK,6BAA6B,GACjCpN,4BAA4B,aAA5BA,4BAA4B,cAA5BA,4BAA4B,GAAI,IAAIpE,4BAA4B,CAAC,CAAC,CAAC,CAAC;;EAEtE;EACA,MAAMyR,WAAW,GAAG,MAAM;IACxB,OAAOjQ,eAAe,gBACpB,QAAC,wBAAwB;MACvB,OAAO,EAAE+G,WAAW,CAAC0H,IAAI,CAAC,IAAI,CAAE;MAChC,OAAO,EAAEuB,6BAA6B,CAACT,OAAO,IAAInE,kBAAmB;MACrE,SAAS,EAAE7P,QAAQ,CAAC,mBAAmB,CAAE;MACzC,SAAS,EAAEA,QAAQ,CAAC,iBAAiB,CAAE;MACvC,WAAW,EAAEA,QAAQ,CAAC,SAAS,CAAE;MACjC,KAAK,EAAEyH,MAAO;MACd,KAAK,EAAEhF,oBAAoB,CAACgF,MAAM,EAAEgN,6BAA6B;IAAE;MAAA;MAAA;MAAA;IAAA,QACnE,GACA,IAAI;EACV,CAAC;;EAED;EACA,MAAME,WAAW,GAAG,MAAM;IACxB,OAAO,CAACnO,SAAS,gBACf;MACE,KAAK,EAAExG,QAAQ,CAAC,OAAO,CAAE;MACzB,KAAK,EAAE8B,gBAAgB,EAAG;MAC1B,SAAS,EAAC,eAAe;MACzB,OAAO,EAAEsQ,iBAAiB,CAACc,IAAI,CAAC,IAAI,CAAE;MAAA,uBAEtC;QAAG,KAAK,EAAEnR,iBAAiB,CAACmF,KAAK,EAAET,YAAY,EAAEgB,MAAM;MAAE;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,QAC1D,GACJ,IAAI;EACV,CAAC;;EAED;EACA,MAAMmN,2BAA2B,GAC/BxN,0BAA0B,IAAI,IAAIrE,0BAA0B,CAAC,CAAC,CAAC,CAAC;;EAElE;EACA,MAAM8R,UAAU,GAAG,MAAM;IACvB,IAAI5P,aAAa,CAACoN,gBAAgB,EAAE;MAAA;MAClC,oBACE,QAAC,gBAAgB;QACf,QAAQ,EAAC,KAAK;QACd,CAAC,EAAEpN,aAAa,aAAbA,aAAa,+CAAbA,aAAa,CAAEqE,KAAK,yDAApB,qBAAsB+J,OAAQ;QACjC,CAAC,EAAEpO,aAAa,aAAbA,aAAa,gDAAbA,aAAa,CAAEqE,KAAK,0DAApB,sBAAsBgK,OAAQ;QACjC,KAAK,EAAE5Q,sBAAsB,CAAC+E,MAAM,EAAEmN,2BAA2B,CAAE;QAAA,uBAEnE,QAAC,sBAAsB;UACrB,KAAK,EAAEnN,MAAO;UACd,KAAK,EAAEnF,kBAAkB,CAACmF,MAAM,EAAEmN,2BAA2B,CAAE;UAC/D,OAAO,EACL,CAAAA,2BAA2B,aAA3BA,2BAA2B,uBAA3BA,2BAA2B,CAAEE,OAAO,KAAI/C,aAAa,CAACmB,IAAI,CAAC,IAAI;QAChE;UAAA;UAAA;UAAA;QAAA;MACD;QAAA;QAAA;QAAA;MAAA,QACe;IAEvB,CAAC,MAAM;MACL,OAAO,IAAI;IACb;EACF,CAAC;;EAED;EACA,MAAM6B,kBAAkB,GAAG,MAAM;IAAA;IAC/B,IAAI,CAACzO,gBAAgB,IAAI,EAACT,eAAe,aAAfA,eAAe,wCAAfA,eAAe,CAAEsC,OAAO,kDAAxB,sBAA0BwH,SAAS,GAAE;MAC7D,oBACE;QACE,KAAK,EAAE3N,gBAAgB,EAAG;QAC1B,SAAS,EAAC,mBAAmB;QAC7B,OAAO,EAAEwQ,iBAAiB,CAACU,IAAI,CAAC,IAAI,CAAE;QAAA,uBAEtC;UACE,GAAG,EAAE3M,mBAAoB;UACzB,GAAG,EAAEA,mBAAoB;UACzB,KAAK,EAAEvG,QAAQ,CAAC,eAAe,CAAE;UACjC,KAAK,EAAEiC,oBAAoB;QAAG;UAAA;UAAA;UAAA;QAAA;MAC9B;QAAA;QAAA;QAAA;MAAA,QACE;IAEV;IACA,OAAO,IAAI;EACb,CAAC;;EAED;EACA,MAAM+S,UAAU,GAAG,MAAM;IACvB,OAAQ7Q,YAAY,aAAZA,YAAY,eAAZA,YAAY,CAAEyF,MAAM,IAAIlD,cAAc,IAAKJ,gBAAgB,gBACjE;MACE,KAAK,EAAEtG,QAAQ,CAAC,cAAc,CAAE;MAChC,KAAK,EAAEkC,eAAe,EAAG;MACzB,SAAS,EAAC,cAAc;MACxB,OAAO,EAAEwH,eAAgB;MAAA,uBAEzB;QACE,KAAK,EAAEvH,gBAAgB,CACrB+E,KAAK,EACLP,iBAAiB,EACjBc,MAAM,EACNtD,YAAY,EACZuB,QAAQ;MACR;QAAA;QAAA;QAAA;MAAA;IACC;MAAA;MAAA;MAAA;IAAA,QACD,GACJ,IAAI;EACV,CAAC;;EAED;EACA,MAAMuP,UAAU,GAAG,MAAM;IACvB,OAAO5P,cAAc,gBACnB;MACE,KAAK,EAAE7D,iBAAiB,CAAC0F,KAAK,EAAEtB,aAAa,EAAE6B,MAAM,CAAE;MACvD,SAAS,EAAC,sBAAsB;MAChC,eAAe,EAAC,MAAM;MACtB,WAAW,EAAEpB,eAAgB;MAC7B,GAAG,EAAEtG,iBAAiB,CAACmV,MAAM,EAAG;MAChC,OAAO,EAAEtF,kBAAmB;MAC5B,MAAM,EAAExD,SAAS,CAAC8G,IAAI,CAAC,IAAI,CAAE;MAC7B,SAAS,EAAE7J,kBAAmB;MAC9B,GAAG,EAAExD;IAAgB;MAAA;MAAA;MAAA;IAAA,QAChB,GACL,IAAI;EACV,CAAC;EAEDzE,KAAK,CACHwC,KAAK,EACL6B,YAAY,EACZ1B,WAAW,EACXG,aAAa,EACb6B,OAAO,EACPvB,cAAc,EACde,eAAe,EACfT,mBAAmB,EACnBQ,iBAAiB,EACjBhB,mBAAmB,EACnByK,cAAc,EACd3B,gBAAgB,EAChBK,iBAAiB,EACjBD,iBAAiB,EACjBD,iBAAiB,EACjByB,0BAA0B,EAC1BM,4BAA4B,EAC5B9D,WAAW,CACZ;EAED,oBACE;IAAK,KAAK,EAAEnK,iBAAiB,CAAC6F,KAAK,EAAEO,MAAM,CAAE;IAAC,SAAS,EAAC,gBAAgB;IAAA,WACrE4M,WAAW,EAAE,EACbK,WAAW,EAAE,EACbG,UAAU,EAAE,EACZzB,gBAAgB,EAAE,eACnB;MACE,IAAI,EAAC,MAAM;MACX,GAAG,EAAEtN,YAAa;MAClB,KAAK,EAAE1D,cAAc,EAAG;MACxB,QAAQ,EAAEsL;IAAuB;MAAA;MAAA;MAAA;IAAA,QACjC,eACF;MAAK,KAAK,EAAEpM,kBAAkB,CAAC4F,KAAK,CAAE;MAAC,SAAS,EAAC,iBAAiB;MAAA,uBAChE;QACE,QAAQ,EAAC,IAAI;QACb,KAAK,EAAE3F,eAAe,CAAC2F,KAAK,EAAEO,MAAM,CAAE;QACtC,SAAS,EAAC,cAAc;QAAA,WAEvBwN,UAAU,EAAE,eAEb;UACE,KAAK,EAAEtT,gBAAgB,CAACiE,aAAa,EAAEqN,YAAY,EAAE,EAAExL,MAAM,CAAE;UAC/D,SAAS,EAAC,eAAe;UAAA,WAExBwL,YAAY,EAAE,eACf;YAAK,SAAS,EAAC,wBAAwB;YAAC,KAAK,EAAE5Q,iBAAiB,EAAG;YAAA,WAChE6R,aAAa,EAAE,EACfS,WAAW,EAAE,EACbI,kBAAkB,EAAE,EACpBC,UAAU,EAAE;UAAA;YAAA;YAAA;YAAA;UAAA,QACT;QAAA;UAAA;UAAA;UAAA;QAAA,QACF;MAAA;QAAA;QAAA;QAAA;MAAA;IACF;MAAA;MAAA;MAAA;IAAA,QACF,EACLnB,UAAU,EAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACT;AAEV,CAAC,kCAAC;AAAC,MA15BGnQ,wBAAwB;AA45B9BA,wBAAwB,CAACyR,YAAY,GAAG;EACtCnP,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE,IAAI;EACXiB,KAAK,EAAE;IACL,GAAG,IAAIzD,UAAU,CAAC;MAChB2R,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE,MAAM;MACdC,UAAU,EAAE,oBAAoB;MAChCC,MAAM,EAAE,8BAA8B;MACtCC,YAAY,EAAE,KAAK;MACnBC,gBAAgB,EAAE;IACpB,CAAC,CAAC;IACFC,mBAAmB,EAAE,4BAA4B;IACjDC,oBAAoB,EAAE,sBAAsB;IAC5CC,kBAAkB,EAAE,wBAAwB;IAC5CC,kBAAkB,EAAE,MAAM;IAC1BC,eAAe,EAAE,EAAE;IACnBC,aAAa,EAAE,EAAE;IACjBC,cAAc,EAAE,EAAE;IAClBC,aAAa,EAAE,wBAAwB;IACvCC,eAAe,EAAE,wBAAwB;IACzCC,oBAAoB,EAAE;EACxB,CAAC;EACDhQ,iBAAiB,EAAEhD,WAAW;EAC9BiD,mBAAmB,EAAE,EAAE;EACvBC,eAAe,EAAErG,QAAQ,CAAC,yBAAyB,CAAC;EACpDkG,cAAc,EAAE,KAAK;EACrBK,mBAAmB,EAAEhD,KAAK;EAC1B+C,gBAAgB,EAAE,KAAK;EACvBE,SAAS,EAAE,KAAK;EAChBC,YAAY,EAAErD,cAAc;EAC5BsD,cAAc,EAAE,IAAI;EACpBC,iBAAiB,EAAEtD,OAAO;EAC1BwD,YAAY,EAAE,IAAI;EAClBC,mBAAmB,EAAE,IAAI;EACzBF,iBAAiB,EAAE,IAAI;EACvBG,qBAAqB,EAAE,IAAI;EAC3BC,sBAAsB,EAAE,IAAI;EAC5BC,0BAA0B,EAAE,IAAI;EAChCE,2BAA2B,EAAE,IAAI;EACjCC,0BAA0B,EAAE,IAAI;EAChCC,4BAA4B,EAAE,IAAI;EAClCC,uBAAuB,EAAE,IAAI;EAC7BC,wBAAwB,EAAE;AAC5B,CAAC;AAED7D,wBAAwB,CAAC0S,SAAS,GAAG;EACnCpQ,IAAI,EAAErG,SAAS,CAAC0W,MAAM;EACtBpQ,KAAK,EAAEtG,SAAS,CAAC0W,MAAM;EACvBnQ,cAAc,EAAEvG,SAAS,CAAC2W,IAAI;EAC9BnQ,iBAAiB,EAAExG,SAAS,CAAC4W,MAAM;EACnCnQ,mBAAmB,EAAEzG,SAAS,CAAC4W,MAAM;EACrClQ,eAAe,EAAE1G,SAAS,CAAC4W,MAAM;EACjCjQ,gBAAgB,EAAE3G,SAAS,CAAC2W,IAAI;EAChC/P,mBAAmB,EAAE5G,SAAS,CAAC4W,MAAM;EACrC/P,SAAS,EAAE7G,SAAS,CAAC2W,IAAI;EACzB7P,YAAY,EAAE9G,SAAS,CAAC4W,MAAM;EAC9B7P,cAAc,EAAE/G,SAAS,CAAC2W,IAAI;EAC9B3P,iBAAiB,EAAEhH,SAAS,CAAC4W,MAAM;EACnC3P,iBAAiB,EAAEjH,SAAS,CAAC6W,IAAI;EACjC3P,YAAY,EAAElH,SAAS,CAAC8W,KAAK;EAC7B3P,mBAAmB,EAAEnH,SAAS,CAAC8W,KAAK;EACpC1P,qBAAqB,EAAEpH,SAAS,CAAC2W,IAAI;EACrCtP,sBAAsB,EAAErH,SAAS,CAAC2W,IAAI;EACtCrP,0BAA0B,EAAEtH,SAAS,CAAC4W,MAAM;EAC5CrP,KAAK,EAAEvH,SAAS,CAAC0W,MAAM;EACvBlP,2BAA2B,EAAExH,SAAS,CAAC0W,MAAM;EAC7CjP,0BAA0B,EAAEzH,SAAS,CAAC0W,MAAM;EAC5ChP,4BAA4B,EAAE1H,SAAS,CAAC0W,MAAM;EAC9C/O,uBAAuB,EAAE3H,SAAS,CAAC0W,MAAM;EACzC9O,wBAAwB,EAAE5H,SAAS,CAAC0W,MAAM;EAC1C7O,KAAK,EAAE7H,SAAS,CAAC0W;AACnB,CAAC;AAED,SAAS3S,wBAAwB;AAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}