{"ast":null,"code":"var _jsxFileName = \"/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/app/guides/ExcludeMessageTypes/index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { MessageTypeConstants, CometChatMessageTemplate } from \"react-ui-kit-testing\";\nimport { Hook } from \"./hook\";\nimport { CometChatMessages } from \"react-ui-kit-testing\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExcludeMessageTypes = () => {\n  _s();\n  const [user, setUser] = React.useState(null);\n  const [group, setGroup] = React.useState(null);\n  const [alignment, setAlignment] = React.useState(\"standard\");\n  const standardAlignmentHandler = () => {\n    setAlignment(\"standard\");\n  };\n  const leftAlignmentHandler = () => {\n    setAlignment(\"leftAligned\");\n  };\n  const _excludeMessageTypes = [\n  // MessageTypeConstants.image,\n  MessageTypeConstants.file,\n  // MessageTypeConstants.poll,\n  MessageTypeConstants.document];\n  const messageConfig = {\n    sentMessageInputData: {\n      thumbnail: false,\n      title: false,\n      time: true,\n      readReceipt: true\n    },\n    receivedMessageInputData: {\n      thumbnail: true,\n      title: true,\n      time: true,\n      readReceipt: false\n    },\n    excludeMessageType: [MessageTypeConstants.text, MessageTypeConstants.image, MessageTypeConstants.file, MessageTypeConstants.poll, MessageTypeConstants.sticker, MessageTypeConstants.document]\n  };\n  let messageTypes = CometChatMessageTemplate.getDefaultTypes();\n  let paymentTemplate = new CometChatMessageTemplate({\n    type: \"payment\",\n    icon: \"assets/credit-card.png\",\n    name: \"Payment\"\n    // customView: this.customView,\n    //actionCallback: this.openPaymentTab,\n  });\n  // messageTypes.push(paymentTemplate);\n\n  const composerConfig = {\n    excludeMessageTypes: _excludeMessageTypes\n  };\n  const messageListConfig = {\n    excludeMessageTypes: [MessageTypeConstants.file, MessageTypeConstants.whiteboard, MessageTypeConstants.document\n    // MessageTypeConstants.poll,\n    ]\n    // messageTypes: messageTypes,\n    // customMessageOptions: [\n    //   MessageOptionConstants.shareMessage,\n    //   MessageOptionConstants.forwardMessage,\n    //   MessageOptionConstants.editMessage,\n    // ],\n    // excludeMessageOptions: [\n    //   MessageOptionConstants.deleteMessage,\n    //   MessageOptionConstants.reactToMessage,\n    //   MessageOptionConstants.editMessage,\n    //   MessageOptionConstants.copyMessage,\n    // ],\n  };\n\n  const excludeMessageTypes = [MessageTypeConstants.file, MessageTypeConstants.whiteboard, MessageTypeConstants.document, MessageTypeConstants.poll, MessageTypeConstants.image, MessageTypeConstants.text];\n  Hook(setGroup, setUser);\n  return user ? /*#__PURE__*/_jsxDEV(\"div\", {\n    style: alignmentContainerStyle(),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CometChatMessages, {\n        user: user,\n        alignment: `${alignment}` //['standard','leftAligned']\n        ,\n        style: {\n          width: \"700px\",\n          height: \"400px\",\n          border: \"1px solid black\"\n        },\n        messageListConfiguration: messageListConfig,\n        messageComposerConfiguration: composerConfig\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: buttonContainerStyle(),\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: standardAlignmentHandler,\n        style: buttonStyle(),\n        children: \"standard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: leftAlignmentHandler,\n        style: buttonStyle(),\n        children: \"Left-Aligned\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this) : null;\n};\n_s(ExcludeMessageTypes, \"bM5t594NOLZGPzvKKio7TTdmVuQ=\");\n_c = ExcludeMessageTypes;\nexport { ExcludeMessageTypes };\nvar _c;\n$RefreshReg$(_c, \"ExcludeMessageTypes\");","map":{"version":3,"names":["React","MessageTypeConstants","CometChatMessageTemplate","Hook","CometChatMessages","ExcludeMessageTypes","user","setUser","useState","group","setGroup","alignment","setAlignment","standardAlignmentHandler","leftAlignmentHandler","_excludeMessageTypes","file","document","messageConfig","sentMessageInputData","thumbnail","title","time","readReceipt","receivedMessageInputData","excludeMessageType","text","image","poll","sticker","messageTypes","getDefaultTypes","paymentTemplate","type","icon","name","composerConfig","excludeMessageTypes","messageListConfig","whiteboard","alignmentContainerStyle","width","height","border","buttonContainerStyle","buttonStyle"],"sources":["/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/app/guides/ExcludeMessageTypes/index.js"],"sourcesContent":["import React from \"react\";\nimport {\n  MessageTypeConstants,\n  CometChatMessageTemplate,\n} from \"react-ui-kit-testing\";\n\nimport { Hook } from \"./hook\";\nimport { CometChatMessages } from \"react-ui-kit-testing\";\n\nconst ExcludeMessageTypes = () => {\n  const [user, setUser] = React.useState(null);\n  const [group, setGroup] = React.useState(null);\n  const [alignment, setAlignment] = React.useState(\"standard\");\n\n  const standardAlignmentHandler = () => {\n    setAlignment(\"standard\");\n  };\n\n  const leftAlignmentHandler = () => {\n    setAlignment(\"leftAligned\");\n  };\n\n  const _excludeMessageTypes = [\n    // MessageTypeConstants.image,\n    MessageTypeConstants.file,\n    // MessageTypeConstants.poll,\n    MessageTypeConstants.document,\n  ];\n\n  const messageConfig = {\n    sentMessageInputData: {\n      thumbnail: false,\n      title: false,\n      time: true,\n      readReceipt: true,\n    },\n    receivedMessageInputData: {\n      thumbnail: true,\n      title: true,\n      time: true,\n      readReceipt: false,\n    },\n    excludeMessageType: [\n      MessageTypeConstants.text,\n      MessageTypeConstants.image,\n      MessageTypeConstants.file,\n      MessageTypeConstants.poll,\n      MessageTypeConstants.sticker,\n      MessageTypeConstants.document,\n    ],\n  };\n\n  let messageTypes = CometChatMessageTemplate.getDefaultTypes();\n  let paymentTemplate = new CometChatMessageTemplate({\n    type: \"payment\",\n    icon: \"assets/credit-card.png\",\n    name: \"Payment\",\n    // customView: this.customView,\n    //actionCallback: this.openPaymentTab,\n  });\n  // messageTypes.push(paymentTemplate);\n\n  const composerConfig = {\n    excludeMessageTypes: _excludeMessageTypes,\n  };\n\n  const messageListConfig = {\n    excludeMessageTypes: [\n      MessageTypeConstants.file,\n      MessageTypeConstants.whiteboard,\n      MessageTypeConstants.document,\n      // MessageTypeConstants.poll,\n    ],\n    // messageTypes: messageTypes,\n    // customMessageOptions: [\n    //   MessageOptionConstants.shareMessage,\n    //   MessageOptionConstants.forwardMessage,\n    //   MessageOptionConstants.editMessage,\n    // ],\n    // excludeMessageOptions: [\n    //   MessageOptionConstants.deleteMessage,\n    //   MessageOptionConstants.reactToMessage,\n    //   MessageOptionConstants.editMessage,\n    //   MessageOptionConstants.copyMessage,\n    // ],\n  };\n\n  const excludeMessageTypes = [\n    MessageTypeConstants.file,\n    MessageTypeConstants.whiteboard,\n    MessageTypeConstants.document,\n    MessageTypeConstants.poll,\n    MessageTypeConstants.image,\n    MessageTypeConstants.text,\n  ];\n\n  Hook(setGroup, setUser);\n\n  return user ? (\n    <div style={alignmentContainerStyle()}>\n      <div>\n        <CometChatMessages\n          user={user}\n          alignment={`${alignment}`} //['standard','leftAligned']\n          style={{ width: \"700px\", height: \"400px\", border: \"1px solid black\" }}\n          messageListConfiguration={messageListConfig}\n          messageComposerConfiguration={composerConfig}\n        />\n      </div>\n      <div style={buttonContainerStyle()}>\n        <button onClick={standardAlignmentHandler} style={buttonStyle()}>\n          standard\n        </button>\n        <button onClick={leftAlignmentHandler} style={buttonStyle()}>\n          Left-Aligned\n        </button>\n      </div>\n    </div>\n  ) : null;\n};\n\nexport { ExcludeMessageTypes };\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,oBAAoB,EACpBC,wBAAwB,QACnB,sBAAsB;AAE7B,SAASC,IAAI,QAAQ,QAAQ;AAC7B,SAASC,iBAAiB,QAAQ,sBAAsB;AAAC;AAEzD,MAAMC,mBAAmB,GAAG,MAAM;EAAA;EAChC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,KAAK,CAACQ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,KAAK,CAACQ,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGZ,KAAK,CAACQ,QAAQ,CAAC,UAAU,CAAC;EAE5D,MAAMK,wBAAwB,GAAG,MAAM;IACrCD,YAAY,CAAC,UAAU,CAAC;EAC1B,CAAC;EAED,MAAME,oBAAoB,GAAG,MAAM;IACjCF,YAAY,CAAC,aAAa,CAAC;EAC7B,CAAC;EAED,MAAMG,oBAAoB,GAAG;EAC3B;EACAd,oBAAoB,CAACe,IAAI;EACzB;EACAf,oBAAoB,CAACgB,QAAQ,CAC9B;EAED,MAAMC,aAAa,GAAG;IACpBC,oBAAoB,EAAE;MACpBC,SAAS,EAAE,KAAK;MAChBC,KAAK,EAAE,KAAK;MACZC,IAAI,EAAE,IAAI;MACVC,WAAW,EAAE;IACf,CAAC;IACDC,wBAAwB,EAAE;MACxBJ,SAAS,EAAE,IAAI;MACfC,KAAK,EAAE,IAAI;MACXC,IAAI,EAAE,IAAI;MACVC,WAAW,EAAE;IACf,CAAC;IACDE,kBAAkB,EAAE,CAClBxB,oBAAoB,CAACyB,IAAI,EACzBzB,oBAAoB,CAAC0B,KAAK,EAC1B1B,oBAAoB,CAACe,IAAI,EACzBf,oBAAoB,CAAC2B,IAAI,EACzB3B,oBAAoB,CAAC4B,OAAO,EAC5B5B,oBAAoB,CAACgB,QAAQ;EAEjC,CAAC;EAED,IAAIa,YAAY,GAAG5B,wBAAwB,CAAC6B,eAAe,EAAE;EAC7D,IAAIC,eAAe,GAAG,IAAI9B,wBAAwB,CAAC;IACjD+B,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE,wBAAwB;IAC9BC,IAAI,EAAE;IACN;IACA;EACF,CAAC,CAAC;EACF;;EAEA,MAAMC,cAAc,GAAG;IACrBC,mBAAmB,EAAEtB;EACvB,CAAC;EAED,MAAMuB,iBAAiB,GAAG;IACxBD,mBAAmB,EAAE,CACnBpC,oBAAoB,CAACe,IAAI,EACzBf,oBAAoB,CAACsC,UAAU,EAC/BtC,oBAAoB,CAACgB;IACrB;IAAA;IAEF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF,CAAC;;EAED,MAAMoB,mBAAmB,GAAG,CAC1BpC,oBAAoB,CAACe,IAAI,EACzBf,oBAAoB,CAACsC,UAAU,EAC/BtC,oBAAoB,CAACgB,QAAQ,EAC7BhB,oBAAoB,CAAC2B,IAAI,EACzB3B,oBAAoB,CAAC0B,KAAK,EAC1B1B,oBAAoB,CAACyB,IAAI,CAC1B;EAEDvB,IAAI,CAACO,QAAQ,EAAEH,OAAO,CAAC;EAEvB,OAAOD,IAAI,gBACT;IAAK,KAAK,EAAEkC,uBAAuB,EAAG;IAAA,wBACpC;MAAA,uBACE,QAAC,iBAAiB;QAChB,IAAI,EAAElC,IAAK;QACX,SAAS,EAAG,GAAEK,SAAU,EAAE,CAAC;QAAA;QAC3B,KAAK,EAAE;UAAE8B,KAAK,EAAE,OAAO;UAAEC,MAAM,EAAE,OAAO;UAAEC,MAAM,EAAE;QAAkB,CAAE;QACtE,wBAAwB,EAAEL,iBAAkB;QAC5C,4BAA4B,EAAEF;MAAe;QAAA;QAAA;QAAA;MAAA;IAC7C;MAAA;MAAA;MAAA;IAAA,QACE,eACN;MAAK,KAAK,EAAEQ,oBAAoB,EAAG;MAAA,wBACjC;QAAQ,OAAO,EAAE/B,wBAAyB;QAAC,KAAK,EAAEgC,WAAW,EAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAEvD,eACT;QAAQ,OAAO,EAAE/B,oBAAqB;QAAC,KAAK,EAAE+B,WAAW,EAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAEnD;IAAA;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QACF,GACJ,IAAI;AACV,CAAC;AAAC,GA9GIxC,mBAAmB;AAAA,KAAnBA,mBAAmB;AAgHzB,SAASA,mBAAmB;AAAG;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}