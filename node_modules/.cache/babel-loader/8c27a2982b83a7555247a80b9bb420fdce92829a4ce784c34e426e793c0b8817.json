{"ast":null,"code":"var _jsxFileName = \"/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/cometchat-pro-react-ui-kit/src/components/Messages/CometChatThreadReplies/index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { localize } from \"../../Shared\";\nimport { replyCountStyle } from \"./style\";\nimport { CometChatListItem } from \"../..\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CometChatThreadReplies = props => {\n  _s();\n  const [reply, setReply] = React.useState(false);\n\n  // const toggleReply = () => {\n  //   context.FeatureRestriction.isThreadedMessagesEnabled()\n  //     .then((response) => {\n  //       if (response !== reply) {\n  //         setReply(response);\n  //       }\n  //     })\n  //     .catch((error) => {\n  //       if (reply !== false) {\n  //         setReply(false);\n  //       }\n  //     });\n  // };\n\n  //React.useEffect(toggleReply);\n\n  const viewThread = () => {\n    setReply(!reply);\n  };\n  const replyCount = props.messageObject.replyCount;\n  const replyText = replyCount === 1 ? `View ${replyCount} ${localize(\"REPLY\")}` : `View ${replyCount} ${localize(\"REPLIES\")}`;\n  let replies = /*#__PURE__*/_jsxDEV(\"span\", {\n    style: replyCountStyle(props),\n    className: \"replycount\",\n    onClick: viewThread,\n    children: replyText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n  if (props.messageObject.hasOwnProperty(\"replyCount\") === false) {\n    replies = null;\n  }\n\n  //if threadedchats feature is disabled\n  // if (reply === false) {\n  //   replies = null;\n  // }\n\n  const listItem = () => {\n    const listItemStyle = {\n      width: \"100%\",\n      height: \"auto\",\n      background: \"transparent\",\n      iconTransform: \"rotate(270deg)\",\n      borderRadius: \"8px\",\n      textFont: \"400 15px Inter, sans-serif\",\n      textColor: \"rgba(20,20,20, 0.8)\",\n      iconTint: \"rgba(20,20,20,0.46)\",\n      iconBackground: \"rgba(20,20,20, 0.46)\"\n    };\n    return /*#__PURE__*/_jsxDEV(CometChatListItem, {\n      iconURL: props.iconURL,\n      tail: props.tail,\n      text: replies,\n      style: listItemStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  };\n  return listItem();\n};\n_s(CometChatThreadReplies, \"8RlpSDhqhkHWKOQeCzqdoPGnXYE=\");\n_c = CometChatThreadReplies;\nCometChatThreadReplies.defaultProps = {\n  messageObject: {},\n  text: \"\",\n  tail: \"\",\n  iconURL: \"\",\n  style: {\n    width: \"\",\n    height: \"\",\n    border: \"0 none\",\n    borderRadius: \"8px\",\n    background: \"transparent\",\n    textFont: \"400 15px Inter,sans-serif\",\n    textColor: \"rgba(20,20,20, .8)\",\n    iconTint: \"rgba(20,20,20,0.6)\",\n    iconBackground: \"rgb(255,255,255)\",\n    iconBorder: \"0 none\",\n    iconBorderRadius: \"8px\"\n  },\n  divider: \"\",\n  onItemClick: () => {}\n};\nCometChatThreadReplies.propTypes = {\n  messageObject: PropTypes.object,\n  text: PropTypes.string,\n  tail: PropTypes.string,\n  iconURL: PropTypes.object,\n  style: PropTypes.object,\n  divider: PropTypes.string,\n  onItemClick: PropTypes.func\n};\nexport { CometChatThreadReplies };\nvar _c;\n$RefreshReg$(_c, \"CometChatThreadReplies\");","map":{"version":3,"names":["React","PropTypes","localize","replyCountStyle","CometChatListItem","CometChatThreadReplies","props","reply","setReply","useState","viewThread","replyCount","messageObject","replyText","replies","hasOwnProperty","listItem","listItemStyle","width","height","background","iconTransform","borderRadius","textFont","textColor","iconTint","iconBackground","iconURL","tail","defaultProps","text","style","border","iconBorder","iconBorderRadius","divider","onItemClick","propTypes","object","string","func"],"sources":["/home/admin1/dev/react/react-sample-guide/sample-react-guides/src/cometchat-pro-react-ui-kit/src/components/Messages/CometChatThreadReplies/index.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { localize } from \"../../Shared\";\nimport { replyCountStyle } from \"./style\";\nimport { CometChatListItem } from \"../..\";\n\nconst CometChatThreadReplies = (props) => {\n  const [reply, setReply] = React.useState(false);\n\n  // const toggleReply = () => {\n  //   context.FeatureRestriction.isThreadedMessagesEnabled()\n  //     .then((response) => {\n  //       if (response !== reply) {\n  //         setReply(response);\n  //       }\n  //     })\n  //     .catch((error) => {\n  //       if (reply !== false) {\n  //         setReply(false);\n  //       }\n  //     });\n  // };\n\n  //React.useEffect(toggleReply);\n\n  const viewThread = () => {\n    setReply(!reply);\n  };\n\n  const replyCount = props.messageObject.replyCount;\n  const replyText =\n    replyCount === 1\n      ? `View ${replyCount} ${localize(\"REPLY\")}`\n      : `View ${replyCount} ${localize(\"REPLIES\")}`;\n\n  let replies = (\n    <span\n      style={replyCountStyle(props)}\n      className=\"replycount\"\n      onClick={viewThread}\n    >\n      {replyText}\n    </span>\n  );\n\n  if (props.messageObject.hasOwnProperty(\"replyCount\") === false) {\n    replies = null;\n  }\n\n  //if threadedchats feature is disabled\n  // if (reply === false) {\n  //   replies = null;\n  // }\n\n  const listItem = () => {\n    const listItemStyle = {\n      width: \"100%\",\n      height: \"auto\",\n      background: \"transparent\",\n      iconTransform: \"rotate(270deg)\",\n      borderRadius: \"8px\",\n      textFont: \"400 15px Inter, sans-serif\",\n      textColor: \"rgba(20,20,20, 0.8)\",\n      iconTint: \"rgba(20,20,20,0.46)\",\n      iconBackground: \"rgba(20,20,20, 0.46)\",\n    };\n    return (\n      <CometChatListItem\n        iconURL={props.iconURL}\n        tail={props.tail}\n        text={replies}\n        style={listItemStyle}\n      />\n    );\n  };\n\n  return listItem();\n};\n\nCometChatThreadReplies.defaultProps = {\n  messageObject: {},\n  text: \"\",\n  tail: \"\",\n  iconURL: \"\",\n  style: {\n    width: \"\",\n    height: \"\",\n    border: \"0 none\",\n    borderRadius: \"8px\",\n    background: \"transparent\",\n    textFont: \"400 15px Inter,sans-serif\",\n    textColor: \"rgba(20,20,20, .8)\",\n    iconTint: \"rgba(20,20,20,0.6)\",\n    iconBackground: \"rgb(255,255,255)\",\n    iconBorder: \"0 none\",\n    iconBorderRadius: \"8px\",\n  },\n  divider: \"\",\n  onItemClick: () => {},\n};\n\nCometChatThreadReplies.propTypes = {\n  messageObject: PropTypes.object,\n  text: PropTypes.string,\n  tail: PropTypes.string,\n  iconURL: PropTypes.object,\n  style: PropTypes.object,\n  divider: PropTypes.string,\n  onItemClick: PropTypes.func,\n};\n\nexport { CometChatThreadReplies };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}