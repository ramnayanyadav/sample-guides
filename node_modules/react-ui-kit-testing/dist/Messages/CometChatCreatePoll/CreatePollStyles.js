"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CreatePollStyles = void 0;
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _Shared = require("../../Shared");
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
/**
 * @class CreatePollStyles
 * @param {String} boxShadow
 * @param {String} titleFont
 * @param {String} titleColor
 * @param {String} closeIconTint
 * @param {String} errorTextFont
 * @param {String} errorTextColor
 * @param {String} questionInputBorder
 * @param {String} questionInputBorderRadius
 * @param {String} questionInputBoxShadow
 * @param {String} questionInputBackground
 * @param {String} questionPlaceholderTextFont
 * @param {String} questionPlaceholderTextColor
 * @param {String} questionInputTextFont
 * @param {String} questionInputTextColor
 * @param {String} answerHelpTextFont
 * @param {String} answerHelpTextColor
 * @param {String} answerInputBoxShadow
 * @param {String} answerInputBackground
 * @param {String} answerInputTextFont
 * @param {String} answerInputTextColor
 * @param {String} answerInputBorder
 * @param {String} answerInputBorderRadius
 * @param {String} answerPlaceholderTextFont
 * @param {String} answerPlaceholderTextColor
 * @param {String} addAnswerButtonTextColor
 * @param {String} addAnswerButtonTextFont
 * @param {String} addAnswerIconTint
 * @param {String} createPollButtonBorder
 * @param {String} createPollButtonBorderRadius
 * @param {String} createPollButtonBackground
 * @param {String} createPollButtonTextFont
 * @param {String} createPollButtonTextColor
 */
var CreatePollStyles = /*#__PURE__*/function (_BaseStyles) {
  (0, _inherits2.default)(CreatePollStyles, _BaseStyles);
  var _super = _createSuper(CreatePollStyles);
  function CreatePollStyles(_ref) {
    var _this;
    var _ref$boxShadow = _ref.boxShadow,
      boxShadow = _ref$boxShadow === void 0 ? "" : _ref$boxShadow,
      _ref$titleFont = _ref.titleFont,
      titleFont = _ref$titleFont === void 0 ? "" : _ref$titleFont,
      _ref$titleColor = _ref.titleColor,
      titleColor = _ref$titleColor === void 0 ? "" : _ref$titleColor,
      _ref$closeIconTint = _ref.closeIconTint,
      closeIconTint = _ref$closeIconTint === void 0 ? "" : _ref$closeIconTint,
      _ref$errorTextFont = _ref.errorTextFont,
      errorTextFont = _ref$errorTextFont === void 0 ? "" : _ref$errorTextFont,
      _ref$errorTextColor = _ref.errorTextColor,
      errorTextColor = _ref$errorTextColor === void 0 ? "" : _ref$errorTextColor,
      _ref$questionInputBor = _ref.questionInputBorder,
      questionInputBorder = _ref$questionInputBor === void 0 ? "" : _ref$questionInputBor,
      _ref$questionInputBor2 = _ref.questionInputBorderRadius,
      questionInputBorderRadius = _ref$questionInputBor2 === void 0 ? "" : _ref$questionInputBor2,
      _ref$questionInputBox = _ref.questionInputBoxShadow,
      questionInputBoxShadow = _ref$questionInputBox === void 0 ? "" : _ref$questionInputBox,
      _ref$questionInputBac = _ref.questionInputBackground,
      questionInputBackground = _ref$questionInputBac === void 0 ? "" : _ref$questionInputBac,
      _ref$questionPlacehol = _ref.questionPlaceholderTextFont,
      questionPlaceholderTextFont = _ref$questionPlacehol === void 0 ? "" : _ref$questionPlacehol,
      _ref$questionPlacehol2 = _ref.questionPlaceholderTextColor,
      questionPlaceholderTextColor = _ref$questionPlacehol2 === void 0 ? "" : _ref$questionPlacehol2,
      _ref$questionInputTex = _ref.questionInputTextFont,
      questionInputTextFont = _ref$questionInputTex === void 0 ? "" : _ref$questionInputTex,
      _ref$questionInputTex2 = _ref.questionInputTextColor,
      questionInputTextColor = _ref$questionInputTex2 === void 0 ? "" : _ref$questionInputTex2,
      _ref$answerHelpTextFo = _ref.answerHelpTextFont,
      answerHelpTextFont = _ref$answerHelpTextFo === void 0 ? "" : _ref$answerHelpTextFo,
      _ref$answerHelpTextCo = _ref.answerHelpTextColor,
      answerHelpTextColor = _ref$answerHelpTextCo === void 0 ? "" : _ref$answerHelpTextCo,
      _ref$answerInputBoxSh = _ref.answerInputBoxShadow,
      answerInputBoxShadow = _ref$answerInputBoxSh === void 0 ? "" : _ref$answerInputBoxSh,
      _ref$answerInputBackg = _ref.answerInputBackground,
      answerInputBackground = _ref$answerInputBackg === void 0 ? "" : _ref$answerInputBackg,
      _ref$answerInputTextF = _ref.answerInputTextFont,
      answerInputTextFont = _ref$answerInputTextF === void 0 ? "" : _ref$answerInputTextF,
      _ref$answerInputTextC = _ref.answerInputTextColor,
      answerInputTextColor = _ref$answerInputTextC === void 0 ? "" : _ref$answerInputTextC,
      _ref$answerInputBorde = _ref.answerInputBorder,
      answerInputBorder = _ref$answerInputBorde === void 0 ? "" : _ref$answerInputBorde,
      _ref$answerInputBorde2 = _ref.answerInputBorderRadius,
      answerInputBorderRadius = _ref$answerInputBorde2 === void 0 ? "" : _ref$answerInputBorde2,
      _ref$answerPlaceholde = _ref.answerPlaceholderTextFont,
      answerPlaceholderTextFont = _ref$answerPlaceholde === void 0 ? "" : _ref$answerPlaceholde,
      _ref$answerPlaceholde2 = _ref.answerPlaceholderTextColor,
      answerPlaceholderTextColor = _ref$answerPlaceholde2 === void 0 ? "" : _ref$answerPlaceholde2,
      _ref$addAnswerButtonT = _ref.addAnswerButtonTextColor,
      addAnswerButtonTextColor = _ref$addAnswerButtonT === void 0 ? "" : _ref$addAnswerButtonT,
      _ref$addAnswerButtonT2 = _ref.addAnswerButtonTextFont,
      addAnswerButtonTextFont = _ref$addAnswerButtonT2 === void 0 ? "" : _ref$addAnswerButtonT2,
      _ref$addAnswerIconTin = _ref.addAnswerIconTint,
      addAnswerIconTint = _ref$addAnswerIconTin === void 0 ? "" : _ref$addAnswerIconTin,
      _ref$createPollButton = _ref.createPollButtonBorder,
      createPollButtonBorder = _ref$createPollButton === void 0 ? "" : _ref$createPollButton,
      _ref$createPollButton2 = _ref.createPollButtonBorderRadius,
      createPollButtonBorderRadius = _ref$createPollButton2 === void 0 ? "" : _ref$createPollButton2,
      _ref$createPollButton3 = _ref.createPollButtonBackground,
      createPollButtonBackground = _ref$createPollButton3 === void 0 ? "" : _ref$createPollButton3,
      _ref$createPollButton4 = _ref.createPollButtonTextFont,
      createPollButtonTextFont = _ref$createPollButton4 === void 0 ? "" : _ref$createPollButton4,
      _ref$createPollButton5 = _ref.createPollButtonTextColor,
      createPollButtonTextColor = _ref$createPollButton5 === void 0 ? "" : _ref$createPollButton5,
      _ref$width = _ref.width,
      width = _ref$width === void 0 ? "360px" : _ref$width,
      _ref$height = _ref.height,
      height = _ref$height === void 0 ? "560px" : _ref$height,
      _ref$border = _ref.border,
      border = _ref$border === void 0 ? "" : _ref$border,
      _ref$borderRadius = _ref.borderRadius,
      borderRadius = _ref$borderRadius === void 0 ? "12px" : _ref$borderRadius,
      _ref$background = _ref.background,
      background = _ref$background === void 0 ? "" : _ref$background,
      _ref$activeBackground = _ref.activeBackground,
      activeBackground = _ref$activeBackground === void 0 ? "" : _ref$activeBackground;
    (0, _classCallCheck2.default)(this, CreatePollStyles);
    _this = _super.call(this, {
      width: width,
      height: height,
      background: background,
      activeBackground: activeBackground,
      border: border,
      borderRadius: borderRadius
    });
    _this.boxShadow = boxShadow;
    _this.titleFont = titleFont;
    _this.titleColor = titleColor;
    _this.closeIconTint = closeIconTint;
    _this.errorTextFont = errorTextFont;
    _this.errorTextColor = errorTextColor;
    _this.questionInputBorder = questionInputBorder;
    _this.questionInputBorderRadius = questionInputBorderRadius;
    _this.questionInputBoxShadow = questionInputBoxShadow;
    _this.questionInputBackground = questionInputBackground;
    _this.questionPlaceholderTextFont = questionPlaceholderTextFont;
    _this.questionPlaceholderTextColor = questionPlaceholderTextColor;
    _this.questionInputTextFont = questionInputTextFont;
    _this.questionInputTextColor = questionInputTextColor;
    _this.answerHelpTextFont = answerHelpTextFont;
    _this.answerHelpTextColor = answerHelpTextColor;
    _this.answerInputBoxShadow = answerInputBoxShadow;
    _this.answerInputBackground = answerInputBackground;
    _this.answerInputTextFont = answerInputTextFont;
    _this.answerInputTextColor = answerInputTextColor;
    _this.answerInputBorder = answerInputBorder;
    _this.answerInputBorderRadius = answerInputBorderRadius;
    _this.answerPlaceholderTextFont = answerPlaceholderTextFont;
    _this.answerPlaceholderTextColor = answerPlaceholderTextColor;
    _this.addAnswerButtonTextColor = addAnswerButtonTextColor;
    _this.addAnswerButtonTextFont = addAnswerButtonTextFont;
    _this.addAnswerIconTint = addAnswerIconTint;
    _this.createPollButtonBorder = createPollButtonBorder;
    _this.createPollButtonBorderRadius = createPollButtonBorderRadius;
    _this.createPollButtonBackground = createPollButtonBackground;
    _this.createPollButtonTextFont = createPollButtonTextFont;
    _this.createPollButtonTextColor = createPollButtonTextColor;
    return _this;
  }
  return (0, _createClass2.default)(CreatePollStyles);
}(_Shared.BaseStyles);
exports.CreatePollStyles = CreatePollStyles;