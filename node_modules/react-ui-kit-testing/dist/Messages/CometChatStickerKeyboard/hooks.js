"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Hooks = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _react = _interopRequireDefault(require("react"));
var _chat = require("@cometchat-pro/chat");
var _Shared = require("../../Shared");
var _ = require("../");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Hooks = function Hooks(props, stickerList, stickerSet, activeStickerSetName, setStickerList, setStickerSet, setActiveStickerList, setActiveStickerSetName, setDecoratorMessage) {
  _react.default.useEffect(function () {
    _chat.CometChat.callExtension(_Shared.ExtensionConstants.stickers, "GET", _Shared.ExtensionURLs.stickers, null).then(function (stickers) {
      // Stickers received
      var customStickers = stickers.hasOwnProperty(_Shared.ExtensionConstants.customStickers) ? stickers[_Shared.ExtensionConstants.customStickers] : [];
      var defaultStickers = stickers.hasOwnProperty(_Shared.ExtensionConstants.defaultStickers) ? stickers[_Shared.ExtensionConstants.defaultStickers] : [];
      defaultStickers.sort(function (a, b) {
        return a.stickerSetOrder - b.stickerSetOrder;
      });
      customStickers.sort(function (a, b) {
        return a.stickerSetOrder - b.stickerSetOrder;
      });
      setStickerList([].concat((0, _toConsumableArray2.default)(defaultStickers), (0, _toConsumableArray2.default)(customStickers)));
      if ((stickerList === null || stickerList === void 0 ? void 0 : stickerList.length) === 0) {
        setDecoratorMessage(props.emptyText || (0, _Shared.localize)("NO_STICKERS_FOUND"));
      }
    }).catch(function (error) {
      setDecoratorMessage(props.errorText || (0, _Shared.localize)("SOMETHING_WRONG"));
      _.CometChatMessageEvents.emit(_.CometChatMessageEvents.onMessageError, error);
    });
  }, []);
  _react.default.useEffect(function () {
    var stickerSet = stickerList === null || stickerList === void 0 ? void 0 : stickerList.reduce(function (r, sticker, index) {
      var stickerSetName = sticker.stickerSetName;
      if (index === 0) {
        setActiveStickerSetName(stickerSetName);
      }
      r[stickerSetName] = [].concat((0, _toConsumableArray2.default)(r[stickerSetName] || []), [_objectSpread({}, sticker)]);
      return r;
    }, {});
    setStickerSet(stickerSet);
  }, [stickerList]);
  _react.default.useEffect(function () {
    if (stickerSet && Object.keys(stickerSet).length) {
      var activeStickerList = [];
      Object.keys(stickerSet).forEach(function (key) {
        stickerSet[key].sort(function (a, b) {
          return a.stickerOrder - b.stickerOrder;
        });
      });
      activeStickerList = stickerSet[activeStickerSetName];
      setActiveStickerList(activeStickerList);
    }
  }, [stickerSet]);
};
exports.Hooks = Hooks;