"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MessageListConfiguration = void 0;
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _MessageBubbleConfiguration = require("../Bubbles/CometChatMessageBubble/MessageBubbleConfiguration");
var _DateConfiguration = require("../../Shared/PrimaryComponents/CometChatConfiguration/DateConfiguration");
var _NewMessageIndicatorConfiguration = require("../CometChatNewMessageIndicator/NewMessageIndicatorConfiguration");
var _SmartRepliesConfiguration = require("../CometChatSmartReplies/SmartRepliesConfiguration");
var _EmojiKeyboardConfiguration = require("../CometChatEmojiKeyboard/EmojiKeyboardConfiguration");
var _MessageInputData = require("../../Shared/InputData/MessageInputData");
var _spinner = _interopRequireDefault(require("./resources/spinner.svg"));
var _Shared = require("../../Shared");
/**
 * @class MessageListConfiguration
 * @description MessageListConfiguration class is used for defining the MessageList templates.
 * @param {String} alignment
 * @param {Array} messageTypes
 * @param {Array} excludeMessageOptions
 * @param {Array} excludeMessageTypes
 * @param {Array} customMessageOptions
 * @param {Number} limit
 * @param {Boolean} onlyUnread
 * @param {Boolean} hideMessagesFromBlockedUsers
 * @param {Boolean} hideDeletedMessages
 * @param {Array} tags
 * @param {String} loadingIconURL
 * @param {String} customView
 * @param {Boolean} hideError
 * @param {Boolean} enableSoundForMessages
 * @param {String} customIncomingMessageSound
 * @param {Object} sentMessageInputData
 * @param {Object} receivedMessageInputData
 * @param {Object} messageBubbleConfiguration
 * @param {Object} dateConfiguration
 * @param {Object} smartRepliesConfiguration
 * @param {Object} emojiKeyboardConfiguration
 */
var MessageListConfiguration = /*#__PURE__*/(0, _createClass2.default)(function MessageListConfiguration(_ref) {
  var _ref$alignment = _ref.alignment,
    alignment = _ref$alignment === void 0 ? _Shared.MessageListAlignmentConstants.standard : _ref$alignment,
    _ref$messageTypes = _ref.messageTypes,
    messageTypes = _ref$messageTypes === void 0 ? null : _ref$messageTypes,
    _ref$excludeMessageTy = _ref.excludeMessageTypes,
    excludeMessageTypes = _ref$excludeMessageTy === void 0 ? null : _ref$excludeMessageTy,
    _ref$excludeMessageOp = _ref.excludeMessageOptions,
    excludeMessageOptions = _ref$excludeMessageOp === void 0 ? null : _ref$excludeMessageOp,
    _ref$customMessageOpt = _ref.customMessageOptions,
    customMessageOptions = _ref$customMessageOpt === void 0 ? null : _ref$customMessageOpt,
    _ref$limit = _ref.limit,
    limit = _ref$limit === void 0 ? 30 : _ref$limit,
    _ref$onlyUnread = _ref.onlyUnread,
    onlyUnread = _ref$onlyUnread === void 0 ? false : _ref$onlyUnread,
    _ref$hideMessagesFrom = _ref.hideMessagesFromBlockedUsers,
    hideMessagesFromBlockedUsers = _ref$hideMessagesFrom === void 0 ? false : _ref$hideMessagesFrom,
    _ref$hideDeletedMessa = _ref.hideDeletedMessages,
    hideDeletedMessages = _ref$hideDeletedMessa === void 0 ? false : _ref$hideDeletedMessa,
    _ref$tags = _ref.tags,
    tags = _ref$tags === void 0 ? null : _ref$tags,
    _ref$loadingIconURL = _ref.loadingIconURL,
    loadingIconURL = _ref$loadingIconURL === void 0 ? _spinner.default : _ref$loadingIconURL,
    _ref$customView = _ref.customView,
    customView = _ref$customView === void 0 ? null : _ref$customView,
    _ref$hideError = _ref.hideError,
    hideError = _ref$hideError === void 0 ? null : _ref$hideError,
    _ref$enableSoundForMe = _ref.enableSoundForMessages,
    enableSoundForMessages = _ref$enableSoundForMe === void 0 ? true : _ref$enableSoundForMe,
    _ref$customIncomingMe = _ref.customIncomingMessageSound,
    customIncomingMessageSound = _ref$customIncomingMe === void 0 ? null : _ref$customIncomingMe,
    _ref$sentMessageInput = _ref.sentMessageInputData,
    sentMessageInputData = _ref$sentMessageInput === void 0 ? new _MessageInputData.MessageInputData({
      id: true,
      title: null,
      thumbnail: null,
      readReceipt: null,
      timestamp: null
    }) : _ref$sentMessageInput,
    _ref$receivedMessageI = _ref.receivedMessageInputData,
    receivedMessageInputData = _ref$receivedMessageI === void 0 ? new _MessageInputData.MessageInputData({
      id: true,
      title: null,
      thumbnail: null,
      readReceipt: null,
      timestamp: null
    }) : _ref$receivedMessageI,
    _ref$messageBubbleCon = _ref.messageBubbleConfiguration,
    messageBubbleConfiguration = _ref$messageBubbleCon === void 0 ? new _MessageBubbleConfiguration.MessageBubbleConfiguration({}) : _ref$messageBubbleCon,
    _ref$newMessageIndica = _ref.newMessageIndicatorConfiguration,
    newMessageIndicatorConfiguration = _ref$newMessageIndica === void 0 ? new _NewMessageIndicatorConfiguration.NewMessageIndicatorConfiguration({}) : _ref$newMessageIndica,
    _ref$dateConfiguratio = _ref.dateConfiguration,
    dateConfiguration = _ref$dateConfiguratio === void 0 ? new _DateConfiguration.DateConfiguration({}) : _ref$dateConfiguratio,
    _ref$smartRepliesConf = _ref.smartRepliesConfiguration,
    smartRepliesConfiguration = _ref$smartRepliesConf === void 0 ? new _SmartRepliesConfiguration.SmartRepliesConfiguration({}) : _ref$smartRepliesConf,
    _ref$emojiKeyboardCon = _ref.emojiKeyboardConfiguration,
    emojiKeyboardConfiguration = _ref$emojiKeyboardCon === void 0 ? new _EmojiKeyboardConfiguration.EmojiKeyboardConfiguration({}) : _ref$emojiKeyboardCon;
  (0, _classCallCheck2.default)(this, MessageListConfiguration);
  this.limit = limit;
  this.onlyUnread = onlyUnread;
  this.messageTypes = messageTypes;
  this.customMessageOptions = customMessageOptions;
  this.alignment = alignment;
  this.tags = tags;
  this.hideError = hideError;
  this.customView = customView;
  this.loadingIconURL = loadingIconURL;
  this.receivedMessageInputData = new _MessageInputData.MessageInputData(receivedMessageInputData || {});
  this.sentMessageInputData = new _MessageInputData.MessageInputData(sentMessageInputData || {});
  this.hideDeletedMessages = hideDeletedMessages;
  this.hideMessagesFromBlockedUsers = hideMessagesFromBlockedUsers;
  this.excludeMessageTypes = excludeMessageTypes;
  this.customIncomingMessageSound = customIncomingMessageSound;
  this.enableSoundForMessages = enableSoundForMessages;
  this.excludeMessageOptions = excludeMessageOptions;
  this.messageBubbleConfiguration = new _MessageBubbleConfiguration.MessageBubbleConfiguration(messageBubbleConfiguration || {});
  this.newMessageIndicatorConfiguration = new _NewMessageIndicatorConfiguration.NewMessageIndicatorConfiguration(newMessageIndicatorConfiguration || {});
  this.dateConfiguration = new _DateConfiguration.DateConfiguration(dateConfiguration || {});
  this.smartRepliesConfiguration = new _SmartRepliesConfiguration.SmartRepliesConfiguration(smartRepliesConfiguration || {});
  this.emojiKeyboardConfiguration = new _EmojiKeyboardConfiguration.EmojiKeyboardConfiguration(emojiKeyboardConfiguration || {});
});
exports.MessageListConfiguration = MessageListConfiguration;