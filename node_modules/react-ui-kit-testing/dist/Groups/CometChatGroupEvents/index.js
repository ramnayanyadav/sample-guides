"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CometChatGroupEvents = void 0;
var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var CometChatGroupEvents = /*#__PURE__*/(0, _createClass2.default)(function CometChatGroupEvents() {
  (0, _classCallCheck2.default)(this, CometChatGroupEvents);
});
exports.CometChatGroupEvents = CometChatGroupEvents;
(0, _defineProperty2.default)(CometChatGroupEvents, "onItemClick", Symbol("onItemClick"));
(0, _defineProperty2.default)(CometChatGroupEvents, "onSearch", Symbol("onSearch"));
(0, _defineProperty2.default)(CometChatGroupEvents, "onCreateGroupIconClick", Symbol("onCreateGroupIconClick"));
(0, _defineProperty2.default)(CometChatGroupEvents, "onGroupCreate", Symbol("onGroupCreate"));
(0, _defineProperty2.default)(CometChatGroupEvents, "onGroupError", Symbol("onGroupError"));
(0, _defineProperty2.default)(CometChatGroupEvents, "onGroupDelete", Symbol("onGroupDelete"));
(0, _defineProperty2.default)(CometChatGroupEvents, "onGroupLeave", Symbol("onGroupLeave"));
(0, _defineProperty2.default)(CometChatGroupEvents, "onGroupMemberLeave", Symbol("onGroupMemberLeave"));
(0, _defineProperty2.default)(CometChatGroupEvents, "onGroupMemberScopeChange", Symbol("onGroupMemberScopeChange"));
(0, _defineProperty2.default)(CometChatGroupEvents, "onGroupMemberBan", Symbol("onGroupMemberBan"));
(0, _defineProperty2.default)(CometChatGroupEvents, "onGroupMemberKick", Symbol("onGroupMemberKick"));
(0, _defineProperty2.default)(CometChatGroupEvents, "onGroupMemberUnban", Symbol("onGroupMemberUnban"));
(0, _defineProperty2.default)(CometChatGroupEvents, "onGroupMemberJoin", Symbol("onGroupMemberJoin"));
(0, _defineProperty2.default)(CometChatGroupEvents, "onGroupMemberAdd", Symbol("onGroupMemberAdd"));
(0, _defineProperty2.default)(CometChatGroupEvents, "onOwnershipChange", Symbol("onOwnershipChange"));
(0, _defineProperty2.default)(CometChatGroupEvents, "_triggers", {});
(0, _defineProperty2.default)(CometChatGroupEvents, "_triggers", {});
(0, _defineProperty2.default)(CometChatGroupEvents, "emit", function () {
  var event, params;
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  if (args.length === 2) {
    event = args[0];
    params = args[1];
  } else if (args.length === 1 && (0, _typeof2.default)(args[0]) === "object") {
    event = args[0].event;
    params = args[0].params;
  } else {
    throw new Error("Invalid arguments");
  }
  if (CometChatGroupEvents._triggers[event]) {
    for (var i in CometChatGroupEvents._triggers[event]) {
      CometChatGroupEvents._triggers[event][i](params);
    }
  }
});
(0, _defineProperty2.default)(CometChatGroupEvents, "removeListener", function () {
  var event, id;
  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    args[_key2] = arguments[_key2];
  }
  if (args.length === 2) {
    event = args[0];
    id = args[1];
  } else if (args.length === 1 && (0, _typeof2.default)(args[0]) === "object") {
    event = args[0].event;
    id = args[0].id;
  } else {
    throw new Error("Invalid arguments");
  }
  if (CometChatGroupEvents._triggers[event]) {
    delete CometChatGroupEvents._triggers[event][id];
  }
});
(0, _defineProperty2.default)(CometChatGroupEvents, "addListener", function () {
  var event, id, callback;
  for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
    args[_key3] = arguments[_key3];
  }
  if (args.length === 3) {
    event = args[0];
    id = args[1];
    callback = args[2];
  } else if (args.length === 1 && (0, _typeof2.default)(args[0]) === "object") {
    event = args[0].event;
    id = args[0].id;
    callback = args[0].callback;
  } else {
    throw new Error("Invalid arguments");
  }
  if (!CometChatGroupEvents._triggers[event]) {
    CometChatGroupEvents._triggers[event] = {};
  }
  CometChatGroupEvents._triggers[event][id] = callback;
});